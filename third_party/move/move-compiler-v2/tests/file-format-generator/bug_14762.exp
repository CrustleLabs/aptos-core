
============ disassembled file-format ==================
// Move bytecode v8
module c0ffee.m {
use 0000000000000000000000000000000000000000000000000000000000000001::option;
use 0000000000000000000000000000000000000000000000000000000000000001::vector;


struct T has copy, drop, store {
	issuer: vector<u8>,
	version: u64
}
struct J has copy, drop, store {
	variant: u64
}
struct S has copy, drop, store {
	entries: vector<T>
}

test(s: &mut S, issuer: vector<u8>): Option<T> /* def_idx: 0 */ {
L2:	v: &vector<T>
L3:	find: bool
L4:	found_index: u64
L5:	len: u64
L6:	i: u64
L7:	index: u64
L8:	found: bool
L9:	ret: Option<T>
B0:
	0: CopyLoc[0](s: &mut S)
	1: ImmBorrowField[0](S.entries: vector<T>)
	2: StLoc[2](v: &vector<T>)
	3: LdFalse
	4: StLoc[3](find: bool)
	5: LdU64(0)
	6: StLoc[4](found_index: u64)
	7: LdU64(0)
	8: CopyLoc[2](v: &vector<T>)
	9: VecLen(2)
	10: StLoc[5](len: u64)
	11: StLoc[6](i: u64)
B1:
	12: CopyLoc[6](i: u64)
	13: CopyLoc[5](len: u64)
	14: Lt
	15: BrFalse(34)
B2:
	16: CopyLoc[2](v: &vector<T>)
	17: CopyLoc[6](i: u64)
	18: VecImmBorrow(2)
	19: ImmBorrowField[1](T.issuer: vector<u8>)
	20: ImmBorrowLoc[1](issuer: vector<u8>)
	21: Eq
	22: BrFalse(29)
B3:
	23: LdTrue
	24: StLoc[3](find: bool)
	25: MoveLoc[6](i: u64)
	26: StLoc[4](found_index: u64)
	27: Branch(36)
B4:
	28: Branch(29)
B5:
	29: MoveLoc[6](i: u64)
	30: LdU64(1)
	31: Add
	32: StLoc[6](i: u64)
	33: Branch(35)
B6:
	34: Branch(36)
B7:
	35: Branch(12)
B8:
	36: Nop
	37: MoveLoc[2](v: &vector<T>)
	38: Pop
	39: MoveLoc[3](find: bool)
	40: MoveLoc[4](found_index: u64)
	41: StLoc[7](index: u64)
	42: StLoc[8](found: bool)
	43: MoveLoc[8](found: bool)
	44: BrFalse(52)
B9:
	45: MoveLoc[0](s: &mut S)
	46: MutBorrowField[0](S.entries: vector<T>)
	47: MoveLoc[7](index: u64)
	48: Call vector::remove<T>(&mut vector<T>, u64): T
	49: Call option::some<T>(T): Option<T>
	50: StLoc[9](ret: Option<T>)
	51: Branch(56)
B10:
	52: MoveLoc[0](s: &mut S)
	53: Pop
	54: Call option::none<T>(): Option<T>
	55: StLoc[9](ret: Option<T>)
B11:
	56: MoveLoc[9](ret: Option<T>)
	57: Ret
}
}
============ bytecode verification succeeded ========
