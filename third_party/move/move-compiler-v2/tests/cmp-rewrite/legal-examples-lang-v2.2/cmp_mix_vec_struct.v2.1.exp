// -- Model dump before env processor pipeline:
module 0xc0ffee::m {
    struct Test1 {
        a: u64,
        b: u64,
    }
    struct Test2 {
        a: vector<u64>,
    }
    struct Test3 {
        a: vector<Test1>,
    }
    public fun test1() {
        {
          let x: Test1 = pack m::Test1(1, 2);
          {
            let y: Test1 = pack m::Test1(1, 2);
            if Eq<Test1>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.a<Test1>(x), select m::Test1.a<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.a<Test1>(x)), Borrow(Immutable)(select m::Test1.a<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.b<Test1>(x), select m::Test1.b<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.b<Test1>(x)), Borrow(Immutable)(select m::Test1.b<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test2() {
        {
          let x: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
          {
            let y: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
            if Eq<Test2>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(select m::Test2.a<Test2>(x), select m::Test2.a<Test2>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), Borrow(Immutable)(select m::Test2.a<Test2>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0)), Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0), vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test3() {
        {
          let x: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2)));
          {
            let y: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2)));
            if Neq<Test3>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test3>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(select m::Test3.a<Test3>(x), select m::Test3.a<Test3>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), Borrow(Immutable)(select m::Test3.a<Test3>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0), vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test4() {
        {
          let x: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
          {
            let y: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
            if Eq<vector<Test1>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 0), vector::borrow<Test1>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 1), vector::borrow<Test1>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test5() {
        {
          let x: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(1, 2, 3)));
          {
            let y: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(2, 2, 2)), pack m::Test2(Vector<u64>(1, 2, 3)));
            if Neq<vector<Test2>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test2>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 0), vector::borrow<Test2>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 1), vector::borrow<Test2>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test6() {
        {
          let x: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
          {
            let y: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))), pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
            if Neq<vector<Test3>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test3>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(Deref(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0), vector::borrow<Test3>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0))), Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0)))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m


// -- Model dump after env processor unused checks:
module 0xc0ffee::m {
    struct Test1 {
        a: u64,
        b: u64,
    }
    struct Test2 {
        a: vector<u64>,
    }
    struct Test3 {
        a: vector<Test1>,
    }
    public fun test1() {
        {
          let x: Test1 = pack m::Test1(1, 2);
          {
            let y: Test1 = pack m::Test1(1, 2);
            if Eq<Test1>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.a<Test1>(x), select m::Test1.a<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.a<Test1>(x)), Borrow(Immutable)(select m::Test1.a<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.b<Test1>(x), select m::Test1.b<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.b<Test1>(x)), Borrow(Immutable)(select m::Test1.b<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test2() {
        {
          let x: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
          {
            let y: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
            if Eq<Test2>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(select m::Test2.a<Test2>(x), select m::Test2.a<Test2>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), Borrow(Immutable)(select m::Test2.a<Test2>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0)), Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0), vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test3() {
        {
          let x: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2)));
          {
            let y: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2)));
            if Neq<Test3>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test3>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(select m::Test3.a<Test3>(x), select m::Test3.a<Test3>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), Borrow(Immutable)(select m::Test3.a<Test3>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0), vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test4() {
        {
          let x: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
          {
            let y: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
            if Eq<vector<Test1>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 0), vector::borrow<Test1>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 1), vector::borrow<Test1>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test5() {
        {
          let x: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(1, 2, 3)));
          {
            let y: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(2, 2, 2)), pack m::Test2(Vector<u64>(1, 2, 3)));
            if Neq<vector<Test2>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test2>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 0), vector::borrow<Test2>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 1), vector::borrow<Test2>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test6() {
        {
          let x: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
          {
            let y: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))), pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
            if Neq<vector<Test3>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test3>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(Deref(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0), vector::borrow<Test3>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0))), Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0)))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m


// -- Model dump after env processor type parameter check:
module 0xc0ffee::m {
    struct Test1 {
        a: u64,
        b: u64,
    }
    struct Test2 {
        a: vector<u64>,
    }
    struct Test3 {
        a: vector<Test1>,
    }
    public fun test1() {
        {
          let x: Test1 = pack m::Test1(1, 2);
          {
            let y: Test1 = pack m::Test1(1, 2);
            if Eq<Test1>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.a<Test1>(x), select m::Test1.a<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.a<Test1>(x)), Borrow(Immutable)(select m::Test1.a<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.b<Test1>(x), select m::Test1.b<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.b<Test1>(x)), Borrow(Immutable)(select m::Test1.b<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test2() {
        {
          let x: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
          {
            let y: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
            if Eq<Test2>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(select m::Test2.a<Test2>(x), select m::Test2.a<Test2>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), Borrow(Immutable)(select m::Test2.a<Test2>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0)), Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0), vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test3() {
        {
          let x: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2)));
          {
            let y: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2)));
            if Neq<Test3>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test3>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(select m::Test3.a<Test3>(x), select m::Test3.a<Test3>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), Borrow(Immutable)(select m::Test3.a<Test3>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0), vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test4() {
        {
          let x: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
          {
            let y: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
            if Eq<vector<Test1>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 0), vector::borrow<Test1>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 1), vector::borrow<Test1>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test5() {
        {
          let x: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(1, 2, 3)));
          {
            let y: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(2, 2, 2)), pack m::Test2(Vector<u64>(1, 2, 3)));
            if Neq<vector<Test2>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test2>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 0), vector::borrow<Test2>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 1), vector::borrow<Test2>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test6() {
        {
          let x: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
          {
            let y: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))), pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
            if Neq<vector<Test3>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test3>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(Deref(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0), vector::borrow<Test3>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0))), Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0)))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m


// -- Model dump after env processor check recursive struct definition:
module 0xc0ffee::m {
    struct Test1 {
        a: u64,
        b: u64,
    }
    struct Test2 {
        a: vector<u64>,
    }
    struct Test3 {
        a: vector<Test1>,
    }
    public fun test1() {
        {
          let x: Test1 = pack m::Test1(1, 2);
          {
            let y: Test1 = pack m::Test1(1, 2);
            if Eq<Test1>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.a<Test1>(x), select m::Test1.a<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.a<Test1>(x)), Borrow(Immutable)(select m::Test1.a<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.b<Test1>(x), select m::Test1.b<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.b<Test1>(x)), Borrow(Immutable)(select m::Test1.b<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test2() {
        {
          let x: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
          {
            let y: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
            if Eq<Test2>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(select m::Test2.a<Test2>(x), select m::Test2.a<Test2>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), Borrow(Immutable)(select m::Test2.a<Test2>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0)), Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0), vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test3() {
        {
          let x: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2)));
          {
            let y: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2)));
            if Neq<Test3>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test3>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(select m::Test3.a<Test3>(x), select m::Test3.a<Test3>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), Borrow(Immutable)(select m::Test3.a<Test3>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0), vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test4() {
        {
          let x: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
          {
            let y: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
            if Eq<vector<Test1>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 0), vector::borrow<Test1>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 1), vector::borrow<Test1>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test5() {
        {
          let x: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(1, 2, 3)));
          {
            let y: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(2, 2, 2)), pack m::Test2(Vector<u64>(1, 2, 3)));
            if Neq<vector<Test2>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test2>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 0), vector::borrow<Test2>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 1), vector::borrow<Test2>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test6() {
        {
          let x: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
          {
            let y: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))), pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
            if Neq<vector<Test3>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test3>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(Deref(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0), vector::borrow<Test3>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0))), Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0)))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m


// -- Model dump after env processor check cyclic type instantiation:
module 0xc0ffee::m {
    struct Test1 {
        a: u64,
        b: u64,
    }
    struct Test2 {
        a: vector<u64>,
    }
    struct Test3 {
        a: vector<Test1>,
    }
    public fun test1() {
        {
          let x: Test1 = pack m::Test1(1, 2);
          {
            let y: Test1 = pack m::Test1(1, 2);
            if Eq<Test1>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.a<Test1>(x), select m::Test1.a<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.a<Test1>(x)), Borrow(Immutable)(select m::Test1.a<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.b<Test1>(x), select m::Test1.b<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.b<Test1>(x)), Borrow(Immutable)(select m::Test1.b<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test2() {
        {
          let x: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
          {
            let y: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
            if Eq<Test2>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(select m::Test2.a<Test2>(x), select m::Test2.a<Test2>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), Borrow(Immutable)(select m::Test2.a<Test2>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0)), Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0), vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test3() {
        {
          let x: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2)));
          {
            let y: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2)));
            if Neq<Test3>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test3>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(select m::Test3.a<Test3>(x), select m::Test3.a<Test3>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), Borrow(Immutable)(select m::Test3.a<Test3>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0), vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test4() {
        {
          let x: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
          {
            let y: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
            if Eq<vector<Test1>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 0), vector::borrow<Test1>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 1), vector::borrow<Test1>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test5() {
        {
          let x: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(1, 2, 3)));
          {
            let y: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(2, 2, 2)), pack m::Test2(Vector<u64>(1, 2, 3)));
            if Neq<vector<Test2>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test2>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 0), vector::borrow<Test2>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 1), vector::borrow<Test2>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test6() {
        {
          let x: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
          {
            let y: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))), pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
            if Neq<vector<Test3>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test3>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(Deref(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0), vector::borrow<Test3>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0))), Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0)))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m


// -- Model dump after env processor unused struct params check:
module 0xc0ffee::m {
    struct Test1 {
        a: u64,
        b: u64,
    }
    struct Test2 {
        a: vector<u64>,
    }
    struct Test3 {
        a: vector<Test1>,
    }
    public fun test1() {
        {
          let x: Test1 = pack m::Test1(1, 2);
          {
            let y: Test1 = pack m::Test1(1, 2);
            if Eq<Test1>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.a<Test1>(x), select m::Test1.a<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.a<Test1>(x)), Borrow(Immutable)(select m::Test1.a<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.b<Test1>(x), select m::Test1.b<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.b<Test1>(x)), Borrow(Immutable)(select m::Test1.b<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test2() {
        {
          let x: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
          {
            let y: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
            if Eq<Test2>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(select m::Test2.a<Test2>(x), select m::Test2.a<Test2>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), Borrow(Immutable)(select m::Test2.a<Test2>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0)), Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0), vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test3() {
        {
          let x: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2)));
          {
            let y: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2)));
            if Neq<Test3>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test3>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(select m::Test3.a<Test3>(x), select m::Test3.a<Test3>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), Borrow(Immutable)(select m::Test3.a<Test3>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0), vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test4() {
        {
          let x: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
          {
            let y: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
            if Eq<vector<Test1>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 0), vector::borrow<Test1>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 1), vector::borrow<Test1>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test5() {
        {
          let x: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(1, 2, 3)));
          {
            let y: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(2, 2, 2)), pack m::Test2(Vector<u64>(1, 2, 3)));
            if Neq<vector<Test2>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test2>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 0), vector::borrow<Test2>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 1), vector::borrow<Test2>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test6() {
        {
          let x: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
          {
            let y: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))), pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
            if Neq<vector<Test3>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test3>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(Deref(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0), vector::borrow<Test3>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0))), Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0)))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m


// -- Model dump after env processor access and use check before inlining:
module 0xc0ffee::m {
    struct Test1 {
        a: u64,
        b: u64,
    }
    struct Test2 {
        a: vector<u64>,
    }
    struct Test3 {
        a: vector<Test1>,
    }
    public fun test1() {
        {
          let x: Test1 = pack m::Test1(1, 2);
          {
            let y: Test1 = pack m::Test1(1, 2);
            if Eq<Test1>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.a<Test1>(x), select m::Test1.a<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.a<Test1>(x)), Borrow(Immutable)(select m::Test1.a<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.b<Test1>(x), select m::Test1.b<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.b<Test1>(x)), Borrow(Immutable)(select m::Test1.b<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test2() {
        {
          let x: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
          {
            let y: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
            if Eq<Test2>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(select m::Test2.a<Test2>(x), select m::Test2.a<Test2>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), Borrow(Immutable)(select m::Test2.a<Test2>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0)), Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0), vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test3() {
        {
          let x: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2)));
          {
            let y: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2)));
            if Neq<Test3>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test3>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(select m::Test3.a<Test3>(x), select m::Test3.a<Test3>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), Borrow(Immutable)(select m::Test3.a<Test3>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0), vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test4() {
        {
          let x: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
          {
            let y: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
            if Eq<vector<Test1>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 0), vector::borrow<Test1>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 1), vector::borrow<Test1>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test5() {
        {
          let x: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(1, 2, 3)));
          {
            let y: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(2, 2, 2)), pack m::Test2(Vector<u64>(1, 2, 3)));
            if Neq<vector<Test2>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test2>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 0), vector::borrow<Test2>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 1), vector::borrow<Test2>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test6() {
        {
          let x: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
          {
            let y: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))), pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
            if Neq<vector<Test3>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test3>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(Deref(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0), vector::borrow<Test3>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0))), Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0)))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m


// -- Model dump after env processor inlining:
module 0xc0ffee::m {
    struct Test1 {
        a: u64,
        b: u64,
    }
    struct Test2 {
        a: vector<u64>,
    }
    struct Test3 {
        a: vector<Test1>,
    }
    public fun test1() {
        {
          let x: Test1 = pack m::Test1(1, 2);
          {
            let y: Test1 = pack m::Test1(1, 2);
            if Eq<Test1>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.a<Test1>(x), select m::Test1.a<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.a<Test1>(x)), Borrow(Immutable)(select m::Test1.a<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.b<Test1>(x), select m::Test1.b<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.b<Test1>(x)), Borrow(Immutable)(select m::Test1.b<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test2() {
        {
          let x: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
          {
            let y: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
            if Eq<Test2>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(select m::Test2.a<Test2>(x), select m::Test2.a<Test2>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), Borrow(Immutable)(select m::Test2.a<Test2>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0)), Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0), vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test3() {
        {
          let x: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2)));
          {
            let y: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2)));
            if Neq<Test3>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test3>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(select m::Test3.a<Test3>(x), select m::Test3.a<Test3>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), Borrow(Immutable)(select m::Test3.a<Test3>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0), vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test4() {
        {
          let x: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
          {
            let y: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
            if Eq<vector<Test1>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 0), vector::borrow<Test1>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 1), vector::borrow<Test1>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test5() {
        {
          let x: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(1, 2, 3)));
          {
            let y: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(2, 2, 2)), pack m::Test2(Vector<u64>(1, 2, 3)));
            if Neq<vector<Test2>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test2>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 0), vector::borrow<Test2>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 1), vector::borrow<Test2>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test6() {
        {
          let x: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
          {
            let y: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))), pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
            if Neq<vector<Test3>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test3>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(Deref(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0), vector::borrow<Test3>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0))), Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0)))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m


// -- Model dump after env processor access and use check after inlining:
module 0xc0ffee::m {
    struct Test1 {
        a: u64,
        b: u64,
    }
    struct Test2 {
        a: vector<u64>,
    }
    struct Test3 {
        a: vector<Test1>,
    }
    public fun test1() {
        {
          let x: Test1 = pack m::Test1(1, 2);
          {
            let y: Test1 = pack m::Test1(1, 2);
            if Eq<Test1>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.a<Test1>(x), select m::Test1.a<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.a<Test1>(x)), Borrow(Immutable)(select m::Test1.a<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.b<Test1>(x), select m::Test1.b<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.b<Test1>(x)), Borrow(Immutable)(select m::Test1.b<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test2() {
        {
          let x: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
          {
            let y: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
            if Eq<Test2>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(select m::Test2.a<Test2>(x), select m::Test2.a<Test2>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), Borrow(Immutable)(select m::Test2.a<Test2>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0)), Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0), vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test3() {
        {
          let x: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2)));
          {
            let y: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2)));
            if Neq<Test3>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test3>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(select m::Test3.a<Test3>(x), select m::Test3.a<Test3>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), Borrow(Immutable)(select m::Test3.a<Test3>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0), vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test4() {
        {
          let x: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
          {
            let y: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
            if Eq<vector<Test1>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 0), vector::borrow<Test1>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 1), vector::borrow<Test1>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test5() {
        {
          let x: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(1, 2, 3)));
          {
            let y: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(2, 2, 2)), pack m::Test2(Vector<u64>(1, 2, 3)));
            if Neq<vector<Test2>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test2>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 0), vector::borrow<Test2>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 1), vector::borrow<Test2>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test6() {
        {
          let x: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
          {
            let y: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))), pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
            if Neq<vector<Test3>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test3>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(Deref(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0), vector::borrow<Test3>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0))), Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0)))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m


// -- Model dump after env processor acquires check:
module 0xc0ffee::m {
    struct Test1 {
        a: u64,
        b: u64,
    }
    struct Test2 {
        a: vector<u64>,
    }
    struct Test3 {
        a: vector<Test1>,
    }
    public fun test1() {
        {
          let x: Test1 = pack m::Test1(1, 2);
          {
            let y: Test1 = pack m::Test1(1, 2);
            if Eq<Test1>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.a<Test1>(x), select m::Test1.a<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.a<Test1>(x)), Borrow(Immutable)(select m::Test1.a<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.b<Test1>(x), select m::Test1.b<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.b<Test1>(x)), Borrow(Immutable)(select m::Test1.b<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test2() {
        {
          let x: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
          {
            let y: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
            if Eq<Test2>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(select m::Test2.a<Test2>(x), select m::Test2.a<Test2>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), Borrow(Immutable)(select m::Test2.a<Test2>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0)), Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0), vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test3() {
        {
          let x: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2)));
          {
            let y: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2)));
            if Neq<Test3>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test3>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(select m::Test3.a<Test3>(x), select m::Test3.a<Test3>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), Borrow(Immutable)(select m::Test3.a<Test3>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0), vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test4() {
        {
          let x: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
          {
            let y: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
            if Eq<vector<Test1>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 0), vector::borrow<Test1>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 1), vector::borrow<Test1>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test5() {
        {
          let x: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(1, 2, 3)));
          {
            let y: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(2, 2, 2)), pack m::Test2(Vector<u64>(1, 2, 3)));
            if Neq<vector<Test2>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test2>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 0), vector::borrow<Test2>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 1), vector::borrow<Test2>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test6() {
        {
          let x: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
          {
            let y: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))), pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
            if Neq<vector<Test3>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test3>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(Deref(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0), vector::borrow<Test3>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0))), Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0)))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m


// -- Model dump after env processor specification checker:
module 0xc0ffee::m {
    struct Test1 {
        a: u64,
        b: u64,
    }
    struct Test2 {
        a: vector<u64>,
    }
    struct Test3 {
        a: vector<Test1>,
    }
    public fun test1() {
        {
          let x: Test1 = pack m::Test1(1, 2);
          {
            let y: Test1 = pack m::Test1(1, 2);
            if Eq<Test1>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.a<Test1>(x), select m::Test1.a<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.a<Test1>(x)), Borrow(Immutable)(select m::Test1.a<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.b<Test1>(x), select m::Test1.b<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.b<Test1>(x)), Borrow(Immutable)(select m::Test1.b<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test2() {
        {
          let x: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
          {
            let y: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
            if Eq<Test2>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(select m::Test2.a<Test2>(x), select m::Test2.a<Test2>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), Borrow(Immutable)(select m::Test2.a<Test2>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0)), Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0), vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test3() {
        {
          let x: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2)));
          {
            let y: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2)));
            if Neq<Test3>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test3>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(select m::Test3.a<Test3>(x), select m::Test3.a<Test3>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), Borrow(Immutable)(select m::Test3.a<Test3>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0), vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test4() {
        {
          let x: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
          {
            let y: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
            if Eq<vector<Test1>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 0), vector::borrow<Test1>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 1), vector::borrow<Test1>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test5() {
        {
          let x: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(1, 2, 3)));
          {
            let y: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(2, 2, 2)), pack m::Test2(Vector<u64>(1, 2, 3)));
            if Neq<vector<Test2>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test2>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 0), vector::borrow<Test2>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 1), vector::borrow<Test2>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test6() {
        {
          let x: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
          {
            let y: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))), pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
            if Neq<vector<Test3>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test3>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(Deref(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0), vector::borrow<Test3>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0))), Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0)))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m


// -- Model dump after env processor specification rewriter:
module 0xc0ffee::m {
    struct Test1 {
        a: u64,
        b: u64,
    }
    struct Test2 {
        a: vector<u64>,
    }
    struct Test3 {
        a: vector<Test1>,
    }
    public fun test1() {
        {
          let x: Test1 = pack m::Test1(1, 2);
          {
            let y: Test1 = pack m::Test1(1, 2);
            if Eq<Test1>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.a<Test1>(x), select m::Test1.a<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.a<Test1>(x)), Borrow(Immutable)(select m::Test1.a<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.b<Test1>(x), select m::Test1.b<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.b<Test1>(x)), Borrow(Immutable)(select m::Test1.b<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test2() {
        {
          let x: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
          {
            let y: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
            if Eq<Test2>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(select m::Test2.a<Test2>(x), select m::Test2.a<Test2>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), Borrow(Immutable)(select m::Test2.a<Test2>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0)), Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0), vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test3() {
        {
          let x: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2)));
          {
            let y: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2)));
            if Neq<Test3>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test3>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(select m::Test3.a<Test3>(x), select m::Test3.a<Test3>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), Borrow(Immutable)(select m::Test3.a<Test3>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0), vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test4() {
        {
          let x: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
          {
            let y: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
            if Eq<vector<Test1>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 0), vector::borrow<Test1>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 1), vector::borrow<Test1>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test5() {
        {
          let x: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(1, 2, 3)));
          {
            let y: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(2, 2, 2)), pack m::Test2(Vector<u64>(1, 2, 3)));
            if Neq<vector<Test2>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test2>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 0), vector::borrow<Test2>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 1), vector::borrow<Test2>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test6() {
        {
          let x: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
          {
            let y: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))), pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
            if Neq<vector<Test3>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test3>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(Deref(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0), vector::borrow<Test3>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0))), Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0)))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m


============ bytecode before first stackless bytecode pipeline ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
  0: $t1 := 1
  1: $t2 := 2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
  3: $t4 := 1
  4: $t5 := 2
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  6: $t7 := infer($t0)
  7: $t6 := ==($t7, $t3)
  8: if ($t6) goto 9 else goto 11
  9: label L0
 10: goto 14
 11: label L1
 12: $t8 := 0
 13: abort($t8)
 14: label L2
 15: $t10 := borrow_local($t0)
 16: $t11 := borrow_local($t3)
 17: $t9 := ==($t10, $t11)
 18: if ($t9) goto 19 else goto 21
 19: label L3
 20: goto 24
 21: label L4
 22: $t12 := 0
 23: abort($t12)
 24: label L5
 25: $t15 := borrow_local($t0)
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
 27: $t14 := read_ref($t16)
 28: $t18 := borrow_local($t3)
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
 30: $t17 := read_ref($t19)
 31: $t13 := ==($t14, $t17)
 32: if ($t13) goto 33 else goto 35
 33: label L6
 34: goto 38
 35: label L7
 36: $t20 := 0
 37: abort($t20)
 38: label L8
 39: $t23 := borrow_local($t0)
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
 41: $t25 := borrow_local($t3)
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
 43: $t21 := ==($t22, $t24)
 44: if ($t21) goto 45 else goto 47
 45: label L9
 46: goto 50
 47: label L10
 48: $t26 := 0
 49: abort($t26)
 50: label L11
 51: $t29 := borrow_local($t0)
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
 53: $t28 := read_ref($t30)
 54: $t32 := borrow_local($t3)
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
 56: $t31 := read_ref($t33)
 57: $t27 := ==($t28, $t31)
 58: if ($t27) goto 59 else goto 61
 59: label L12
 60: goto 64
 61: label L13
 62: $t34 := 0
 63: abort($t34)
 64: label L14
 65: $t37 := borrow_local($t0)
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
 67: $t39 := borrow_local($t3)
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
 69: $t35 := ==($t36, $t38)
 70: if ($t35) goto 71 else goto 73
 71: label L15
 72: goto 76
 73: label L16
 74: $t40 := 0
 75: abort($t40)
 76: label L17
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test2
     var $t6: vector<u64>
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: bool
     var $t11: 0xc0ffee::m::Test2
     var $t12: u64
     var $t13: bool
     var $t14: &0xc0ffee::m::Test2
     var $t15: &0xc0ffee::m::Test2
     var $t16: u64
     var $t17: bool
     var $t18: vector<u64>
     var $t19: &0xc0ffee::m::Test2
     var $t20: &vector<u64>
     var $t21: vector<u64>
     var $t22: &0xc0ffee::m::Test2
     var $t23: &vector<u64>
     var $t24: u64
     var $t25: bool
     var $t26: &vector<u64>
     var $t27: &0xc0ffee::m::Test2
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: bool
     var $t32: u64
     var $t33: &u64
     var $t34: &vector<u64>
     var $t35: &0xc0ffee::m::Test2
     var $t36: u64
     var $t37: u64
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &u64
     var $t45: &vector<u64>
     var $t46: &0xc0ffee::m::Test2
     var $t47: u64
     var $t48: &u64
     var $t49: &vector<u64>
     var $t50: &0xc0ffee::m::Test2
     var $t51: u64
     var $t52: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t4 := 3
  3: $t1 := vector($t2, $t3, $t4)
  4: $t0 := pack 0xc0ffee::m::Test2($t1)
  5: $t7 := 1
  6: $t8 := 2
  7: $t9 := 3
  8: $t6 := vector($t7, $t8, $t9)
  9: $t5 := pack 0xc0ffee::m::Test2($t6)
 10: $t11 := infer($t0)
 11: $t10 := ==($t11, $t5)
 12: if ($t10) goto 13 else goto 15
 13: label L0
 14: goto 18
 15: label L1
 16: $t12 := 0
 17: abort($t12)
 18: label L2
 19: $t14 := borrow_local($t0)
 20: $t15 := borrow_local($t5)
 21: $t13 := ==($t14, $t15)
 22: if ($t13) goto 23 else goto 25
 23: label L3
 24: goto 28
 25: label L4
 26: $t16 := 0
 27: abort($t16)
 28: label L5
 29: $t19 := borrow_local($t0)
 30: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t19)
 31: $t18 := read_ref($t20)
 32: $t22 := borrow_local($t5)
 33: $t23 := borrow_field<0xc0ffee::m::Test2>.a($t22)
 34: $t21 := read_ref($t23)
 35: $t17 := ==($t18, $t21)
 36: if ($t17) goto 37 else goto 39
 37: label L6
 38: goto 42
 39: label L7
 40: $t24 := 0
 41: abort($t24)
 42: label L8
 43: $t27 := borrow_local($t0)
 44: $t26 := borrow_field<0xc0ffee::m::Test2>.a($t27)
 45: $t29 := borrow_local($t5)
 46: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
 47: $t25 := ==($t26, $t28)
 48: if ($t25) goto 49 else goto 51
 49: label L9
 50: goto 54
 51: label L10
 52: $t30 := 0
 53: abort($t30)
 54: label L11
 55: $t35 := borrow_local($t0)
 56: $t34 := borrow_field<0xc0ffee::m::Test2>.a($t35)
 57: $t36 := 0
 58: $t33 := vector::borrow<u64>($t34, $t36)
 59: $t32 := read_ref($t33)
 60: $t40 := borrow_local($t5)
 61: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
 62: $t41 := 0
 63: $t38 := vector::borrow<u64>($t39, $t41)
 64: $t37 := read_ref($t38)
 65: $t31 := ==($t32, $t37)
 66: if ($t31) goto 67 else goto 69
 67: label L12
 68: goto 72
 69: label L13
 70: $t42 := 0
 71: abort($t42)
 72: label L14
 73: $t46 := borrow_local($t0)
 74: $t45 := borrow_field<0xc0ffee::m::Test2>.a($t46)
 75: $t47 := 0
 76: $t44 := vector::borrow<u64>($t45, $t47)
 77: $t50 := borrow_local($t5)
 78: $t49 := borrow_field<0xc0ffee::m::Test2>.a($t50)
 79: $t51 := 0
 80: $t48 := vector::borrow<u64>($t49, $t51)
 81: $t43 := ==($t44, $t48)
 82: if ($t43) goto 83 else goto 85
 83: label L15
 84: goto 88
 85: label L16
 86: $t52 := 0
 87: abort($t52)
 88: label L17
 89: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  3: $t1 := vector($t2)
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
  5: $t8 := 1
  6: $t9 := 2
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  8: $t11 := 1
  9: $t12 := 2
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
 11: $t6 := vector($t7, $t10)
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
 13: $t14 := infer($t0)
 14: $t13 := !=($t14, $t5)
 15: if ($t13) goto 16 else goto 18
 16: label L0
 17: goto 21
 18: label L1
 19: $t15 := 0
 20: abort($t15)
 21: label L2
 22: $t17 := borrow_local($t0)
 23: $t18 := borrow_local($t5)
 24: $t16 := !=($t17, $t18)
 25: if ($t16) goto 26 else goto 28
 26: label L3
 27: goto 31
 28: label L4
 29: $t19 := 0
 30: abort($t19)
 31: label L5
 32: $t22 := borrow_local($t0)
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
 34: $t21 := read_ref($t23)
 35: $t25 := borrow_local($t5)
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
 37: $t24 := read_ref($t26)
 38: $t20 := !=($t21, $t24)
 39: if ($t20) goto 40 else goto 42
 40: label L6
 41: goto 45
 42: label L7
 43: $t27 := 0
 44: abort($t27)
 45: label L8
 46: $t30 := borrow_local($t0)
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
 48: $t32 := borrow_local($t5)
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
 50: $t28 := !=($t29, $t31)
 51: if ($t28) goto 52 else goto 54
 52: label L9
 53: goto 57
 54: label L10
 55: $t33 := 0
 56: abort($t33)
 57: label L11
 58: $t38 := borrow_local($t0)
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
 60: $t39 := 0
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
 62: $t35 := read_ref($t36)
 63: $t43 := borrow_local($t5)
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
 65: $t44 := 0
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
 67: $t40 := read_ref($t41)
 68: $t34 := ==($t35, $t40)
 69: if ($t34) goto 70 else goto 72
 70: label L12
 71: goto 75
 72: label L13
 73: $t45 := 0
 74: abort($t45)
 75: label L14
 76: $t49 := borrow_local($t0)
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
 78: $t50 := 0
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
 80: $t53 := borrow_local($t5)
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 82: $t54 := 0
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
 84: $t46 := ==($t47, $t51)
 85: if ($t46) goto 86 else goto 88
 86: label L15
 87: goto 91
 88: label L16
 89: $t55 := 0
 90: abort($t55)
 91: label L17
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
  3: $t5 := 1
  4: $t6 := 2
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
  6: $t8 := 1
  7: $t9 := 2
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  9: $t0 := vector($t1, $t4, $t7)
 10: $t12 := 1
 11: $t13 := 2
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
 13: $t15 := 1
 14: $t16 := 2
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
 16: $t18 := 1
 17: $t19 := 2
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
 19: $t10 := vector($t11, $t14, $t17)
 20: $t21 := infer($t0)
 21: $t20 := ==($t21, $t10)
 22: if ($t20) goto 23 else goto 25
 23: label L0
 24: goto 28
 25: label L1
 26: $t22 := 0
 27: abort($t22)
 28: label L2
 29: $t24 := borrow_local($t0)
 30: $t25 := borrow_local($t10)
 31: $t23 := ==($t24, $t25)
 32: if ($t23) goto 33 else goto 35
 33: label L3
 34: goto 38
 35: label L4
 36: $t26 := 0
 37: abort($t26)
 38: label L5
 39: $t30 := borrow_local($t0)
 40: $t31 := 0
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
 42: $t28 := read_ref($t29)
 43: $t34 := borrow_local($t10)
 44: $t35 := 0
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
 46: $t32 := read_ref($t33)
 47: $t27 := ==($t28, $t32)
 48: if ($t27) goto 49 else goto 51
 49: label L6
 50: goto 54
 51: label L7
 52: $t36 := 0
 53: abort($t36)
 54: label L8
 55: $t39 := borrow_local($t0)
 56: $t40 := 0
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
 58: $t42 := borrow_local($t10)
 59: $t43 := 0
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
 61: $t37 := ==($t38, $t41)
 62: if ($t37) goto 63 else goto 65
 63: label L9
 64: goto 68
 65: label L10
 66: $t44 := 0
 67: abort($t44)
 68: label L11
 69: $t48 := borrow_local($t0)
 70: $t49 := 1
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
 72: $t46 := read_ref($t47)
 73: $t52 := borrow_local($t10)
 74: $t53 := 1
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
 76: $t50 := read_ref($t51)
 77: $t45 := ==($t46, $t50)
 78: if ($t45) goto 79 else goto 81
 79: label L12
 80: goto 84
 81: label L13
 82: $t54 := 0
 83: abort($t54)
 84: label L14
 85: $t57 := borrow_local($t0)
 86: $t58 := 1
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
 88: $t60 := borrow_local($t10)
 89: $t61 := 1
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
 91: $t55 := ==($t56, $t59)
 92: if ($t55) goto 93 else goto 95
 93: label L15
 94: goto 98
 95: label L16
 96: $t62 := 0
 97: abort($t62)
 98: label L17
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: vector<0xc0ffee::m::Test2>
     var $t12: 0xc0ffee::m::Test2
     var $t13: vector<u64>
     var $t14: u64
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test2
     var $t18: vector<u64>
     var $t19: u64
     var $t20: u64
     var $t21: u64
     var $t22: 0xc0ffee::m::Test2
     var $t23: vector<u64>
     var $t24: u64
     var $t25: u64
     var $t26: u64
     var $t27: bool
     var $t28: vector<0xc0ffee::m::Test2>
     var $t29: u64
     var $t30: bool
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: &vector<0xc0ffee::m::Test2>
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test2
     var $t36: &0xc0ffee::m::Test2
     var $t37: &vector<0xc0ffee::m::Test2>
     var $t38: u64
     var $t39: 0xc0ffee::m::Test2
     var $t40: &0xc0ffee::m::Test2
     var $t41: &vector<0xc0ffee::m::Test2>
     var $t42: u64
     var $t43: u64
     var $t44: bool
     var $t45: &0xc0ffee::m::Test2
     var $t46: &vector<0xc0ffee::m::Test2>
     var $t47: u64
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: u64
     var $t52: bool
     var $t53: 0xc0ffee::m::Test2
     var $t54: &0xc0ffee::m::Test2
     var $t55: &vector<0xc0ffee::m::Test2>
     var $t56: u64
     var $t57: 0xc0ffee::m::Test2
     var $t58: &0xc0ffee::m::Test2
     var $t59: &vector<0xc0ffee::m::Test2>
     var $t60: u64
     var $t61: u64
     var $t62: bool
     var $t63: &0xc0ffee::m::Test2
     var $t64: &vector<0xc0ffee::m::Test2>
     var $t65: u64
     var $t66: &0xc0ffee::m::Test2
     var $t67: &vector<0xc0ffee::m::Test2>
     var $t68: u64
     var $t69: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t5 := 3
  3: $t2 := vector($t3, $t4, $t5)
  4: $t1 := pack 0xc0ffee::m::Test2($t2)
  5: $t8 := 1
  6: $t9 := 2
  7: $t10 := 3
  8: $t7 := vector($t8, $t9, $t10)
  9: $t6 := pack 0xc0ffee::m::Test2($t7)
 10: $t0 := vector($t1, $t6)
 11: $t14 := 1
 12: $t15 := 2
 13: $t16 := 3
 14: $t13 := vector($t14, $t15, $t16)
 15: $t12 := pack 0xc0ffee::m::Test2($t13)
 16: $t19 := 2
 17: $t20 := 2
 18: $t21 := 2
 19: $t18 := vector($t19, $t20, $t21)
 20: $t17 := pack 0xc0ffee::m::Test2($t18)
 21: $t24 := 1
 22: $t25 := 2
 23: $t26 := 3
 24: $t23 := vector($t24, $t25, $t26)
 25: $t22 := pack 0xc0ffee::m::Test2($t23)
 26: $t11 := vector($t12, $t17, $t22)
 27: $t28 := infer($t0)
 28: $t27 := !=($t28, $t11)
 29: if ($t27) goto 30 else goto 32
 30: label L0
 31: goto 35
 32: label L1
 33: $t29 := 0
 34: abort($t29)
 35: label L2
 36: $t31 := borrow_local($t0)
 37: $t32 := borrow_local($t11)
 38: $t30 := !=($t31, $t32)
 39: if ($t30) goto 40 else goto 42
 40: label L3
 41: goto 45
 42: label L4
 43: $t33 := 0
 44: abort($t33)
 45: label L5
 46: $t37 := borrow_local($t0)
 47: $t38 := 0
 48: $t36 := vector::borrow<0xc0ffee::m::Test2>($t37, $t38)
 49: $t35 := read_ref($t36)
 50: $t41 := borrow_local($t11)
 51: $t42 := 0
 52: $t40 := vector::borrow<0xc0ffee::m::Test2>($t41, $t42)
 53: $t39 := read_ref($t40)
 54: $t34 := ==($t35, $t39)
 55: if ($t34) goto 56 else goto 58
 56: label L6
 57: goto 61
 58: label L7
 59: $t43 := 0
 60: abort($t43)
 61: label L8
 62: $t46 := borrow_local($t0)
 63: $t47 := 0
 64: $t45 := vector::borrow<0xc0ffee::m::Test2>($t46, $t47)
 65: $t49 := borrow_local($t11)
 66: $t50 := 0
 67: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
 68: $t44 := ==($t45, $t48)
 69: if ($t44) goto 70 else goto 72
 70: label L9
 71: goto 75
 72: label L10
 73: $t51 := 0
 74: abort($t51)
 75: label L11
 76: $t55 := borrow_local($t0)
 77: $t56 := 1
 78: $t54 := vector::borrow<0xc0ffee::m::Test2>($t55, $t56)
 79: $t53 := read_ref($t54)
 80: $t59 := borrow_local($t11)
 81: $t60 := 1
 82: $t58 := vector::borrow<0xc0ffee::m::Test2>($t59, $t60)
 83: $t57 := read_ref($t58)
 84: $t52 := !=($t53, $t57)
 85: if ($t52) goto 86 else goto 88
 86: label L12
 87: goto 91
 88: label L13
 89: $t61 := 0
 90: abort($t61)
 91: label L14
 92: $t64 := borrow_local($t0)
 93: $t65 := 1
 94: $t63 := vector::borrow<0xc0ffee::m::Test2>($t64, $t65)
 95: $t67 := borrow_local($t11)
 96: $t68 := 1
 97: $t66 := vector::borrow<0xc0ffee::m::Test2>($t67, $t68)
 98: $t62 := !=($t63, $t66)
 99: if ($t62) goto 100 else goto 102
100: label L15
101: goto 105
102: label L16
103: $t69 := 0
104: abort($t69)
105: label L17
106: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
  0: $t4 := 1
  1: $t5 := 2
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  3: $t7 := 1
  4: $t8 := 2
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
  6: $t2 := vector($t3, $t6)
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
  8: $t0 := vector($t1)
  9: $t13 := 1
 10: $t14 := 2
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
 12: $t16 := 1
 13: $t17 := 2
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
 15: $t11 := vector($t12, $t15)
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
 17: $t21 := 1
 18: $t22 := 2
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
 20: $t24 := 1
 21: $t25 := 2
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
 23: $t19 := vector($t20, $t23)
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
 25: $t9 := vector($t10, $t18)
 26: $t27 := infer($t0)
 27: $t26 := !=($t27, $t9)
 28: if ($t26) goto 29 else goto 31
 29: label L0
 30: goto 34
 31: label L1
 32: $t28 := 0
 33: abort($t28)
 34: label L2
 35: $t30 := borrow_local($t0)
 36: $t31 := borrow_local($t9)
 37: $t29 := !=($t30, $t31)
 38: if ($t29) goto 39 else goto 41
 39: label L3
 40: goto 44
 41: label L4
 42: $t32 := 0
 43: abort($t32)
 44: label L5
 45: $t36 := borrow_local($t0)
 46: $t37 := 0
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
 48: $t34 := read_ref($t35)
 49: $t40 := borrow_local($t9)
 50: $t41 := 0
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
 52: $t38 := read_ref($t39)
 53: $t33 := ==($t34, $t38)
 54: if ($t33) goto 55 else goto 57
 55: label L6
 56: goto 60
 57: label L7
 58: $t42 := 0
 59: abort($t42)
 60: label L8
 61: $t45 := borrow_local($t0)
 62: $t46 := 0
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
 64: $t48 := borrow_local($t9)
 65: $t49 := 0
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
 67: $t43 := ==($t44, $t47)
 68: if ($t43) goto 69 else goto 71
 69: label L9
 70: goto 74
 71: label L10
 72: $t50 := 0
 73: abort($t50)
 74: label L11
 75: $t54 := borrow_local($t0)
 76: $t55 := 0
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 79: $t52 := read_ref($t56)
 80: $t59 := borrow_local($t9)
 81: $t60 := 0
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
 84: $t57 := read_ref($t61)
 85: $t51 := ==($t52, $t57)
 86: if ($t51) goto 87 else goto 89
 87: label L12
 88: goto 92
 89: label L13
 90: $t62 := 0
 91: abort($t62)
 92: label L14
 93: $t66 := borrow_local($t0)
 94: $t67 := 0
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
 97: $t70 := borrow_local($t9)
 98: $t71 := 0
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
101: $t63 := ==($t64, $t68)
102: if ($t63) goto 103 else goto 105
103: label L15
104: goto 108
105: label L16
106: $t72 := 0
107: abort($t72)
108: label L17
109: return ()
}

============ after SplitCriticalEdgesProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
  0: $t1 := 1
  1: $t2 := 2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
  3: $t4 := 1
  4: $t5 := 2
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  6: $t7 := infer($t0)
  7: $t6 := ==($t7, $t3)
  8: if ($t6) goto 9 else goto 11
  9: label L0
 10: goto 14
 11: label L1
 12: $t8 := 0
 13: abort($t8)
 14: label L2
 15: $t10 := borrow_local($t0)
 16: $t11 := borrow_local($t3)
 17: $t9 := ==($t10, $t11)
 18: if ($t9) goto 19 else goto 21
 19: label L3
 20: goto 24
 21: label L4
 22: $t12 := 0
 23: abort($t12)
 24: label L5
 25: $t15 := borrow_local($t0)
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
 27: $t14 := read_ref($t16)
 28: $t18 := borrow_local($t3)
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
 30: $t17 := read_ref($t19)
 31: $t13 := ==($t14, $t17)
 32: if ($t13) goto 33 else goto 35
 33: label L6
 34: goto 38
 35: label L7
 36: $t20 := 0
 37: abort($t20)
 38: label L8
 39: $t23 := borrow_local($t0)
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
 41: $t25 := borrow_local($t3)
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
 43: $t21 := ==($t22, $t24)
 44: if ($t21) goto 45 else goto 47
 45: label L9
 46: goto 50
 47: label L10
 48: $t26 := 0
 49: abort($t26)
 50: label L11
 51: $t29 := borrow_local($t0)
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
 53: $t28 := read_ref($t30)
 54: $t32 := borrow_local($t3)
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
 56: $t31 := read_ref($t33)
 57: $t27 := ==($t28, $t31)
 58: if ($t27) goto 59 else goto 61
 59: label L12
 60: goto 64
 61: label L13
 62: $t34 := 0
 63: abort($t34)
 64: label L14
 65: $t37 := borrow_local($t0)
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
 67: $t39 := borrow_local($t3)
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
 69: $t35 := ==($t36, $t38)
 70: if ($t35) goto 71 else goto 73
 71: label L15
 72: goto 76
 73: label L16
 74: $t40 := 0
 75: abort($t40)
 76: label L17
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test2
     var $t6: vector<u64>
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: bool
     var $t11: 0xc0ffee::m::Test2
     var $t12: u64
     var $t13: bool
     var $t14: &0xc0ffee::m::Test2
     var $t15: &0xc0ffee::m::Test2
     var $t16: u64
     var $t17: bool
     var $t18: vector<u64>
     var $t19: &0xc0ffee::m::Test2
     var $t20: &vector<u64>
     var $t21: vector<u64>
     var $t22: &0xc0ffee::m::Test2
     var $t23: &vector<u64>
     var $t24: u64
     var $t25: bool
     var $t26: &vector<u64>
     var $t27: &0xc0ffee::m::Test2
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: bool
     var $t32: u64
     var $t33: &u64
     var $t34: &vector<u64>
     var $t35: &0xc0ffee::m::Test2
     var $t36: u64
     var $t37: u64
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &u64
     var $t45: &vector<u64>
     var $t46: &0xc0ffee::m::Test2
     var $t47: u64
     var $t48: &u64
     var $t49: &vector<u64>
     var $t50: &0xc0ffee::m::Test2
     var $t51: u64
     var $t52: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t4 := 3
  3: $t1 := vector($t2, $t3, $t4)
  4: $t0 := pack 0xc0ffee::m::Test2($t1)
  5: $t7 := 1
  6: $t8 := 2
  7: $t9 := 3
  8: $t6 := vector($t7, $t8, $t9)
  9: $t5 := pack 0xc0ffee::m::Test2($t6)
 10: $t11 := infer($t0)
 11: $t10 := ==($t11, $t5)
 12: if ($t10) goto 13 else goto 15
 13: label L0
 14: goto 18
 15: label L1
 16: $t12 := 0
 17: abort($t12)
 18: label L2
 19: $t14 := borrow_local($t0)
 20: $t15 := borrow_local($t5)
 21: $t13 := ==($t14, $t15)
 22: if ($t13) goto 23 else goto 25
 23: label L3
 24: goto 28
 25: label L4
 26: $t16 := 0
 27: abort($t16)
 28: label L5
 29: $t19 := borrow_local($t0)
 30: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t19)
 31: $t18 := read_ref($t20)
 32: $t22 := borrow_local($t5)
 33: $t23 := borrow_field<0xc0ffee::m::Test2>.a($t22)
 34: $t21 := read_ref($t23)
 35: $t17 := ==($t18, $t21)
 36: if ($t17) goto 37 else goto 39
 37: label L6
 38: goto 42
 39: label L7
 40: $t24 := 0
 41: abort($t24)
 42: label L8
 43: $t27 := borrow_local($t0)
 44: $t26 := borrow_field<0xc0ffee::m::Test2>.a($t27)
 45: $t29 := borrow_local($t5)
 46: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
 47: $t25 := ==($t26, $t28)
 48: if ($t25) goto 49 else goto 51
 49: label L9
 50: goto 54
 51: label L10
 52: $t30 := 0
 53: abort($t30)
 54: label L11
 55: $t35 := borrow_local($t0)
 56: $t34 := borrow_field<0xc0ffee::m::Test2>.a($t35)
 57: $t36 := 0
 58: $t33 := vector::borrow<u64>($t34, $t36)
 59: $t32 := read_ref($t33)
 60: $t40 := borrow_local($t5)
 61: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
 62: $t41 := 0
 63: $t38 := vector::borrow<u64>($t39, $t41)
 64: $t37 := read_ref($t38)
 65: $t31 := ==($t32, $t37)
 66: if ($t31) goto 67 else goto 69
 67: label L12
 68: goto 72
 69: label L13
 70: $t42 := 0
 71: abort($t42)
 72: label L14
 73: $t46 := borrow_local($t0)
 74: $t45 := borrow_field<0xc0ffee::m::Test2>.a($t46)
 75: $t47 := 0
 76: $t44 := vector::borrow<u64>($t45, $t47)
 77: $t50 := borrow_local($t5)
 78: $t49 := borrow_field<0xc0ffee::m::Test2>.a($t50)
 79: $t51 := 0
 80: $t48 := vector::borrow<u64>($t49, $t51)
 81: $t43 := ==($t44, $t48)
 82: if ($t43) goto 83 else goto 85
 83: label L15
 84: goto 88
 85: label L16
 86: $t52 := 0
 87: abort($t52)
 88: label L17
 89: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  3: $t1 := vector($t2)
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
  5: $t8 := 1
  6: $t9 := 2
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  8: $t11 := 1
  9: $t12 := 2
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
 11: $t6 := vector($t7, $t10)
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
 13: $t14 := infer($t0)
 14: $t13 := !=($t14, $t5)
 15: if ($t13) goto 16 else goto 18
 16: label L0
 17: goto 21
 18: label L1
 19: $t15 := 0
 20: abort($t15)
 21: label L2
 22: $t17 := borrow_local($t0)
 23: $t18 := borrow_local($t5)
 24: $t16 := !=($t17, $t18)
 25: if ($t16) goto 26 else goto 28
 26: label L3
 27: goto 31
 28: label L4
 29: $t19 := 0
 30: abort($t19)
 31: label L5
 32: $t22 := borrow_local($t0)
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
 34: $t21 := read_ref($t23)
 35: $t25 := borrow_local($t5)
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
 37: $t24 := read_ref($t26)
 38: $t20 := !=($t21, $t24)
 39: if ($t20) goto 40 else goto 42
 40: label L6
 41: goto 45
 42: label L7
 43: $t27 := 0
 44: abort($t27)
 45: label L8
 46: $t30 := borrow_local($t0)
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
 48: $t32 := borrow_local($t5)
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
 50: $t28 := !=($t29, $t31)
 51: if ($t28) goto 52 else goto 54
 52: label L9
 53: goto 57
 54: label L10
 55: $t33 := 0
 56: abort($t33)
 57: label L11
 58: $t38 := borrow_local($t0)
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
 60: $t39 := 0
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
 62: $t35 := read_ref($t36)
 63: $t43 := borrow_local($t5)
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
 65: $t44 := 0
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
 67: $t40 := read_ref($t41)
 68: $t34 := ==($t35, $t40)
 69: if ($t34) goto 70 else goto 72
 70: label L12
 71: goto 75
 72: label L13
 73: $t45 := 0
 74: abort($t45)
 75: label L14
 76: $t49 := borrow_local($t0)
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
 78: $t50 := 0
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
 80: $t53 := borrow_local($t5)
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 82: $t54 := 0
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
 84: $t46 := ==($t47, $t51)
 85: if ($t46) goto 86 else goto 88
 86: label L15
 87: goto 91
 88: label L16
 89: $t55 := 0
 90: abort($t55)
 91: label L17
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
  3: $t5 := 1
  4: $t6 := 2
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
  6: $t8 := 1
  7: $t9 := 2
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  9: $t0 := vector($t1, $t4, $t7)
 10: $t12 := 1
 11: $t13 := 2
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
 13: $t15 := 1
 14: $t16 := 2
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
 16: $t18 := 1
 17: $t19 := 2
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
 19: $t10 := vector($t11, $t14, $t17)
 20: $t21 := infer($t0)
 21: $t20 := ==($t21, $t10)
 22: if ($t20) goto 23 else goto 25
 23: label L0
 24: goto 28
 25: label L1
 26: $t22 := 0
 27: abort($t22)
 28: label L2
 29: $t24 := borrow_local($t0)
 30: $t25 := borrow_local($t10)
 31: $t23 := ==($t24, $t25)
 32: if ($t23) goto 33 else goto 35
 33: label L3
 34: goto 38
 35: label L4
 36: $t26 := 0
 37: abort($t26)
 38: label L5
 39: $t30 := borrow_local($t0)
 40: $t31 := 0
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
 42: $t28 := read_ref($t29)
 43: $t34 := borrow_local($t10)
 44: $t35 := 0
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
 46: $t32 := read_ref($t33)
 47: $t27 := ==($t28, $t32)
 48: if ($t27) goto 49 else goto 51
 49: label L6
 50: goto 54
 51: label L7
 52: $t36 := 0
 53: abort($t36)
 54: label L8
 55: $t39 := borrow_local($t0)
 56: $t40 := 0
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
 58: $t42 := borrow_local($t10)
 59: $t43 := 0
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
 61: $t37 := ==($t38, $t41)
 62: if ($t37) goto 63 else goto 65
 63: label L9
 64: goto 68
 65: label L10
 66: $t44 := 0
 67: abort($t44)
 68: label L11
 69: $t48 := borrow_local($t0)
 70: $t49 := 1
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
 72: $t46 := read_ref($t47)
 73: $t52 := borrow_local($t10)
 74: $t53 := 1
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
 76: $t50 := read_ref($t51)
 77: $t45 := ==($t46, $t50)
 78: if ($t45) goto 79 else goto 81
 79: label L12
 80: goto 84
 81: label L13
 82: $t54 := 0
 83: abort($t54)
 84: label L14
 85: $t57 := borrow_local($t0)
 86: $t58 := 1
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
 88: $t60 := borrow_local($t10)
 89: $t61 := 1
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
 91: $t55 := ==($t56, $t59)
 92: if ($t55) goto 93 else goto 95
 93: label L15
 94: goto 98
 95: label L16
 96: $t62 := 0
 97: abort($t62)
 98: label L17
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: vector<0xc0ffee::m::Test2>
     var $t12: 0xc0ffee::m::Test2
     var $t13: vector<u64>
     var $t14: u64
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test2
     var $t18: vector<u64>
     var $t19: u64
     var $t20: u64
     var $t21: u64
     var $t22: 0xc0ffee::m::Test2
     var $t23: vector<u64>
     var $t24: u64
     var $t25: u64
     var $t26: u64
     var $t27: bool
     var $t28: vector<0xc0ffee::m::Test2>
     var $t29: u64
     var $t30: bool
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: &vector<0xc0ffee::m::Test2>
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test2
     var $t36: &0xc0ffee::m::Test2
     var $t37: &vector<0xc0ffee::m::Test2>
     var $t38: u64
     var $t39: 0xc0ffee::m::Test2
     var $t40: &0xc0ffee::m::Test2
     var $t41: &vector<0xc0ffee::m::Test2>
     var $t42: u64
     var $t43: u64
     var $t44: bool
     var $t45: &0xc0ffee::m::Test2
     var $t46: &vector<0xc0ffee::m::Test2>
     var $t47: u64
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: u64
     var $t52: bool
     var $t53: 0xc0ffee::m::Test2
     var $t54: &0xc0ffee::m::Test2
     var $t55: &vector<0xc0ffee::m::Test2>
     var $t56: u64
     var $t57: 0xc0ffee::m::Test2
     var $t58: &0xc0ffee::m::Test2
     var $t59: &vector<0xc0ffee::m::Test2>
     var $t60: u64
     var $t61: u64
     var $t62: bool
     var $t63: &0xc0ffee::m::Test2
     var $t64: &vector<0xc0ffee::m::Test2>
     var $t65: u64
     var $t66: &0xc0ffee::m::Test2
     var $t67: &vector<0xc0ffee::m::Test2>
     var $t68: u64
     var $t69: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t5 := 3
  3: $t2 := vector($t3, $t4, $t5)
  4: $t1 := pack 0xc0ffee::m::Test2($t2)
  5: $t8 := 1
  6: $t9 := 2
  7: $t10 := 3
  8: $t7 := vector($t8, $t9, $t10)
  9: $t6 := pack 0xc0ffee::m::Test2($t7)
 10: $t0 := vector($t1, $t6)
 11: $t14 := 1
 12: $t15 := 2
 13: $t16 := 3
 14: $t13 := vector($t14, $t15, $t16)
 15: $t12 := pack 0xc0ffee::m::Test2($t13)
 16: $t19 := 2
 17: $t20 := 2
 18: $t21 := 2
 19: $t18 := vector($t19, $t20, $t21)
 20: $t17 := pack 0xc0ffee::m::Test2($t18)
 21: $t24 := 1
 22: $t25 := 2
 23: $t26 := 3
 24: $t23 := vector($t24, $t25, $t26)
 25: $t22 := pack 0xc0ffee::m::Test2($t23)
 26: $t11 := vector($t12, $t17, $t22)
 27: $t28 := infer($t0)
 28: $t27 := !=($t28, $t11)
 29: if ($t27) goto 30 else goto 32
 30: label L0
 31: goto 35
 32: label L1
 33: $t29 := 0
 34: abort($t29)
 35: label L2
 36: $t31 := borrow_local($t0)
 37: $t32 := borrow_local($t11)
 38: $t30 := !=($t31, $t32)
 39: if ($t30) goto 40 else goto 42
 40: label L3
 41: goto 45
 42: label L4
 43: $t33 := 0
 44: abort($t33)
 45: label L5
 46: $t37 := borrow_local($t0)
 47: $t38 := 0
 48: $t36 := vector::borrow<0xc0ffee::m::Test2>($t37, $t38)
 49: $t35 := read_ref($t36)
 50: $t41 := borrow_local($t11)
 51: $t42 := 0
 52: $t40 := vector::borrow<0xc0ffee::m::Test2>($t41, $t42)
 53: $t39 := read_ref($t40)
 54: $t34 := ==($t35, $t39)
 55: if ($t34) goto 56 else goto 58
 56: label L6
 57: goto 61
 58: label L7
 59: $t43 := 0
 60: abort($t43)
 61: label L8
 62: $t46 := borrow_local($t0)
 63: $t47 := 0
 64: $t45 := vector::borrow<0xc0ffee::m::Test2>($t46, $t47)
 65: $t49 := borrow_local($t11)
 66: $t50 := 0
 67: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
 68: $t44 := ==($t45, $t48)
 69: if ($t44) goto 70 else goto 72
 70: label L9
 71: goto 75
 72: label L10
 73: $t51 := 0
 74: abort($t51)
 75: label L11
 76: $t55 := borrow_local($t0)
 77: $t56 := 1
 78: $t54 := vector::borrow<0xc0ffee::m::Test2>($t55, $t56)
 79: $t53 := read_ref($t54)
 80: $t59 := borrow_local($t11)
 81: $t60 := 1
 82: $t58 := vector::borrow<0xc0ffee::m::Test2>($t59, $t60)
 83: $t57 := read_ref($t58)
 84: $t52 := !=($t53, $t57)
 85: if ($t52) goto 86 else goto 88
 86: label L12
 87: goto 91
 88: label L13
 89: $t61 := 0
 90: abort($t61)
 91: label L14
 92: $t64 := borrow_local($t0)
 93: $t65 := 1
 94: $t63 := vector::borrow<0xc0ffee::m::Test2>($t64, $t65)
 95: $t67 := borrow_local($t11)
 96: $t68 := 1
 97: $t66 := vector::borrow<0xc0ffee::m::Test2>($t67, $t68)
 98: $t62 := !=($t63, $t66)
 99: if ($t62) goto 100 else goto 102
100: label L15
101: goto 105
102: label L16
103: $t69 := 0
104: abort($t69)
105: label L17
106: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
  0: $t4 := 1
  1: $t5 := 2
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  3: $t7 := 1
  4: $t8 := 2
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
  6: $t2 := vector($t3, $t6)
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
  8: $t0 := vector($t1)
  9: $t13 := 1
 10: $t14 := 2
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
 12: $t16 := 1
 13: $t17 := 2
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
 15: $t11 := vector($t12, $t15)
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
 17: $t21 := 1
 18: $t22 := 2
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
 20: $t24 := 1
 21: $t25 := 2
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
 23: $t19 := vector($t20, $t23)
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
 25: $t9 := vector($t10, $t18)
 26: $t27 := infer($t0)
 27: $t26 := !=($t27, $t9)
 28: if ($t26) goto 29 else goto 31
 29: label L0
 30: goto 34
 31: label L1
 32: $t28 := 0
 33: abort($t28)
 34: label L2
 35: $t30 := borrow_local($t0)
 36: $t31 := borrow_local($t9)
 37: $t29 := !=($t30, $t31)
 38: if ($t29) goto 39 else goto 41
 39: label L3
 40: goto 44
 41: label L4
 42: $t32 := 0
 43: abort($t32)
 44: label L5
 45: $t36 := borrow_local($t0)
 46: $t37 := 0
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
 48: $t34 := read_ref($t35)
 49: $t40 := borrow_local($t9)
 50: $t41 := 0
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
 52: $t38 := read_ref($t39)
 53: $t33 := ==($t34, $t38)
 54: if ($t33) goto 55 else goto 57
 55: label L6
 56: goto 60
 57: label L7
 58: $t42 := 0
 59: abort($t42)
 60: label L8
 61: $t45 := borrow_local($t0)
 62: $t46 := 0
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
 64: $t48 := borrow_local($t9)
 65: $t49 := 0
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
 67: $t43 := ==($t44, $t47)
 68: if ($t43) goto 69 else goto 71
 69: label L9
 70: goto 74
 71: label L10
 72: $t50 := 0
 73: abort($t50)
 74: label L11
 75: $t54 := borrow_local($t0)
 76: $t55 := 0
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 79: $t52 := read_ref($t56)
 80: $t59 := borrow_local($t9)
 81: $t60 := 0
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
 84: $t57 := read_ref($t61)
 85: $t51 := ==($t52, $t57)
 86: if ($t51) goto 87 else goto 89
 87: label L12
 88: goto 92
 89: label L13
 90: $t62 := 0
 91: abort($t62)
 92: label L14
 93: $t66 := borrow_local($t0)
 94: $t67 := 0
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
 97: $t70 := borrow_local($t9)
 98: $t71 := 0
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
101: $t63 := ==($t64, $t68)
102: if ($t63) goto 103 else goto 105
103: label L15
104: goto 108
105: label L16
106: $t72 := 0
107: abort($t72)
108: label L17
109: return ()
}

============ after uninitialized_use_checker: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
  0: $t1 := 1
  1: $t2 := 2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
  3: $t4 := 1
  4: $t5 := 2
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  6: $t7 := infer($t0)
  7: $t6 := ==($t7, $t3)
  8: if ($t6) goto 9 else goto 11
  9: label L0
 10: goto 14
 11: label L1
 12: $t8 := 0
 13: abort($t8)
 14: label L2
 15: $t10 := borrow_local($t0)
 16: $t11 := borrow_local($t3)
 17: $t9 := ==($t10, $t11)
 18: if ($t9) goto 19 else goto 21
 19: label L3
 20: goto 24
 21: label L4
 22: $t12 := 0
 23: abort($t12)
 24: label L5
 25: $t15 := borrow_local($t0)
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
 27: $t14 := read_ref($t16)
 28: $t18 := borrow_local($t3)
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
 30: $t17 := read_ref($t19)
 31: $t13 := ==($t14, $t17)
 32: if ($t13) goto 33 else goto 35
 33: label L6
 34: goto 38
 35: label L7
 36: $t20 := 0
 37: abort($t20)
 38: label L8
 39: $t23 := borrow_local($t0)
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
 41: $t25 := borrow_local($t3)
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
 43: $t21 := ==($t22, $t24)
 44: if ($t21) goto 45 else goto 47
 45: label L9
 46: goto 50
 47: label L10
 48: $t26 := 0
 49: abort($t26)
 50: label L11
 51: $t29 := borrow_local($t0)
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
 53: $t28 := read_ref($t30)
 54: $t32 := borrow_local($t3)
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
 56: $t31 := read_ref($t33)
 57: $t27 := ==($t28, $t31)
 58: if ($t27) goto 59 else goto 61
 59: label L12
 60: goto 64
 61: label L13
 62: $t34 := 0
 63: abort($t34)
 64: label L14
 65: $t37 := borrow_local($t0)
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
 67: $t39 := borrow_local($t3)
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
 69: $t35 := ==($t36, $t38)
 70: if ($t35) goto 71 else goto 73
 71: label L15
 72: goto 76
 73: label L16
 74: $t40 := 0
 75: abort($t40)
 76: label L17
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test2
     var $t6: vector<u64>
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: bool
     var $t11: 0xc0ffee::m::Test2
     var $t12: u64
     var $t13: bool
     var $t14: &0xc0ffee::m::Test2
     var $t15: &0xc0ffee::m::Test2
     var $t16: u64
     var $t17: bool
     var $t18: vector<u64>
     var $t19: &0xc0ffee::m::Test2
     var $t20: &vector<u64>
     var $t21: vector<u64>
     var $t22: &0xc0ffee::m::Test2
     var $t23: &vector<u64>
     var $t24: u64
     var $t25: bool
     var $t26: &vector<u64>
     var $t27: &0xc0ffee::m::Test2
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: bool
     var $t32: u64
     var $t33: &u64
     var $t34: &vector<u64>
     var $t35: &0xc0ffee::m::Test2
     var $t36: u64
     var $t37: u64
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &u64
     var $t45: &vector<u64>
     var $t46: &0xc0ffee::m::Test2
     var $t47: u64
     var $t48: &u64
     var $t49: &vector<u64>
     var $t50: &0xc0ffee::m::Test2
     var $t51: u64
     var $t52: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t4 := 3
  3: $t1 := vector($t2, $t3, $t4)
  4: $t0 := pack 0xc0ffee::m::Test2($t1)
  5: $t7 := 1
  6: $t8 := 2
  7: $t9 := 3
  8: $t6 := vector($t7, $t8, $t9)
  9: $t5 := pack 0xc0ffee::m::Test2($t6)
 10: $t11 := infer($t0)
 11: $t10 := ==($t11, $t5)
 12: if ($t10) goto 13 else goto 15
 13: label L0
 14: goto 18
 15: label L1
 16: $t12 := 0
 17: abort($t12)
 18: label L2
 19: $t14 := borrow_local($t0)
 20: $t15 := borrow_local($t5)
 21: $t13 := ==($t14, $t15)
 22: if ($t13) goto 23 else goto 25
 23: label L3
 24: goto 28
 25: label L4
 26: $t16 := 0
 27: abort($t16)
 28: label L5
 29: $t19 := borrow_local($t0)
 30: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t19)
 31: $t18 := read_ref($t20)
 32: $t22 := borrow_local($t5)
 33: $t23 := borrow_field<0xc0ffee::m::Test2>.a($t22)
 34: $t21 := read_ref($t23)
 35: $t17 := ==($t18, $t21)
 36: if ($t17) goto 37 else goto 39
 37: label L6
 38: goto 42
 39: label L7
 40: $t24 := 0
 41: abort($t24)
 42: label L8
 43: $t27 := borrow_local($t0)
 44: $t26 := borrow_field<0xc0ffee::m::Test2>.a($t27)
 45: $t29 := borrow_local($t5)
 46: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
 47: $t25 := ==($t26, $t28)
 48: if ($t25) goto 49 else goto 51
 49: label L9
 50: goto 54
 51: label L10
 52: $t30 := 0
 53: abort($t30)
 54: label L11
 55: $t35 := borrow_local($t0)
 56: $t34 := borrow_field<0xc0ffee::m::Test2>.a($t35)
 57: $t36 := 0
 58: $t33 := vector::borrow<u64>($t34, $t36)
 59: $t32 := read_ref($t33)
 60: $t40 := borrow_local($t5)
 61: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
 62: $t41 := 0
 63: $t38 := vector::borrow<u64>($t39, $t41)
 64: $t37 := read_ref($t38)
 65: $t31 := ==($t32, $t37)
 66: if ($t31) goto 67 else goto 69
 67: label L12
 68: goto 72
 69: label L13
 70: $t42 := 0
 71: abort($t42)
 72: label L14
 73: $t46 := borrow_local($t0)
 74: $t45 := borrow_field<0xc0ffee::m::Test2>.a($t46)
 75: $t47 := 0
 76: $t44 := vector::borrow<u64>($t45, $t47)
 77: $t50 := borrow_local($t5)
 78: $t49 := borrow_field<0xc0ffee::m::Test2>.a($t50)
 79: $t51 := 0
 80: $t48 := vector::borrow<u64>($t49, $t51)
 81: $t43 := ==($t44, $t48)
 82: if ($t43) goto 83 else goto 85
 83: label L15
 84: goto 88
 85: label L16
 86: $t52 := 0
 87: abort($t52)
 88: label L17
 89: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  3: $t1 := vector($t2)
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
  5: $t8 := 1
  6: $t9 := 2
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  8: $t11 := 1
  9: $t12 := 2
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
 11: $t6 := vector($t7, $t10)
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
 13: $t14 := infer($t0)
 14: $t13 := !=($t14, $t5)
 15: if ($t13) goto 16 else goto 18
 16: label L0
 17: goto 21
 18: label L1
 19: $t15 := 0
 20: abort($t15)
 21: label L2
 22: $t17 := borrow_local($t0)
 23: $t18 := borrow_local($t5)
 24: $t16 := !=($t17, $t18)
 25: if ($t16) goto 26 else goto 28
 26: label L3
 27: goto 31
 28: label L4
 29: $t19 := 0
 30: abort($t19)
 31: label L5
 32: $t22 := borrow_local($t0)
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
 34: $t21 := read_ref($t23)
 35: $t25 := borrow_local($t5)
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
 37: $t24 := read_ref($t26)
 38: $t20 := !=($t21, $t24)
 39: if ($t20) goto 40 else goto 42
 40: label L6
 41: goto 45
 42: label L7
 43: $t27 := 0
 44: abort($t27)
 45: label L8
 46: $t30 := borrow_local($t0)
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
 48: $t32 := borrow_local($t5)
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
 50: $t28 := !=($t29, $t31)
 51: if ($t28) goto 52 else goto 54
 52: label L9
 53: goto 57
 54: label L10
 55: $t33 := 0
 56: abort($t33)
 57: label L11
 58: $t38 := borrow_local($t0)
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
 60: $t39 := 0
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
 62: $t35 := read_ref($t36)
 63: $t43 := borrow_local($t5)
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
 65: $t44 := 0
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
 67: $t40 := read_ref($t41)
 68: $t34 := ==($t35, $t40)
 69: if ($t34) goto 70 else goto 72
 70: label L12
 71: goto 75
 72: label L13
 73: $t45 := 0
 74: abort($t45)
 75: label L14
 76: $t49 := borrow_local($t0)
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
 78: $t50 := 0
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
 80: $t53 := borrow_local($t5)
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 82: $t54 := 0
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
 84: $t46 := ==($t47, $t51)
 85: if ($t46) goto 86 else goto 88
 86: label L15
 87: goto 91
 88: label L16
 89: $t55 := 0
 90: abort($t55)
 91: label L17
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
  3: $t5 := 1
  4: $t6 := 2
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
  6: $t8 := 1
  7: $t9 := 2
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  9: $t0 := vector($t1, $t4, $t7)
 10: $t12 := 1
 11: $t13 := 2
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
 13: $t15 := 1
 14: $t16 := 2
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
 16: $t18 := 1
 17: $t19 := 2
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
 19: $t10 := vector($t11, $t14, $t17)
 20: $t21 := infer($t0)
 21: $t20 := ==($t21, $t10)
 22: if ($t20) goto 23 else goto 25
 23: label L0
 24: goto 28
 25: label L1
 26: $t22 := 0
 27: abort($t22)
 28: label L2
 29: $t24 := borrow_local($t0)
 30: $t25 := borrow_local($t10)
 31: $t23 := ==($t24, $t25)
 32: if ($t23) goto 33 else goto 35
 33: label L3
 34: goto 38
 35: label L4
 36: $t26 := 0
 37: abort($t26)
 38: label L5
 39: $t30 := borrow_local($t0)
 40: $t31 := 0
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
 42: $t28 := read_ref($t29)
 43: $t34 := borrow_local($t10)
 44: $t35 := 0
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
 46: $t32 := read_ref($t33)
 47: $t27 := ==($t28, $t32)
 48: if ($t27) goto 49 else goto 51
 49: label L6
 50: goto 54
 51: label L7
 52: $t36 := 0
 53: abort($t36)
 54: label L8
 55: $t39 := borrow_local($t0)
 56: $t40 := 0
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
 58: $t42 := borrow_local($t10)
 59: $t43 := 0
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
 61: $t37 := ==($t38, $t41)
 62: if ($t37) goto 63 else goto 65
 63: label L9
 64: goto 68
 65: label L10
 66: $t44 := 0
 67: abort($t44)
 68: label L11
 69: $t48 := borrow_local($t0)
 70: $t49 := 1
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
 72: $t46 := read_ref($t47)
 73: $t52 := borrow_local($t10)
 74: $t53 := 1
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
 76: $t50 := read_ref($t51)
 77: $t45 := ==($t46, $t50)
 78: if ($t45) goto 79 else goto 81
 79: label L12
 80: goto 84
 81: label L13
 82: $t54 := 0
 83: abort($t54)
 84: label L14
 85: $t57 := borrow_local($t0)
 86: $t58 := 1
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
 88: $t60 := borrow_local($t10)
 89: $t61 := 1
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
 91: $t55 := ==($t56, $t59)
 92: if ($t55) goto 93 else goto 95
 93: label L15
 94: goto 98
 95: label L16
 96: $t62 := 0
 97: abort($t62)
 98: label L17
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: vector<0xc0ffee::m::Test2>
     var $t12: 0xc0ffee::m::Test2
     var $t13: vector<u64>
     var $t14: u64
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test2
     var $t18: vector<u64>
     var $t19: u64
     var $t20: u64
     var $t21: u64
     var $t22: 0xc0ffee::m::Test2
     var $t23: vector<u64>
     var $t24: u64
     var $t25: u64
     var $t26: u64
     var $t27: bool
     var $t28: vector<0xc0ffee::m::Test2>
     var $t29: u64
     var $t30: bool
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: &vector<0xc0ffee::m::Test2>
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test2
     var $t36: &0xc0ffee::m::Test2
     var $t37: &vector<0xc0ffee::m::Test2>
     var $t38: u64
     var $t39: 0xc0ffee::m::Test2
     var $t40: &0xc0ffee::m::Test2
     var $t41: &vector<0xc0ffee::m::Test2>
     var $t42: u64
     var $t43: u64
     var $t44: bool
     var $t45: &0xc0ffee::m::Test2
     var $t46: &vector<0xc0ffee::m::Test2>
     var $t47: u64
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: u64
     var $t52: bool
     var $t53: 0xc0ffee::m::Test2
     var $t54: &0xc0ffee::m::Test2
     var $t55: &vector<0xc0ffee::m::Test2>
     var $t56: u64
     var $t57: 0xc0ffee::m::Test2
     var $t58: &0xc0ffee::m::Test2
     var $t59: &vector<0xc0ffee::m::Test2>
     var $t60: u64
     var $t61: u64
     var $t62: bool
     var $t63: &0xc0ffee::m::Test2
     var $t64: &vector<0xc0ffee::m::Test2>
     var $t65: u64
     var $t66: &0xc0ffee::m::Test2
     var $t67: &vector<0xc0ffee::m::Test2>
     var $t68: u64
     var $t69: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t5 := 3
  3: $t2 := vector($t3, $t4, $t5)
  4: $t1 := pack 0xc0ffee::m::Test2($t2)
  5: $t8 := 1
  6: $t9 := 2
  7: $t10 := 3
  8: $t7 := vector($t8, $t9, $t10)
  9: $t6 := pack 0xc0ffee::m::Test2($t7)
 10: $t0 := vector($t1, $t6)
 11: $t14 := 1
 12: $t15 := 2
 13: $t16 := 3
 14: $t13 := vector($t14, $t15, $t16)
 15: $t12 := pack 0xc0ffee::m::Test2($t13)
 16: $t19 := 2
 17: $t20 := 2
 18: $t21 := 2
 19: $t18 := vector($t19, $t20, $t21)
 20: $t17 := pack 0xc0ffee::m::Test2($t18)
 21: $t24 := 1
 22: $t25 := 2
 23: $t26 := 3
 24: $t23 := vector($t24, $t25, $t26)
 25: $t22 := pack 0xc0ffee::m::Test2($t23)
 26: $t11 := vector($t12, $t17, $t22)
 27: $t28 := infer($t0)
 28: $t27 := !=($t28, $t11)
 29: if ($t27) goto 30 else goto 32
 30: label L0
 31: goto 35
 32: label L1
 33: $t29 := 0
 34: abort($t29)
 35: label L2
 36: $t31 := borrow_local($t0)
 37: $t32 := borrow_local($t11)
 38: $t30 := !=($t31, $t32)
 39: if ($t30) goto 40 else goto 42
 40: label L3
 41: goto 45
 42: label L4
 43: $t33 := 0
 44: abort($t33)
 45: label L5
 46: $t37 := borrow_local($t0)
 47: $t38 := 0
 48: $t36 := vector::borrow<0xc0ffee::m::Test2>($t37, $t38)
 49: $t35 := read_ref($t36)
 50: $t41 := borrow_local($t11)
 51: $t42 := 0
 52: $t40 := vector::borrow<0xc0ffee::m::Test2>($t41, $t42)
 53: $t39 := read_ref($t40)
 54: $t34 := ==($t35, $t39)
 55: if ($t34) goto 56 else goto 58
 56: label L6
 57: goto 61
 58: label L7
 59: $t43 := 0
 60: abort($t43)
 61: label L8
 62: $t46 := borrow_local($t0)
 63: $t47 := 0
 64: $t45 := vector::borrow<0xc0ffee::m::Test2>($t46, $t47)
 65: $t49 := borrow_local($t11)
 66: $t50 := 0
 67: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
 68: $t44 := ==($t45, $t48)
 69: if ($t44) goto 70 else goto 72
 70: label L9
 71: goto 75
 72: label L10
 73: $t51 := 0
 74: abort($t51)
 75: label L11
 76: $t55 := borrow_local($t0)
 77: $t56 := 1
 78: $t54 := vector::borrow<0xc0ffee::m::Test2>($t55, $t56)
 79: $t53 := read_ref($t54)
 80: $t59 := borrow_local($t11)
 81: $t60 := 1
 82: $t58 := vector::borrow<0xc0ffee::m::Test2>($t59, $t60)
 83: $t57 := read_ref($t58)
 84: $t52 := !=($t53, $t57)
 85: if ($t52) goto 86 else goto 88
 86: label L12
 87: goto 91
 88: label L13
 89: $t61 := 0
 90: abort($t61)
 91: label L14
 92: $t64 := borrow_local($t0)
 93: $t65 := 1
 94: $t63 := vector::borrow<0xc0ffee::m::Test2>($t64, $t65)
 95: $t67 := borrow_local($t11)
 96: $t68 := 1
 97: $t66 := vector::borrow<0xc0ffee::m::Test2>($t67, $t68)
 98: $t62 := !=($t63, $t66)
 99: if ($t62) goto 100 else goto 102
100: label L15
101: goto 105
102: label L16
103: $t69 := 0
104: abort($t69)
105: label L17
106: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
  0: $t4 := 1
  1: $t5 := 2
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  3: $t7 := 1
  4: $t8 := 2
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
  6: $t2 := vector($t3, $t6)
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
  8: $t0 := vector($t1)
  9: $t13 := 1
 10: $t14 := 2
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
 12: $t16 := 1
 13: $t17 := 2
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
 15: $t11 := vector($t12, $t15)
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
 17: $t21 := 1
 18: $t22 := 2
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
 20: $t24 := 1
 21: $t25 := 2
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
 23: $t19 := vector($t20, $t23)
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
 25: $t9 := vector($t10, $t18)
 26: $t27 := infer($t0)
 27: $t26 := !=($t27, $t9)
 28: if ($t26) goto 29 else goto 31
 29: label L0
 30: goto 34
 31: label L1
 32: $t28 := 0
 33: abort($t28)
 34: label L2
 35: $t30 := borrow_local($t0)
 36: $t31 := borrow_local($t9)
 37: $t29 := !=($t30, $t31)
 38: if ($t29) goto 39 else goto 41
 39: label L3
 40: goto 44
 41: label L4
 42: $t32 := 0
 43: abort($t32)
 44: label L5
 45: $t36 := borrow_local($t0)
 46: $t37 := 0
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
 48: $t34 := read_ref($t35)
 49: $t40 := borrow_local($t9)
 50: $t41 := 0
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
 52: $t38 := read_ref($t39)
 53: $t33 := ==($t34, $t38)
 54: if ($t33) goto 55 else goto 57
 55: label L6
 56: goto 60
 57: label L7
 58: $t42 := 0
 59: abort($t42)
 60: label L8
 61: $t45 := borrow_local($t0)
 62: $t46 := 0
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
 64: $t48 := borrow_local($t9)
 65: $t49 := 0
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
 67: $t43 := ==($t44, $t47)
 68: if ($t43) goto 69 else goto 71
 69: label L9
 70: goto 74
 71: label L10
 72: $t50 := 0
 73: abort($t50)
 74: label L11
 75: $t54 := borrow_local($t0)
 76: $t55 := 0
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 79: $t52 := read_ref($t56)
 80: $t59 := borrow_local($t9)
 81: $t60 := 0
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
 84: $t57 := read_ref($t61)
 85: $t51 := ==($t52, $t57)
 86: if ($t51) goto 87 else goto 89
 87: label L12
 88: goto 92
 89: label L13
 90: $t62 := 0
 91: abort($t62)
 92: label L14
 93: $t66 := borrow_local($t0)
 94: $t67 := 0
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
 97: $t70 := borrow_local($t9)
 98: $t71 := 0
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
101: $t63 := ==($t64, $t68)
102: if ($t63) goto 103 else goto 105
103: label L15
104: goto 108
105: label L16
106: $t72 := 0
107: abort($t72)
108: label L17
109: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
     # live vars:
  0: $t1 := 1
     # live vars: $t1
  1: $t2 := 2
     # live vars: $t1, $t2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
     # live vars: $t0
  3: $t4 := 1
     # live vars: $t0, $t4
  4: $t5 := 2
     # live vars: $t0, $t4, $t5
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t3
  6: $t7 := infer($t0)
     # live vars: $t0, $t3, $t7
  7: $t6 := ==($t7, $t3)
     # live vars: $t0, $t3, $t6
  8: if ($t6) goto 9 else goto 11
     # live vars: $t0, $t3
  9: label L0
     # live vars: $t0, $t3
 10: goto 14
     # live vars: $t0, $t3
 11: label L1
     # live vars:
 12: $t8 := 0
     # live vars: $t8
 13: abort($t8)
     # live vars: $t0, $t3
 14: label L2
     # live vars: $t0, $t3
 15: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 16: $t11 := borrow_local($t3)
     # live vars: $t0, $t3, $t10, $t11
 17: $t9 := ==($t10, $t11)
     # live vars: $t0, $t3, $t9
 18: if ($t9) goto 19 else goto 21
     # live vars: $t0, $t3
 19: label L3
     # live vars: $t0, $t3
 20: goto 24
     # live vars: $t0, $t3
 21: label L4
     # live vars:
 22: $t12 := 0
     # live vars: $t12
 23: abort($t12)
     # live vars: $t0, $t3
 24: label L5
     # live vars: $t0, $t3
 25: $t15 := borrow_local($t0)
     # live vars: $t0, $t3, $t15
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
     # live vars: $t0, $t3, $t16
 27: $t14 := read_ref($t16)
     # live vars: $t0, $t3, $t14
 28: $t18 := borrow_local($t3)
     # live vars: $t0, $t3, $t14, $t18
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
     # live vars: $t0, $t3, $t14, $t19
 30: $t17 := read_ref($t19)
     # live vars: $t0, $t3, $t14, $t17
 31: $t13 := ==($t14, $t17)
     # live vars: $t0, $t3, $t13
 32: if ($t13) goto 33 else goto 35
     # live vars: $t0, $t3
 33: label L6
     # live vars: $t0, $t3
 34: goto 38
     # live vars: $t0, $t3
 35: label L7
     # live vars:
 36: $t20 := 0
     # live vars: $t20
 37: abort($t20)
     # live vars: $t0, $t3
 38: label L8
     # live vars: $t0, $t3
 39: $t23 := borrow_local($t0)
     # live vars: $t0, $t3, $t23
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
     # live vars: $t0, $t3, $t22
 41: $t25 := borrow_local($t3)
     # live vars: $t0, $t3, $t22, $t25
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
     # live vars: $t0, $t3, $t22, $t24
 43: $t21 := ==($t22, $t24)
     # live vars: $t0, $t3, $t21
 44: if ($t21) goto 45 else goto 47
     # live vars: $t0, $t3
 45: label L9
     # live vars: $t0, $t3
 46: goto 50
     # live vars: $t0, $t3
 47: label L10
     # live vars:
 48: $t26 := 0
     # live vars: $t26
 49: abort($t26)
     # live vars: $t0, $t3
 50: label L11
     # live vars: $t0, $t3
 51: $t29 := borrow_local($t0)
     # live vars: $t0, $t3, $t29
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
     # live vars: $t0, $t3, $t30
 53: $t28 := read_ref($t30)
     # live vars: $t0, $t3, $t28
 54: $t32 := borrow_local($t3)
     # live vars: $t0, $t3, $t28, $t32
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
     # live vars: $t0, $t3, $t28, $t33
 56: $t31 := read_ref($t33)
     # live vars: $t0, $t3, $t28, $t31
 57: $t27 := ==($t28, $t31)
     # live vars: $t0, $t3, $t27
 58: if ($t27) goto 59 else goto 61
     # live vars: $t0, $t3
 59: label L12
     # live vars: $t0, $t3
 60: goto 64
     # live vars: $t0, $t3
 61: label L13
     # live vars:
 62: $t34 := 0
     # live vars: $t34
 63: abort($t34)
     # live vars: $t0, $t3
 64: label L14
     # live vars: $t0, $t3
 65: $t37 := borrow_local($t0)
     # live vars: $t3, $t37
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
     # live vars: $t3, $t36
 67: $t39 := borrow_local($t3)
     # live vars: $t36, $t39
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
     # live vars: $t36, $t38
 69: $t35 := ==($t36, $t38)
     # live vars: $t35
 70: if ($t35) goto 71 else goto 73
     # live vars:
 71: label L15
     # live vars:
 72: goto 76
     # live vars:
 73: label L16
     # live vars:
 74: $t40 := 0
     # live vars: $t40
 75: abort($t40)
     # live vars:
 76: label L17
     # live vars:
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test2
     var $t6: vector<u64>
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: bool
     var $t11: 0xc0ffee::m::Test2
     var $t12: u64
     var $t13: bool
     var $t14: &0xc0ffee::m::Test2
     var $t15: &0xc0ffee::m::Test2
     var $t16: u64
     var $t17: bool
     var $t18: vector<u64>
     var $t19: &0xc0ffee::m::Test2
     var $t20: &vector<u64>
     var $t21: vector<u64>
     var $t22: &0xc0ffee::m::Test2
     var $t23: &vector<u64>
     var $t24: u64
     var $t25: bool
     var $t26: &vector<u64>
     var $t27: &0xc0ffee::m::Test2
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: bool
     var $t32: u64
     var $t33: &u64
     var $t34: &vector<u64>
     var $t35: &0xc0ffee::m::Test2
     var $t36: u64
     var $t37: u64
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &u64
     var $t45: &vector<u64>
     var $t46: &0xc0ffee::m::Test2
     var $t47: u64
     var $t48: &u64
     var $t49: &vector<u64>
     var $t50: &0xc0ffee::m::Test2
     var $t51: u64
     var $t52: u64
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t3 := 2
     # live vars: $t2, $t3
  2: $t4 := 3
     # live vars: $t2, $t3, $t4
  3: $t1 := vector($t2, $t3, $t4)
     # live vars: $t1
  4: $t0 := pack 0xc0ffee::m::Test2($t1)
     # live vars: $t0
  5: $t7 := 1
     # live vars: $t0, $t7
  6: $t8 := 2
     # live vars: $t0, $t7, $t8
  7: $t9 := 3
     # live vars: $t0, $t7, $t8, $t9
  8: $t6 := vector($t7, $t8, $t9)
     # live vars: $t0, $t6
  9: $t5 := pack 0xc0ffee::m::Test2($t6)
     # live vars: $t0, $t5
 10: $t11 := infer($t0)
     # live vars: $t0, $t5, $t11
 11: $t10 := ==($t11, $t5)
     # live vars: $t0, $t5, $t10
 12: if ($t10) goto 13 else goto 15
     # live vars: $t0, $t5
 13: label L0
     # live vars: $t0, $t5
 14: goto 18
     # live vars: $t0, $t5
 15: label L1
     # live vars:
 16: $t12 := 0
     # live vars: $t12
 17: abort($t12)
     # live vars: $t0, $t5
 18: label L2
     # live vars: $t0, $t5
 19: $t14 := borrow_local($t0)
     # live vars: $t0, $t5, $t14
 20: $t15 := borrow_local($t5)
     # live vars: $t0, $t5, $t14, $t15
 21: $t13 := ==($t14, $t15)
     # live vars: $t0, $t5, $t13
 22: if ($t13) goto 23 else goto 25
     # live vars: $t0, $t5
 23: label L3
     # live vars: $t0, $t5
 24: goto 28
     # live vars: $t0, $t5
 25: label L4
     # live vars:
 26: $t16 := 0
     # live vars: $t16
 27: abort($t16)
     # live vars: $t0, $t5
 28: label L5
     # live vars: $t0, $t5
 29: $t19 := borrow_local($t0)
     # live vars: $t0, $t5, $t19
 30: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t19)
     # live vars: $t0, $t5, $t20
 31: $t18 := read_ref($t20)
     # live vars: $t0, $t5, $t18
 32: $t22 := borrow_local($t5)
     # live vars: $t0, $t5, $t18, $t22
 33: $t23 := borrow_field<0xc0ffee::m::Test2>.a($t22)
     # live vars: $t0, $t5, $t18, $t23
 34: $t21 := read_ref($t23)
     # live vars: $t0, $t5, $t18, $t21
 35: $t17 := ==($t18, $t21)
     # live vars: $t0, $t5, $t17
 36: if ($t17) goto 37 else goto 39
     # live vars: $t0, $t5
 37: label L6
     # live vars: $t0, $t5
 38: goto 42
     # live vars: $t0, $t5
 39: label L7
     # live vars:
 40: $t24 := 0
     # live vars: $t24
 41: abort($t24)
     # live vars: $t0, $t5
 42: label L8
     # live vars: $t0, $t5
 43: $t27 := borrow_local($t0)
     # live vars: $t0, $t5, $t27
 44: $t26 := borrow_field<0xc0ffee::m::Test2>.a($t27)
     # live vars: $t0, $t5, $t26
 45: $t29 := borrow_local($t5)
     # live vars: $t0, $t5, $t26, $t29
 46: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
     # live vars: $t0, $t5, $t26, $t28
 47: $t25 := ==($t26, $t28)
     # live vars: $t0, $t5, $t25
 48: if ($t25) goto 49 else goto 51
     # live vars: $t0, $t5
 49: label L9
     # live vars: $t0, $t5
 50: goto 54
     # live vars: $t0, $t5
 51: label L10
     # live vars:
 52: $t30 := 0
     # live vars: $t30
 53: abort($t30)
     # live vars: $t0, $t5
 54: label L11
     # live vars: $t0, $t5
 55: $t35 := borrow_local($t0)
     # live vars: $t0, $t5, $t35
 56: $t34 := borrow_field<0xc0ffee::m::Test2>.a($t35)
     # live vars: $t0, $t5, $t34
 57: $t36 := 0
     # live vars: $t0, $t5, $t34, $t36
 58: $t33 := vector::borrow<u64>($t34, $t36)
     # live vars: $t0, $t5, $t33
 59: $t32 := read_ref($t33)
     # live vars: $t0, $t5, $t32
 60: $t40 := borrow_local($t5)
     # live vars: $t0, $t5, $t32, $t40
 61: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
     # live vars: $t0, $t5, $t32, $t39
 62: $t41 := 0
     # live vars: $t0, $t5, $t32, $t39, $t41
 63: $t38 := vector::borrow<u64>($t39, $t41)
     # live vars: $t0, $t5, $t32, $t38
 64: $t37 := read_ref($t38)
     # live vars: $t0, $t5, $t32, $t37
 65: $t31 := ==($t32, $t37)
     # live vars: $t0, $t5, $t31
 66: if ($t31) goto 67 else goto 69
     # live vars: $t0, $t5
 67: label L12
     # live vars: $t0, $t5
 68: goto 72
     # live vars: $t0, $t5
 69: label L13
     # live vars:
 70: $t42 := 0
     # live vars: $t42
 71: abort($t42)
     # live vars: $t0, $t5
 72: label L14
     # live vars: $t0, $t5
 73: $t46 := borrow_local($t0)
     # live vars: $t5, $t46
 74: $t45 := borrow_field<0xc0ffee::m::Test2>.a($t46)
     # live vars: $t5, $t45
 75: $t47 := 0
     # live vars: $t5, $t45, $t47
 76: $t44 := vector::borrow<u64>($t45, $t47)
     # live vars: $t5, $t44
 77: $t50 := borrow_local($t5)
     # live vars: $t44, $t50
 78: $t49 := borrow_field<0xc0ffee::m::Test2>.a($t50)
     # live vars: $t44, $t49
 79: $t51 := 0
     # live vars: $t44, $t49, $t51
 80: $t48 := vector::borrow<u64>($t49, $t51)
     # live vars: $t44, $t48
 81: $t43 := ==($t44, $t48)
     # live vars: $t43
 82: if ($t43) goto 83 else goto 85
     # live vars:
 83: label L15
     # live vars:
 84: goto 88
     # live vars:
 85: label L16
     # live vars:
 86: $t52 := 0
     # live vars: $t52
 87: abort($t52)
     # live vars:
 88: label L17
     # live vars:
 89: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
     # live vars:
  0: $t3 := 1
     # live vars: $t3
  1: $t4 := 2
     # live vars: $t3, $t4
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t2
  3: $t1 := vector($t2)
     # live vars: $t1
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
     # live vars: $t0
  5: $t8 := 1
     # live vars: $t0, $t8
  6: $t9 := 2
     # live vars: $t0, $t8, $t9
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t0, $t7
  8: $t11 := 1
     # live vars: $t0, $t7, $t11
  9: $t12 := 2
     # live vars: $t0, $t7, $t11, $t12
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
     # live vars: $t0, $t7, $t10
 11: $t6 := vector($t7, $t10)
     # live vars: $t0, $t6
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
     # live vars: $t0, $t5
 13: $t14 := infer($t0)
     # live vars: $t0, $t5, $t14
 14: $t13 := !=($t14, $t5)
     # live vars: $t0, $t5, $t13
 15: if ($t13) goto 16 else goto 18
     # live vars: $t0, $t5
 16: label L0
     # live vars: $t0, $t5
 17: goto 21
     # live vars: $t0, $t5
 18: label L1
     # live vars:
 19: $t15 := 0
     # live vars: $t15
 20: abort($t15)
     # live vars: $t0, $t5
 21: label L2
     # live vars: $t0, $t5
 22: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 23: $t18 := borrow_local($t5)
     # live vars: $t0, $t5, $t17, $t18
 24: $t16 := !=($t17, $t18)
     # live vars: $t0, $t5, $t16
 25: if ($t16) goto 26 else goto 28
     # live vars: $t0, $t5
 26: label L3
     # live vars: $t0, $t5
 27: goto 31
     # live vars: $t0, $t5
 28: label L4
     # live vars:
 29: $t19 := 0
     # live vars: $t19
 30: abort($t19)
     # live vars: $t0, $t5
 31: label L5
     # live vars: $t0, $t5
 32: $t22 := borrow_local($t0)
     # live vars: $t0, $t5, $t22
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
     # live vars: $t0, $t5, $t23
 34: $t21 := read_ref($t23)
     # live vars: $t0, $t5, $t21
 35: $t25 := borrow_local($t5)
     # live vars: $t0, $t5, $t21, $t25
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
     # live vars: $t0, $t5, $t21, $t26
 37: $t24 := read_ref($t26)
     # live vars: $t0, $t5, $t21, $t24
 38: $t20 := !=($t21, $t24)
     # live vars: $t0, $t5, $t20
 39: if ($t20) goto 40 else goto 42
     # live vars: $t0, $t5
 40: label L6
     # live vars: $t0, $t5
 41: goto 45
     # live vars: $t0, $t5
 42: label L7
     # live vars:
 43: $t27 := 0
     # live vars: $t27
 44: abort($t27)
     # live vars: $t0, $t5
 45: label L8
     # live vars: $t0, $t5
 46: $t30 := borrow_local($t0)
     # live vars: $t0, $t5, $t30
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
     # live vars: $t0, $t5, $t29
 48: $t32 := borrow_local($t5)
     # live vars: $t0, $t5, $t29, $t32
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
     # live vars: $t0, $t5, $t29, $t31
 50: $t28 := !=($t29, $t31)
     # live vars: $t0, $t5, $t28
 51: if ($t28) goto 52 else goto 54
     # live vars: $t0, $t5
 52: label L9
     # live vars: $t0, $t5
 53: goto 57
     # live vars: $t0, $t5
 54: label L10
     # live vars:
 55: $t33 := 0
     # live vars: $t33
 56: abort($t33)
     # live vars: $t0, $t5
 57: label L11
     # live vars: $t0, $t5
 58: $t38 := borrow_local($t0)
     # live vars: $t0, $t5, $t38
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
     # live vars: $t0, $t5, $t37
 60: $t39 := 0
     # live vars: $t0, $t5, $t37, $t39
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
     # live vars: $t0, $t5, $t36
 62: $t35 := read_ref($t36)
     # live vars: $t0, $t5, $t35
 63: $t43 := borrow_local($t5)
     # live vars: $t0, $t5, $t35, $t43
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
     # live vars: $t0, $t5, $t35, $t42
 65: $t44 := 0
     # live vars: $t0, $t5, $t35, $t42, $t44
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
     # live vars: $t0, $t5, $t35, $t41
 67: $t40 := read_ref($t41)
     # live vars: $t0, $t5, $t35, $t40
 68: $t34 := ==($t35, $t40)
     # live vars: $t0, $t5, $t34
 69: if ($t34) goto 70 else goto 72
     # live vars: $t0, $t5
 70: label L12
     # live vars: $t0, $t5
 71: goto 75
     # live vars: $t0, $t5
 72: label L13
     # live vars:
 73: $t45 := 0
     # live vars: $t45
 74: abort($t45)
     # live vars: $t0, $t5
 75: label L14
     # live vars: $t0, $t5
 76: $t49 := borrow_local($t0)
     # live vars: $t5, $t49
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
     # live vars: $t5, $t48
 78: $t50 := 0
     # live vars: $t5, $t48, $t50
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
     # live vars: $t5, $t47
 80: $t53 := borrow_local($t5)
     # live vars: $t47, $t53
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t47, $t52
 82: $t54 := 0
     # live vars: $t47, $t52, $t54
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
     # live vars: $t47, $t51
 84: $t46 := ==($t47, $t51)
     # live vars: $t46
 85: if ($t46) goto 86 else goto 88
     # live vars:
 86: label L15
     # live vars:
 87: goto 91
     # live vars:
 88: label L16
     # live vars:
 89: $t55 := 0
     # live vars: $t55
 90: abort($t55)
     # live vars:
 91: label L17
     # live vars:
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t3 := 2
     # live vars: $t2, $t3
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1
  3: $t5 := 1
     # live vars: $t1, $t5
  4: $t6 := 2
     # live vars: $t1, $t5, $t6
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
     # live vars: $t1, $t4
  6: $t8 := 1
     # live vars: $t1, $t4, $t8
  7: $t9 := 2
     # live vars: $t1, $t4, $t8, $t9
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t1, $t4, $t7
  9: $t0 := vector($t1, $t4, $t7)
     # live vars: $t0
 10: $t12 := 1
     # live vars: $t0, $t12
 11: $t13 := 2
     # live vars: $t0, $t12, $t13
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
     # live vars: $t0, $t11
 13: $t15 := 1
     # live vars: $t0, $t11, $t15
 14: $t16 := 2
     # live vars: $t0, $t11, $t15, $t16
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
     # live vars: $t0, $t11, $t14
 16: $t18 := 1
     # live vars: $t0, $t11, $t14, $t18
 17: $t19 := 2
     # live vars: $t0, $t11, $t14, $t18, $t19
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
     # live vars: $t0, $t11, $t14, $t17
 19: $t10 := vector($t11, $t14, $t17)
     # live vars: $t0, $t10
 20: $t21 := infer($t0)
     # live vars: $t0, $t10, $t21
 21: $t20 := ==($t21, $t10)
     # live vars: $t0, $t10, $t20
 22: if ($t20) goto 23 else goto 25
     # live vars: $t0, $t10
 23: label L0
     # live vars: $t0, $t10
 24: goto 28
     # live vars: $t0, $t10
 25: label L1
     # live vars:
 26: $t22 := 0
     # live vars: $t22
 27: abort($t22)
     # live vars: $t0, $t10
 28: label L2
     # live vars: $t0, $t10
 29: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 30: $t25 := borrow_local($t10)
     # live vars: $t0, $t10, $t24, $t25
 31: $t23 := ==($t24, $t25)
     # live vars: $t0, $t10, $t23
 32: if ($t23) goto 33 else goto 35
     # live vars: $t0, $t10
 33: label L3
     # live vars: $t0, $t10
 34: goto 38
     # live vars: $t0, $t10
 35: label L4
     # live vars:
 36: $t26 := 0
     # live vars: $t26
 37: abort($t26)
     # live vars: $t0, $t10
 38: label L5
     # live vars: $t0, $t10
 39: $t30 := borrow_local($t0)
     # live vars: $t0, $t10, $t30
 40: $t31 := 0
     # live vars: $t0, $t10, $t30, $t31
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
     # live vars: $t0, $t10, $t29
 42: $t28 := read_ref($t29)
     # live vars: $t0, $t10, $t28
 43: $t34 := borrow_local($t10)
     # live vars: $t0, $t10, $t28, $t34
 44: $t35 := 0
     # live vars: $t0, $t10, $t28, $t34, $t35
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
     # live vars: $t0, $t10, $t28, $t33
 46: $t32 := read_ref($t33)
     # live vars: $t0, $t10, $t28, $t32
 47: $t27 := ==($t28, $t32)
     # live vars: $t0, $t10, $t27
 48: if ($t27) goto 49 else goto 51
     # live vars: $t0, $t10
 49: label L6
     # live vars: $t0, $t10
 50: goto 54
     # live vars: $t0, $t10
 51: label L7
     # live vars:
 52: $t36 := 0
     # live vars: $t36
 53: abort($t36)
     # live vars: $t0, $t10
 54: label L8
     # live vars: $t0, $t10
 55: $t39 := borrow_local($t0)
     # live vars: $t0, $t10, $t39
 56: $t40 := 0
     # live vars: $t0, $t10, $t39, $t40
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
     # live vars: $t0, $t10, $t38
 58: $t42 := borrow_local($t10)
     # live vars: $t0, $t10, $t38, $t42
 59: $t43 := 0
     # live vars: $t0, $t10, $t38, $t42, $t43
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
     # live vars: $t0, $t10, $t38, $t41
 61: $t37 := ==($t38, $t41)
     # live vars: $t0, $t10, $t37
 62: if ($t37) goto 63 else goto 65
     # live vars: $t0, $t10
 63: label L9
     # live vars: $t0, $t10
 64: goto 68
     # live vars: $t0, $t10
 65: label L10
     # live vars:
 66: $t44 := 0
     # live vars: $t44
 67: abort($t44)
     # live vars: $t0, $t10
 68: label L11
     # live vars: $t0, $t10
 69: $t48 := borrow_local($t0)
     # live vars: $t0, $t10, $t48
 70: $t49 := 1
     # live vars: $t0, $t10, $t48, $t49
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
     # live vars: $t0, $t10, $t47
 72: $t46 := read_ref($t47)
     # live vars: $t0, $t10, $t46
 73: $t52 := borrow_local($t10)
     # live vars: $t0, $t10, $t46, $t52
 74: $t53 := 1
     # live vars: $t0, $t10, $t46, $t52, $t53
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
     # live vars: $t0, $t10, $t46, $t51
 76: $t50 := read_ref($t51)
     # live vars: $t0, $t10, $t46, $t50
 77: $t45 := ==($t46, $t50)
     # live vars: $t0, $t10, $t45
 78: if ($t45) goto 79 else goto 81
     # live vars: $t0, $t10
 79: label L12
     # live vars: $t0, $t10
 80: goto 84
     # live vars: $t0, $t10
 81: label L13
     # live vars:
 82: $t54 := 0
     # live vars: $t54
 83: abort($t54)
     # live vars: $t0, $t10
 84: label L14
     # live vars: $t0, $t10
 85: $t57 := borrow_local($t0)
     # live vars: $t10, $t57
 86: $t58 := 1
     # live vars: $t10, $t57, $t58
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
     # live vars: $t10, $t56
 88: $t60 := borrow_local($t10)
     # live vars: $t56, $t60
 89: $t61 := 1
     # live vars: $t56, $t60, $t61
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
     # live vars: $t56, $t59
 91: $t55 := ==($t56, $t59)
     # live vars: $t55
 92: if ($t55) goto 93 else goto 95
     # live vars:
 93: label L15
     # live vars:
 94: goto 98
     # live vars:
 95: label L16
     # live vars:
 96: $t62 := 0
     # live vars: $t62
 97: abort($t62)
     # live vars:
 98: label L17
     # live vars:
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: vector<0xc0ffee::m::Test2>
     var $t12: 0xc0ffee::m::Test2
     var $t13: vector<u64>
     var $t14: u64
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test2
     var $t18: vector<u64>
     var $t19: u64
     var $t20: u64
     var $t21: u64
     var $t22: 0xc0ffee::m::Test2
     var $t23: vector<u64>
     var $t24: u64
     var $t25: u64
     var $t26: u64
     var $t27: bool
     var $t28: vector<0xc0ffee::m::Test2>
     var $t29: u64
     var $t30: bool
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: &vector<0xc0ffee::m::Test2>
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test2
     var $t36: &0xc0ffee::m::Test2
     var $t37: &vector<0xc0ffee::m::Test2>
     var $t38: u64
     var $t39: 0xc0ffee::m::Test2
     var $t40: &0xc0ffee::m::Test2
     var $t41: &vector<0xc0ffee::m::Test2>
     var $t42: u64
     var $t43: u64
     var $t44: bool
     var $t45: &0xc0ffee::m::Test2
     var $t46: &vector<0xc0ffee::m::Test2>
     var $t47: u64
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: u64
     var $t52: bool
     var $t53: 0xc0ffee::m::Test2
     var $t54: &0xc0ffee::m::Test2
     var $t55: &vector<0xc0ffee::m::Test2>
     var $t56: u64
     var $t57: 0xc0ffee::m::Test2
     var $t58: &0xc0ffee::m::Test2
     var $t59: &vector<0xc0ffee::m::Test2>
     var $t60: u64
     var $t61: u64
     var $t62: bool
     var $t63: &0xc0ffee::m::Test2
     var $t64: &vector<0xc0ffee::m::Test2>
     var $t65: u64
     var $t66: &0xc0ffee::m::Test2
     var $t67: &vector<0xc0ffee::m::Test2>
     var $t68: u64
     var $t69: u64
     # live vars:
  0: $t3 := 1
     # live vars: $t3
  1: $t4 := 2
     # live vars: $t3, $t4
  2: $t5 := 3
     # live vars: $t3, $t4, $t5
  3: $t2 := vector($t3, $t4, $t5)
     # live vars: $t2
  4: $t1 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t1
  5: $t8 := 1
     # live vars: $t1, $t8
  6: $t9 := 2
     # live vars: $t1, $t8, $t9
  7: $t10 := 3
     # live vars: $t1, $t8, $t9, $t10
  8: $t7 := vector($t8, $t9, $t10)
     # live vars: $t1, $t7
  9: $t6 := pack 0xc0ffee::m::Test2($t7)
     # live vars: $t1, $t6
 10: $t0 := vector($t1, $t6)
     # live vars: $t0
 11: $t14 := 1
     # live vars: $t0, $t14
 12: $t15 := 2
     # live vars: $t0, $t14, $t15
 13: $t16 := 3
     # live vars: $t0, $t14, $t15, $t16
 14: $t13 := vector($t14, $t15, $t16)
     # live vars: $t0, $t13
 15: $t12 := pack 0xc0ffee::m::Test2($t13)
     # live vars: $t0, $t12
 16: $t19 := 2
     # live vars: $t0, $t12, $t19
 17: $t20 := 2
     # live vars: $t0, $t12, $t19, $t20
 18: $t21 := 2
     # live vars: $t0, $t12, $t19, $t20, $t21
 19: $t18 := vector($t19, $t20, $t21)
     # live vars: $t0, $t12, $t18
 20: $t17 := pack 0xc0ffee::m::Test2($t18)
     # live vars: $t0, $t12, $t17
 21: $t24 := 1
     # live vars: $t0, $t12, $t17, $t24
 22: $t25 := 2
     # live vars: $t0, $t12, $t17, $t24, $t25
 23: $t26 := 3
     # live vars: $t0, $t12, $t17, $t24, $t25, $t26
 24: $t23 := vector($t24, $t25, $t26)
     # live vars: $t0, $t12, $t17, $t23
 25: $t22 := pack 0xc0ffee::m::Test2($t23)
     # live vars: $t0, $t12, $t17, $t22
 26: $t11 := vector($t12, $t17, $t22)
     # live vars: $t0, $t11
 27: $t28 := infer($t0)
     # live vars: $t0, $t11, $t28
 28: $t27 := !=($t28, $t11)
     # live vars: $t0, $t11, $t27
 29: if ($t27) goto 30 else goto 32
     # live vars: $t0, $t11
 30: label L0
     # live vars: $t0, $t11
 31: goto 35
     # live vars: $t0, $t11
 32: label L1
     # live vars:
 33: $t29 := 0
     # live vars: $t29
 34: abort($t29)
     # live vars: $t0, $t11
 35: label L2
     # live vars: $t0, $t11
 36: $t31 := borrow_local($t0)
     # live vars: $t0, $t11, $t31
 37: $t32 := borrow_local($t11)
     # live vars: $t0, $t11, $t31, $t32
 38: $t30 := !=($t31, $t32)
     # live vars: $t0, $t11, $t30
 39: if ($t30) goto 40 else goto 42
     # live vars: $t0, $t11
 40: label L3
     # live vars: $t0, $t11
 41: goto 45
     # live vars: $t0, $t11
 42: label L4
     # live vars:
 43: $t33 := 0
     # live vars: $t33
 44: abort($t33)
     # live vars: $t0, $t11
 45: label L5
     # live vars: $t0, $t11
 46: $t37 := borrow_local($t0)
     # live vars: $t0, $t11, $t37
 47: $t38 := 0
     # live vars: $t0, $t11, $t37, $t38
 48: $t36 := vector::borrow<0xc0ffee::m::Test2>($t37, $t38)
     # live vars: $t0, $t11, $t36
 49: $t35 := read_ref($t36)
     # live vars: $t0, $t11, $t35
 50: $t41 := borrow_local($t11)
     # live vars: $t0, $t11, $t35, $t41
 51: $t42 := 0
     # live vars: $t0, $t11, $t35, $t41, $t42
 52: $t40 := vector::borrow<0xc0ffee::m::Test2>($t41, $t42)
     # live vars: $t0, $t11, $t35, $t40
 53: $t39 := read_ref($t40)
     # live vars: $t0, $t11, $t35, $t39
 54: $t34 := ==($t35, $t39)
     # live vars: $t0, $t11, $t34
 55: if ($t34) goto 56 else goto 58
     # live vars: $t0, $t11
 56: label L6
     # live vars: $t0, $t11
 57: goto 61
     # live vars: $t0, $t11
 58: label L7
     # live vars:
 59: $t43 := 0
     # live vars: $t43
 60: abort($t43)
     # live vars: $t0, $t11
 61: label L8
     # live vars: $t0, $t11
 62: $t46 := borrow_local($t0)
     # live vars: $t0, $t11, $t46
 63: $t47 := 0
     # live vars: $t0, $t11, $t46, $t47
 64: $t45 := vector::borrow<0xc0ffee::m::Test2>($t46, $t47)
     # live vars: $t0, $t11, $t45
 65: $t49 := borrow_local($t11)
     # live vars: $t0, $t11, $t45, $t49
 66: $t50 := 0
     # live vars: $t0, $t11, $t45, $t49, $t50
 67: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
     # live vars: $t0, $t11, $t45, $t48
 68: $t44 := ==($t45, $t48)
     # live vars: $t0, $t11, $t44
 69: if ($t44) goto 70 else goto 72
     # live vars: $t0, $t11
 70: label L9
     # live vars: $t0, $t11
 71: goto 75
     # live vars: $t0, $t11
 72: label L10
     # live vars:
 73: $t51 := 0
     # live vars: $t51
 74: abort($t51)
     # live vars: $t0, $t11
 75: label L11
     # live vars: $t0, $t11
 76: $t55 := borrow_local($t0)
     # live vars: $t0, $t11, $t55
 77: $t56 := 1
     # live vars: $t0, $t11, $t55, $t56
 78: $t54 := vector::borrow<0xc0ffee::m::Test2>($t55, $t56)
     # live vars: $t0, $t11, $t54
 79: $t53 := read_ref($t54)
     # live vars: $t0, $t11, $t53
 80: $t59 := borrow_local($t11)
     # live vars: $t0, $t11, $t53, $t59
 81: $t60 := 1
     # live vars: $t0, $t11, $t53, $t59, $t60
 82: $t58 := vector::borrow<0xc0ffee::m::Test2>($t59, $t60)
     # live vars: $t0, $t11, $t53, $t58
 83: $t57 := read_ref($t58)
     # live vars: $t0, $t11, $t53, $t57
 84: $t52 := !=($t53, $t57)
     # live vars: $t0, $t11, $t52
 85: if ($t52) goto 86 else goto 88
     # live vars: $t0, $t11
 86: label L12
     # live vars: $t0, $t11
 87: goto 91
     # live vars: $t0, $t11
 88: label L13
     # live vars:
 89: $t61 := 0
     # live vars: $t61
 90: abort($t61)
     # live vars: $t0, $t11
 91: label L14
     # live vars: $t0, $t11
 92: $t64 := borrow_local($t0)
     # live vars: $t11, $t64
 93: $t65 := 1
     # live vars: $t11, $t64, $t65
 94: $t63 := vector::borrow<0xc0ffee::m::Test2>($t64, $t65)
     # live vars: $t11, $t63
 95: $t67 := borrow_local($t11)
     # live vars: $t63, $t67
 96: $t68 := 1
     # live vars: $t63, $t67, $t68
 97: $t66 := vector::borrow<0xc0ffee::m::Test2>($t67, $t68)
     # live vars: $t63, $t66
 98: $t62 := !=($t63, $t66)
     # live vars: $t62
 99: if ($t62) goto 100 else goto 102
     # live vars:
100: label L15
     # live vars:
101: goto 105
     # live vars:
102: label L16
     # live vars:
103: $t69 := 0
     # live vars: $t69
104: abort($t69)
     # live vars:
105: label L17
     # live vars:
106: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
     # live vars:
  0: $t4 := 1
     # live vars: $t4
  1: $t5 := 2
     # live vars: $t4, $t5
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t3
  3: $t7 := 1
     # live vars: $t3, $t7
  4: $t8 := 2
     # live vars: $t3, $t7, $t8
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
     # live vars: $t3, $t6
  6: $t2 := vector($t3, $t6)
     # live vars: $t2
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t1
  8: $t0 := vector($t1)
     # live vars: $t0
  9: $t13 := 1
     # live vars: $t0, $t13
 10: $t14 := 2
     # live vars: $t0, $t13, $t14
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
     # live vars: $t0, $t12
 12: $t16 := 1
     # live vars: $t0, $t12, $t16
 13: $t17 := 2
     # live vars: $t0, $t12, $t16, $t17
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
     # live vars: $t0, $t12, $t15
 15: $t11 := vector($t12, $t15)
     # live vars: $t0, $t11
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
     # live vars: $t0, $t10
 17: $t21 := 1
     # live vars: $t0, $t10, $t21
 18: $t22 := 2
     # live vars: $t0, $t10, $t21, $t22
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
     # live vars: $t0, $t10, $t20
 20: $t24 := 1
     # live vars: $t0, $t10, $t20, $t24
 21: $t25 := 2
     # live vars: $t0, $t10, $t20, $t24, $t25
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
     # live vars: $t0, $t10, $t20, $t23
 23: $t19 := vector($t20, $t23)
     # live vars: $t0, $t10, $t19
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
     # live vars: $t0, $t10, $t18
 25: $t9 := vector($t10, $t18)
     # live vars: $t0, $t9
 26: $t27 := infer($t0)
     # live vars: $t0, $t9, $t27
 27: $t26 := !=($t27, $t9)
     # live vars: $t0, $t9, $t26
 28: if ($t26) goto 29 else goto 31
     # live vars: $t0, $t9
 29: label L0
     # live vars: $t0, $t9
 30: goto 34
     # live vars: $t0, $t9
 31: label L1
     # live vars:
 32: $t28 := 0
     # live vars: $t28
 33: abort($t28)
     # live vars: $t0, $t9
 34: label L2
     # live vars: $t0, $t9
 35: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 36: $t31 := borrow_local($t9)
     # live vars: $t0, $t9, $t30, $t31
 37: $t29 := !=($t30, $t31)
     # live vars: $t0, $t9, $t29
 38: if ($t29) goto 39 else goto 41
     # live vars: $t0, $t9
 39: label L3
     # live vars: $t0, $t9
 40: goto 44
     # live vars: $t0, $t9
 41: label L4
     # live vars:
 42: $t32 := 0
     # live vars: $t32
 43: abort($t32)
     # live vars: $t0, $t9
 44: label L5
     # live vars: $t0, $t9
 45: $t36 := borrow_local($t0)
     # live vars: $t0, $t9, $t36
 46: $t37 := 0
     # live vars: $t0, $t9, $t36, $t37
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
     # live vars: $t0, $t9, $t35
 48: $t34 := read_ref($t35)
     # live vars: $t0, $t9, $t34
 49: $t40 := borrow_local($t9)
     # live vars: $t0, $t9, $t34, $t40
 50: $t41 := 0
     # live vars: $t0, $t9, $t34, $t40, $t41
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
     # live vars: $t0, $t9, $t34, $t39
 52: $t38 := read_ref($t39)
     # live vars: $t0, $t9, $t34, $t38
 53: $t33 := ==($t34, $t38)
     # live vars: $t0, $t9, $t33
 54: if ($t33) goto 55 else goto 57
     # live vars: $t0, $t9
 55: label L6
     # live vars: $t0, $t9
 56: goto 60
     # live vars: $t0, $t9
 57: label L7
     # live vars:
 58: $t42 := 0
     # live vars: $t42
 59: abort($t42)
     # live vars: $t0, $t9
 60: label L8
     # live vars: $t0, $t9
 61: $t45 := borrow_local($t0)
     # live vars: $t0, $t9, $t45
 62: $t46 := 0
     # live vars: $t0, $t9, $t45, $t46
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
     # live vars: $t0, $t9, $t44
 64: $t48 := borrow_local($t9)
     # live vars: $t0, $t9, $t44, $t48
 65: $t49 := 0
     # live vars: $t0, $t9, $t44, $t48, $t49
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
     # live vars: $t0, $t9, $t44, $t47
 67: $t43 := ==($t44, $t47)
     # live vars: $t0, $t9, $t43
 68: if ($t43) goto 69 else goto 71
     # live vars: $t0, $t9
 69: label L9
     # live vars: $t0, $t9
 70: goto 74
     # live vars: $t0, $t9
 71: label L10
     # live vars:
 72: $t50 := 0
     # live vars: $t50
 73: abort($t50)
     # live vars: $t0, $t9
 74: label L11
     # live vars: $t0, $t9
 75: $t54 := borrow_local($t0)
     # live vars: $t0, $t9, $t54
 76: $t55 := 0
     # live vars: $t0, $t9, $t54, $t55
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
     # live vars: $t0, $t9, $t53
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t0, $t9, $t56
 79: $t52 := read_ref($t56)
     # live vars: $t0, $t9, $t52
 80: $t59 := borrow_local($t9)
     # live vars: $t0, $t9, $t52, $t59
 81: $t60 := 0
     # live vars: $t0, $t9, $t52, $t59, $t60
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
     # live vars: $t0, $t9, $t52, $t58
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
     # live vars: $t0, $t9, $t52, $t61
 84: $t57 := read_ref($t61)
     # live vars: $t0, $t9, $t52, $t57
 85: $t51 := ==($t52, $t57)
     # live vars: $t0, $t9, $t51
 86: if ($t51) goto 87 else goto 89
     # live vars: $t0, $t9
 87: label L12
     # live vars: $t0, $t9
 88: goto 92
     # live vars: $t0, $t9
 89: label L13
     # live vars:
 90: $t62 := 0
     # live vars: $t62
 91: abort($t62)
     # live vars: $t0, $t9
 92: label L14
     # live vars: $t0, $t9
 93: $t66 := borrow_local($t0)
     # live vars: $t9, $t66
 94: $t67 := 0
     # live vars: $t9, $t66, $t67
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
     # live vars: $t9, $t65
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
     # live vars: $t9, $t64
 97: $t70 := borrow_local($t9)
     # live vars: $t64, $t70
 98: $t71 := 0
     # live vars: $t64, $t70, $t71
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
     # live vars: $t64, $t69
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
     # live vars: $t64, $t68
101: $t63 := ==($t64, $t68)
     # live vars: $t63
102: if ($t63) goto 103 else goto 105
     # live vars:
103: label L15
     # live vars:
104: goto 108
     # live vars:
105: label L16
     # live vars:
106: $t72 := 0
     # live vars: $t72
107: abort($t72)
     # live vars:
108: label L17
     # live vars:
109: return ()
}

============ after UnusedAssignmentChecker: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
     # live vars:
  0: $t1 := 1
     # live vars: $t1
  1: $t2 := 2
     # live vars: $t1, $t2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
     # live vars: $t0
  3: $t4 := 1
     # live vars: $t0, $t4
  4: $t5 := 2
     # live vars: $t0, $t4, $t5
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t3
  6: $t7 := infer($t0)
     # live vars: $t0, $t3, $t7
  7: $t6 := ==($t7, $t3)
     # live vars: $t0, $t3, $t6
  8: if ($t6) goto 9 else goto 11
     # live vars: $t0, $t3
  9: label L0
     # live vars: $t0, $t3
 10: goto 14
     # live vars: $t0, $t3
 11: label L1
     # live vars:
 12: $t8 := 0
     # live vars: $t8
 13: abort($t8)
     # live vars: $t0, $t3
 14: label L2
     # live vars: $t0, $t3
 15: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 16: $t11 := borrow_local($t3)
     # live vars: $t0, $t3, $t10, $t11
 17: $t9 := ==($t10, $t11)
     # live vars: $t0, $t3, $t9
 18: if ($t9) goto 19 else goto 21
     # live vars: $t0, $t3
 19: label L3
     # live vars: $t0, $t3
 20: goto 24
     # live vars: $t0, $t3
 21: label L4
     # live vars:
 22: $t12 := 0
     # live vars: $t12
 23: abort($t12)
     # live vars: $t0, $t3
 24: label L5
     # live vars: $t0, $t3
 25: $t15 := borrow_local($t0)
     # live vars: $t0, $t3, $t15
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
     # live vars: $t0, $t3, $t16
 27: $t14 := read_ref($t16)
     # live vars: $t0, $t3, $t14
 28: $t18 := borrow_local($t3)
     # live vars: $t0, $t3, $t14, $t18
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
     # live vars: $t0, $t3, $t14, $t19
 30: $t17 := read_ref($t19)
     # live vars: $t0, $t3, $t14, $t17
 31: $t13 := ==($t14, $t17)
     # live vars: $t0, $t3, $t13
 32: if ($t13) goto 33 else goto 35
     # live vars: $t0, $t3
 33: label L6
     # live vars: $t0, $t3
 34: goto 38
     # live vars: $t0, $t3
 35: label L7
     # live vars:
 36: $t20 := 0
     # live vars: $t20
 37: abort($t20)
     # live vars: $t0, $t3
 38: label L8
     # live vars: $t0, $t3
 39: $t23 := borrow_local($t0)
     # live vars: $t0, $t3, $t23
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
     # live vars: $t0, $t3, $t22
 41: $t25 := borrow_local($t3)
     # live vars: $t0, $t3, $t22, $t25
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
     # live vars: $t0, $t3, $t22, $t24
 43: $t21 := ==($t22, $t24)
     # live vars: $t0, $t3, $t21
 44: if ($t21) goto 45 else goto 47
     # live vars: $t0, $t3
 45: label L9
     # live vars: $t0, $t3
 46: goto 50
     # live vars: $t0, $t3
 47: label L10
     # live vars:
 48: $t26 := 0
     # live vars: $t26
 49: abort($t26)
     # live vars: $t0, $t3
 50: label L11
     # live vars: $t0, $t3
 51: $t29 := borrow_local($t0)
     # live vars: $t0, $t3, $t29
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
     # live vars: $t0, $t3, $t30
 53: $t28 := read_ref($t30)
     # live vars: $t0, $t3, $t28
 54: $t32 := borrow_local($t3)
     # live vars: $t0, $t3, $t28, $t32
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
     # live vars: $t0, $t3, $t28, $t33
 56: $t31 := read_ref($t33)
     # live vars: $t0, $t3, $t28, $t31
 57: $t27 := ==($t28, $t31)
     # live vars: $t0, $t3, $t27
 58: if ($t27) goto 59 else goto 61
     # live vars: $t0, $t3
 59: label L12
     # live vars: $t0, $t3
 60: goto 64
     # live vars: $t0, $t3
 61: label L13
     # live vars:
 62: $t34 := 0
     # live vars: $t34
 63: abort($t34)
     # live vars: $t0, $t3
 64: label L14
     # live vars: $t0, $t3
 65: $t37 := borrow_local($t0)
     # live vars: $t3, $t37
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
     # live vars: $t3, $t36
 67: $t39 := borrow_local($t3)
     # live vars: $t36, $t39
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
     # live vars: $t36, $t38
 69: $t35 := ==($t36, $t38)
     # live vars: $t35
 70: if ($t35) goto 71 else goto 73
     # live vars:
 71: label L15
     # live vars:
 72: goto 76
     # live vars:
 73: label L16
     # live vars:
 74: $t40 := 0
     # live vars: $t40
 75: abort($t40)
     # live vars:
 76: label L17
     # live vars:
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test2
     var $t6: vector<u64>
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: bool
     var $t11: 0xc0ffee::m::Test2
     var $t12: u64
     var $t13: bool
     var $t14: &0xc0ffee::m::Test2
     var $t15: &0xc0ffee::m::Test2
     var $t16: u64
     var $t17: bool
     var $t18: vector<u64>
     var $t19: &0xc0ffee::m::Test2
     var $t20: &vector<u64>
     var $t21: vector<u64>
     var $t22: &0xc0ffee::m::Test2
     var $t23: &vector<u64>
     var $t24: u64
     var $t25: bool
     var $t26: &vector<u64>
     var $t27: &0xc0ffee::m::Test2
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: bool
     var $t32: u64
     var $t33: &u64
     var $t34: &vector<u64>
     var $t35: &0xc0ffee::m::Test2
     var $t36: u64
     var $t37: u64
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &u64
     var $t45: &vector<u64>
     var $t46: &0xc0ffee::m::Test2
     var $t47: u64
     var $t48: &u64
     var $t49: &vector<u64>
     var $t50: &0xc0ffee::m::Test2
     var $t51: u64
     var $t52: u64
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t3 := 2
     # live vars: $t2, $t3
  2: $t4 := 3
     # live vars: $t2, $t3, $t4
  3: $t1 := vector($t2, $t3, $t4)
     # live vars: $t1
  4: $t0 := pack 0xc0ffee::m::Test2($t1)
     # live vars: $t0
  5: $t7 := 1
     # live vars: $t0, $t7
  6: $t8 := 2
     # live vars: $t0, $t7, $t8
  7: $t9 := 3
     # live vars: $t0, $t7, $t8, $t9
  8: $t6 := vector($t7, $t8, $t9)
     # live vars: $t0, $t6
  9: $t5 := pack 0xc0ffee::m::Test2($t6)
     # live vars: $t0, $t5
 10: $t11 := infer($t0)
     # live vars: $t0, $t5, $t11
 11: $t10 := ==($t11, $t5)
     # live vars: $t0, $t5, $t10
 12: if ($t10) goto 13 else goto 15
     # live vars: $t0, $t5
 13: label L0
     # live vars: $t0, $t5
 14: goto 18
     # live vars: $t0, $t5
 15: label L1
     # live vars:
 16: $t12 := 0
     # live vars: $t12
 17: abort($t12)
     # live vars: $t0, $t5
 18: label L2
     # live vars: $t0, $t5
 19: $t14 := borrow_local($t0)
     # live vars: $t0, $t5, $t14
 20: $t15 := borrow_local($t5)
     # live vars: $t0, $t5, $t14, $t15
 21: $t13 := ==($t14, $t15)
     # live vars: $t0, $t5, $t13
 22: if ($t13) goto 23 else goto 25
     # live vars: $t0, $t5
 23: label L3
     # live vars: $t0, $t5
 24: goto 28
     # live vars: $t0, $t5
 25: label L4
     # live vars:
 26: $t16 := 0
     # live vars: $t16
 27: abort($t16)
     # live vars: $t0, $t5
 28: label L5
     # live vars: $t0, $t5
 29: $t19 := borrow_local($t0)
     # live vars: $t0, $t5, $t19
 30: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t19)
     # live vars: $t0, $t5, $t20
 31: $t18 := read_ref($t20)
     # live vars: $t0, $t5, $t18
 32: $t22 := borrow_local($t5)
     # live vars: $t0, $t5, $t18, $t22
 33: $t23 := borrow_field<0xc0ffee::m::Test2>.a($t22)
     # live vars: $t0, $t5, $t18, $t23
 34: $t21 := read_ref($t23)
     # live vars: $t0, $t5, $t18, $t21
 35: $t17 := ==($t18, $t21)
     # live vars: $t0, $t5, $t17
 36: if ($t17) goto 37 else goto 39
     # live vars: $t0, $t5
 37: label L6
     # live vars: $t0, $t5
 38: goto 42
     # live vars: $t0, $t5
 39: label L7
     # live vars:
 40: $t24 := 0
     # live vars: $t24
 41: abort($t24)
     # live vars: $t0, $t5
 42: label L8
     # live vars: $t0, $t5
 43: $t27 := borrow_local($t0)
     # live vars: $t0, $t5, $t27
 44: $t26 := borrow_field<0xc0ffee::m::Test2>.a($t27)
     # live vars: $t0, $t5, $t26
 45: $t29 := borrow_local($t5)
     # live vars: $t0, $t5, $t26, $t29
 46: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
     # live vars: $t0, $t5, $t26, $t28
 47: $t25 := ==($t26, $t28)
     # live vars: $t0, $t5, $t25
 48: if ($t25) goto 49 else goto 51
     # live vars: $t0, $t5
 49: label L9
     # live vars: $t0, $t5
 50: goto 54
     # live vars: $t0, $t5
 51: label L10
     # live vars:
 52: $t30 := 0
     # live vars: $t30
 53: abort($t30)
     # live vars: $t0, $t5
 54: label L11
     # live vars: $t0, $t5
 55: $t35 := borrow_local($t0)
     # live vars: $t0, $t5, $t35
 56: $t34 := borrow_field<0xc0ffee::m::Test2>.a($t35)
     # live vars: $t0, $t5, $t34
 57: $t36 := 0
     # live vars: $t0, $t5, $t34, $t36
 58: $t33 := vector::borrow<u64>($t34, $t36)
     # live vars: $t0, $t5, $t33
 59: $t32 := read_ref($t33)
     # live vars: $t0, $t5, $t32
 60: $t40 := borrow_local($t5)
     # live vars: $t0, $t5, $t32, $t40
 61: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
     # live vars: $t0, $t5, $t32, $t39
 62: $t41 := 0
     # live vars: $t0, $t5, $t32, $t39, $t41
 63: $t38 := vector::borrow<u64>($t39, $t41)
     # live vars: $t0, $t5, $t32, $t38
 64: $t37 := read_ref($t38)
     # live vars: $t0, $t5, $t32, $t37
 65: $t31 := ==($t32, $t37)
     # live vars: $t0, $t5, $t31
 66: if ($t31) goto 67 else goto 69
     # live vars: $t0, $t5
 67: label L12
     # live vars: $t0, $t5
 68: goto 72
     # live vars: $t0, $t5
 69: label L13
     # live vars:
 70: $t42 := 0
     # live vars: $t42
 71: abort($t42)
     # live vars: $t0, $t5
 72: label L14
     # live vars: $t0, $t5
 73: $t46 := borrow_local($t0)
     # live vars: $t5, $t46
 74: $t45 := borrow_field<0xc0ffee::m::Test2>.a($t46)
     # live vars: $t5, $t45
 75: $t47 := 0
     # live vars: $t5, $t45, $t47
 76: $t44 := vector::borrow<u64>($t45, $t47)
     # live vars: $t5, $t44
 77: $t50 := borrow_local($t5)
     # live vars: $t44, $t50
 78: $t49 := borrow_field<0xc0ffee::m::Test2>.a($t50)
     # live vars: $t44, $t49
 79: $t51 := 0
     # live vars: $t44, $t49, $t51
 80: $t48 := vector::borrow<u64>($t49, $t51)
     # live vars: $t44, $t48
 81: $t43 := ==($t44, $t48)
     # live vars: $t43
 82: if ($t43) goto 83 else goto 85
     # live vars:
 83: label L15
     # live vars:
 84: goto 88
     # live vars:
 85: label L16
     # live vars:
 86: $t52 := 0
     # live vars: $t52
 87: abort($t52)
     # live vars:
 88: label L17
     # live vars:
 89: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
     # live vars:
  0: $t3 := 1
     # live vars: $t3
  1: $t4 := 2
     # live vars: $t3, $t4
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t2
  3: $t1 := vector($t2)
     # live vars: $t1
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
     # live vars: $t0
  5: $t8 := 1
     # live vars: $t0, $t8
  6: $t9 := 2
     # live vars: $t0, $t8, $t9
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t0, $t7
  8: $t11 := 1
     # live vars: $t0, $t7, $t11
  9: $t12 := 2
     # live vars: $t0, $t7, $t11, $t12
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
     # live vars: $t0, $t7, $t10
 11: $t6 := vector($t7, $t10)
     # live vars: $t0, $t6
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
     # live vars: $t0, $t5
 13: $t14 := infer($t0)
     # live vars: $t0, $t5, $t14
 14: $t13 := !=($t14, $t5)
     # live vars: $t0, $t5, $t13
 15: if ($t13) goto 16 else goto 18
     # live vars: $t0, $t5
 16: label L0
     # live vars: $t0, $t5
 17: goto 21
     # live vars: $t0, $t5
 18: label L1
     # live vars:
 19: $t15 := 0
     # live vars: $t15
 20: abort($t15)
     # live vars: $t0, $t5
 21: label L2
     # live vars: $t0, $t5
 22: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 23: $t18 := borrow_local($t5)
     # live vars: $t0, $t5, $t17, $t18
 24: $t16 := !=($t17, $t18)
     # live vars: $t0, $t5, $t16
 25: if ($t16) goto 26 else goto 28
     # live vars: $t0, $t5
 26: label L3
     # live vars: $t0, $t5
 27: goto 31
     # live vars: $t0, $t5
 28: label L4
     # live vars:
 29: $t19 := 0
     # live vars: $t19
 30: abort($t19)
     # live vars: $t0, $t5
 31: label L5
     # live vars: $t0, $t5
 32: $t22 := borrow_local($t0)
     # live vars: $t0, $t5, $t22
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
     # live vars: $t0, $t5, $t23
 34: $t21 := read_ref($t23)
     # live vars: $t0, $t5, $t21
 35: $t25 := borrow_local($t5)
     # live vars: $t0, $t5, $t21, $t25
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
     # live vars: $t0, $t5, $t21, $t26
 37: $t24 := read_ref($t26)
     # live vars: $t0, $t5, $t21, $t24
 38: $t20 := !=($t21, $t24)
     # live vars: $t0, $t5, $t20
 39: if ($t20) goto 40 else goto 42
     # live vars: $t0, $t5
 40: label L6
     # live vars: $t0, $t5
 41: goto 45
     # live vars: $t0, $t5
 42: label L7
     # live vars:
 43: $t27 := 0
     # live vars: $t27
 44: abort($t27)
     # live vars: $t0, $t5
 45: label L8
     # live vars: $t0, $t5
 46: $t30 := borrow_local($t0)
     # live vars: $t0, $t5, $t30
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
     # live vars: $t0, $t5, $t29
 48: $t32 := borrow_local($t5)
     # live vars: $t0, $t5, $t29, $t32
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
     # live vars: $t0, $t5, $t29, $t31
 50: $t28 := !=($t29, $t31)
     # live vars: $t0, $t5, $t28
 51: if ($t28) goto 52 else goto 54
     # live vars: $t0, $t5
 52: label L9
     # live vars: $t0, $t5
 53: goto 57
     # live vars: $t0, $t5
 54: label L10
     # live vars:
 55: $t33 := 0
     # live vars: $t33
 56: abort($t33)
     # live vars: $t0, $t5
 57: label L11
     # live vars: $t0, $t5
 58: $t38 := borrow_local($t0)
     # live vars: $t0, $t5, $t38
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
     # live vars: $t0, $t5, $t37
 60: $t39 := 0
     # live vars: $t0, $t5, $t37, $t39
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
     # live vars: $t0, $t5, $t36
 62: $t35 := read_ref($t36)
     # live vars: $t0, $t5, $t35
 63: $t43 := borrow_local($t5)
     # live vars: $t0, $t5, $t35, $t43
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
     # live vars: $t0, $t5, $t35, $t42
 65: $t44 := 0
     # live vars: $t0, $t5, $t35, $t42, $t44
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
     # live vars: $t0, $t5, $t35, $t41
 67: $t40 := read_ref($t41)
     # live vars: $t0, $t5, $t35, $t40
 68: $t34 := ==($t35, $t40)
     # live vars: $t0, $t5, $t34
 69: if ($t34) goto 70 else goto 72
     # live vars: $t0, $t5
 70: label L12
     # live vars: $t0, $t5
 71: goto 75
     # live vars: $t0, $t5
 72: label L13
     # live vars:
 73: $t45 := 0
     # live vars: $t45
 74: abort($t45)
     # live vars: $t0, $t5
 75: label L14
     # live vars: $t0, $t5
 76: $t49 := borrow_local($t0)
     # live vars: $t5, $t49
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
     # live vars: $t5, $t48
 78: $t50 := 0
     # live vars: $t5, $t48, $t50
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
     # live vars: $t5, $t47
 80: $t53 := borrow_local($t5)
     # live vars: $t47, $t53
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t47, $t52
 82: $t54 := 0
     # live vars: $t47, $t52, $t54
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
     # live vars: $t47, $t51
 84: $t46 := ==($t47, $t51)
     # live vars: $t46
 85: if ($t46) goto 86 else goto 88
     # live vars:
 86: label L15
     # live vars:
 87: goto 91
     # live vars:
 88: label L16
     # live vars:
 89: $t55 := 0
     # live vars: $t55
 90: abort($t55)
     # live vars:
 91: label L17
     # live vars:
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t3 := 2
     # live vars: $t2, $t3
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1
  3: $t5 := 1
     # live vars: $t1, $t5
  4: $t6 := 2
     # live vars: $t1, $t5, $t6
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
     # live vars: $t1, $t4
  6: $t8 := 1
     # live vars: $t1, $t4, $t8
  7: $t9 := 2
     # live vars: $t1, $t4, $t8, $t9
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t1, $t4, $t7
  9: $t0 := vector($t1, $t4, $t7)
     # live vars: $t0
 10: $t12 := 1
     # live vars: $t0, $t12
 11: $t13 := 2
     # live vars: $t0, $t12, $t13
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
     # live vars: $t0, $t11
 13: $t15 := 1
     # live vars: $t0, $t11, $t15
 14: $t16 := 2
     # live vars: $t0, $t11, $t15, $t16
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
     # live vars: $t0, $t11, $t14
 16: $t18 := 1
     # live vars: $t0, $t11, $t14, $t18
 17: $t19 := 2
     # live vars: $t0, $t11, $t14, $t18, $t19
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
     # live vars: $t0, $t11, $t14, $t17
 19: $t10 := vector($t11, $t14, $t17)
     # live vars: $t0, $t10
 20: $t21 := infer($t0)
     # live vars: $t0, $t10, $t21
 21: $t20 := ==($t21, $t10)
     # live vars: $t0, $t10, $t20
 22: if ($t20) goto 23 else goto 25
     # live vars: $t0, $t10
 23: label L0
     # live vars: $t0, $t10
 24: goto 28
     # live vars: $t0, $t10
 25: label L1
     # live vars:
 26: $t22 := 0
     # live vars: $t22
 27: abort($t22)
     # live vars: $t0, $t10
 28: label L2
     # live vars: $t0, $t10
 29: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 30: $t25 := borrow_local($t10)
     # live vars: $t0, $t10, $t24, $t25
 31: $t23 := ==($t24, $t25)
     # live vars: $t0, $t10, $t23
 32: if ($t23) goto 33 else goto 35
     # live vars: $t0, $t10
 33: label L3
     # live vars: $t0, $t10
 34: goto 38
     # live vars: $t0, $t10
 35: label L4
     # live vars:
 36: $t26 := 0
     # live vars: $t26
 37: abort($t26)
     # live vars: $t0, $t10
 38: label L5
     # live vars: $t0, $t10
 39: $t30 := borrow_local($t0)
     # live vars: $t0, $t10, $t30
 40: $t31 := 0
     # live vars: $t0, $t10, $t30, $t31
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
     # live vars: $t0, $t10, $t29
 42: $t28 := read_ref($t29)
     # live vars: $t0, $t10, $t28
 43: $t34 := borrow_local($t10)
     # live vars: $t0, $t10, $t28, $t34
 44: $t35 := 0
     # live vars: $t0, $t10, $t28, $t34, $t35
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
     # live vars: $t0, $t10, $t28, $t33
 46: $t32 := read_ref($t33)
     # live vars: $t0, $t10, $t28, $t32
 47: $t27 := ==($t28, $t32)
     # live vars: $t0, $t10, $t27
 48: if ($t27) goto 49 else goto 51
     # live vars: $t0, $t10
 49: label L6
     # live vars: $t0, $t10
 50: goto 54
     # live vars: $t0, $t10
 51: label L7
     # live vars:
 52: $t36 := 0
     # live vars: $t36
 53: abort($t36)
     # live vars: $t0, $t10
 54: label L8
     # live vars: $t0, $t10
 55: $t39 := borrow_local($t0)
     # live vars: $t0, $t10, $t39
 56: $t40 := 0
     # live vars: $t0, $t10, $t39, $t40
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
     # live vars: $t0, $t10, $t38
 58: $t42 := borrow_local($t10)
     # live vars: $t0, $t10, $t38, $t42
 59: $t43 := 0
     # live vars: $t0, $t10, $t38, $t42, $t43
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
     # live vars: $t0, $t10, $t38, $t41
 61: $t37 := ==($t38, $t41)
     # live vars: $t0, $t10, $t37
 62: if ($t37) goto 63 else goto 65
     # live vars: $t0, $t10
 63: label L9
     # live vars: $t0, $t10
 64: goto 68
     # live vars: $t0, $t10
 65: label L10
     # live vars:
 66: $t44 := 0
     # live vars: $t44
 67: abort($t44)
     # live vars: $t0, $t10
 68: label L11
     # live vars: $t0, $t10
 69: $t48 := borrow_local($t0)
     # live vars: $t0, $t10, $t48
 70: $t49 := 1
     # live vars: $t0, $t10, $t48, $t49
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
     # live vars: $t0, $t10, $t47
 72: $t46 := read_ref($t47)
     # live vars: $t0, $t10, $t46
 73: $t52 := borrow_local($t10)
     # live vars: $t0, $t10, $t46, $t52
 74: $t53 := 1
     # live vars: $t0, $t10, $t46, $t52, $t53
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
     # live vars: $t0, $t10, $t46, $t51
 76: $t50 := read_ref($t51)
     # live vars: $t0, $t10, $t46, $t50
 77: $t45 := ==($t46, $t50)
     # live vars: $t0, $t10, $t45
 78: if ($t45) goto 79 else goto 81
     # live vars: $t0, $t10
 79: label L12
     # live vars: $t0, $t10
 80: goto 84
     # live vars: $t0, $t10
 81: label L13
     # live vars:
 82: $t54 := 0
     # live vars: $t54
 83: abort($t54)
     # live vars: $t0, $t10
 84: label L14
     # live vars: $t0, $t10
 85: $t57 := borrow_local($t0)
     # live vars: $t10, $t57
 86: $t58 := 1
     # live vars: $t10, $t57, $t58
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
     # live vars: $t10, $t56
 88: $t60 := borrow_local($t10)
     # live vars: $t56, $t60
 89: $t61 := 1
     # live vars: $t56, $t60, $t61
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
     # live vars: $t56, $t59
 91: $t55 := ==($t56, $t59)
     # live vars: $t55
 92: if ($t55) goto 93 else goto 95
     # live vars:
 93: label L15
     # live vars:
 94: goto 98
     # live vars:
 95: label L16
     # live vars:
 96: $t62 := 0
     # live vars: $t62
 97: abort($t62)
     # live vars:
 98: label L17
     # live vars:
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: vector<0xc0ffee::m::Test2>
     var $t12: 0xc0ffee::m::Test2
     var $t13: vector<u64>
     var $t14: u64
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test2
     var $t18: vector<u64>
     var $t19: u64
     var $t20: u64
     var $t21: u64
     var $t22: 0xc0ffee::m::Test2
     var $t23: vector<u64>
     var $t24: u64
     var $t25: u64
     var $t26: u64
     var $t27: bool
     var $t28: vector<0xc0ffee::m::Test2>
     var $t29: u64
     var $t30: bool
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: &vector<0xc0ffee::m::Test2>
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test2
     var $t36: &0xc0ffee::m::Test2
     var $t37: &vector<0xc0ffee::m::Test2>
     var $t38: u64
     var $t39: 0xc0ffee::m::Test2
     var $t40: &0xc0ffee::m::Test2
     var $t41: &vector<0xc0ffee::m::Test2>
     var $t42: u64
     var $t43: u64
     var $t44: bool
     var $t45: &0xc0ffee::m::Test2
     var $t46: &vector<0xc0ffee::m::Test2>
     var $t47: u64
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: u64
     var $t52: bool
     var $t53: 0xc0ffee::m::Test2
     var $t54: &0xc0ffee::m::Test2
     var $t55: &vector<0xc0ffee::m::Test2>
     var $t56: u64
     var $t57: 0xc0ffee::m::Test2
     var $t58: &0xc0ffee::m::Test2
     var $t59: &vector<0xc0ffee::m::Test2>
     var $t60: u64
     var $t61: u64
     var $t62: bool
     var $t63: &0xc0ffee::m::Test2
     var $t64: &vector<0xc0ffee::m::Test2>
     var $t65: u64
     var $t66: &0xc0ffee::m::Test2
     var $t67: &vector<0xc0ffee::m::Test2>
     var $t68: u64
     var $t69: u64
     # live vars:
  0: $t3 := 1
     # live vars: $t3
  1: $t4 := 2
     # live vars: $t3, $t4
  2: $t5 := 3
     # live vars: $t3, $t4, $t5
  3: $t2 := vector($t3, $t4, $t5)
     # live vars: $t2
  4: $t1 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t1
  5: $t8 := 1
     # live vars: $t1, $t8
  6: $t9 := 2
     # live vars: $t1, $t8, $t9
  7: $t10 := 3
     # live vars: $t1, $t8, $t9, $t10
  8: $t7 := vector($t8, $t9, $t10)
     # live vars: $t1, $t7
  9: $t6 := pack 0xc0ffee::m::Test2($t7)
     # live vars: $t1, $t6
 10: $t0 := vector($t1, $t6)
     # live vars: $t0
 11: $t14 := 1
     # live vars: $t0, $t14
 12: $t15 := 2
     # live vars: $t0, $t14, $t15
 13: $t16 := 3
     # live vars: $t0, $t14, $t15, $t16
 14: $t13 := vector($t14, $t15, $t16)
     # live vars: $t0, $t13
 15: $t12 := pack 0xc0ffee::m::Test2($t13)
     # live vars: $t0, $t12
 16: $t19 := 2
     # live vars: $t0, $t12, $t19
 17: $t20 := 2
     # live vars: $t0, $t12, $t19, $t20
 18: $t21 := 2
     # live vars: $t0, $t12, $t19, $t20, $t21
 19: $t18 := vector($t19, $t20, $t21)
     # live vars: $t0, $t12, $t18
 20: $t17 := pack 0xc0ffee::m::Test2($t18)
     # live vars: $t0, $t12, $t17
 21: $t24 := 1
     # live vars: $t0, $t12, $t17, $t24
 22: $t25 := 2
     # live vars: $t0, $t12, $t17, $t24, $t25
 23: $t26 := 3
     # live vars: $t0, $t12, $t17, $t24, $t25, $t26
 24: $t23 := vector($t24, $t25, $t26)
     # live vars: $t0, $t12, $t17, $t23
 25: $t22 := pack 0xc0ffee::m::Test2($t23)
     # live vars: $t0, $t12, $t17, $t22
 26: $t11 := vector($t12, $t17, $t22)
     # live vars: $t0, $t11
 27: $t28 := infer($t0)
     # live vars: $t0, $t11, $t28
 28: $t27 := !=($t28, $t11)
     # live vars: $t0, $t11, $t27
 29: if ($t27) goto 30 else goto 32
     # live vars: $t0, $t11
 30: label L0
     # live vars: $t0, $t11
 31: goto 35
     # live vars: $t0, $t11
 32: label L1
     # live vars:
 33: $t29 := 0
     # live vars: $t29
 34: abort($t29)
     # live vars: $t0, $t11
 35: label L2
     # live vars: $t0, $t11
 36: $t31 := borrow_local($t0)
     # live vars: $t0, $t11, $t31
 37: $t32 := borrow_local($t11)
     # live vars: $t0, $t11, $t31, $t32
 38: $t30 := !=($t31, $t32)
     # live vars: $t0, $t11, $t30
 39: if ($t30) goto 40 else goto 42
     # live vars: $t0, $t11
 40: label L3
     # live vars: $t0, $t11
 41: goto 45
     # live vars: $t0, $t11
 42: label L4
     # live vars:
 43: $t33 := 0
     # live vars: $t33
 44: abort($t33)
     # live vars: $t0, $t11
 45: label L5
     # live vars: $t0, $t11
 46: $t37 := borrow_local($t0)
     # live vars: $t0, $t11, $t37
 47: $t38 := 0
     # live vars: $t0, $t11, $t37, $t38
 48: $t36 := vector::borrow<0xc0ffee::m::Test2>($t37, $t38)
     # live vars: $t0, $t11, $t36
 49: $t35 := read_ref($t36)
     # live vars: $t0, $t11, $t35
 50: $t41 := borrow_local($t11)
     # live vars: $t0, $t11, $t35, $t41
 51: $t42 := 0
     # live vars: $t0, $t11, $t35, $t41, $t42
 52: $t40 := vector::borrow<0xc0ffee::m::Test2>($t41, $t42)
     # live vars: $t0, $t11, $t35, $t40
 53: $t39 := read_ref($t40)
     # live vars: $t0, $t11, $t35, $t39
 54: $t34 := ==($t35, $t39)
     # live vars: $t0, $t11, $t34
 55: if ($t34) goto 56 else goto 58
     # live vars: $t0, $t11
 56: label L6
     # live vars: $t0, $t11
 57: goto 61
     # live vars: $t0, $t11
 58: label L7
     # live vars:
 59: $t43 := 0
     # live vars: $t43
 60: abort($t43)
     # live vars: $t0, $t11
 61: label L8
     # live vars: $t0, $t11
 62: $t46 := borrow_local($t0)
     # live vars: $t0, $t11, $t46
 63: $t47 := 0
     # live vars: $t0, $t11, $t46, $t47
 64: $t45 := vector::borrow<0xc0ffee::m::Test2>($t46, $t47)
     # live vars: $t0, $t11, $t45
 65: $t49 := borrow_local($t11)
     # live vars: $t0, $t11, $t45, $t49
 66: $t50 := 0
     # live vars: $t0, $t11, $t45, $t49, $t50
 67: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
     # live vars: $t0, $t11, $t45, $t48
 68: $t44 := ==($t45, $t48)
     # live vars: $t0, $t11, $t44
 69: if ($t44) goto 70 else goto 72
     # live vars: $t0, $t11
 70: label L9
     # live vars: $t0, $t11
 71: goto 75
     # live vars: $t0, $t11
 72: label L10
     # live vars:
 73: $t51 := 0
     # live vars: $t51
 74: abort($t51)
     # live vars: $t0, $t11
 75: label L11
     # live vars: $t0, $t11
 76: $t55 := borrow_local($t0)
     # live vars: $t0, $t11, $t55
 77: $t56 := 1
     # live vars: $t0, $t11, $t55, $t56
 78: $t54 := vector::borrow<0xc0ffee::m::Test2>($t55, $t56)
     # live vars: $t0, $t11, $t54
 79: $t53 := read_ref($t54)
     # live vars: $t0, $t11, $t53
 80: $t59 := borrow_local($t11)
     # live vars: $t0, $t11, $t53, $t59
 81: $t60 := 1
     # live vars: $t0, $t11, $t53, $t59, $t60
 82: $t58 := vector::borrow<0xc0ffee::m::Test2>($t59, $t60)
     # live vars: $t0, $t11, $t53, $t58
 83: $t57 := read_ref($t58)
     # live vars: $t0, $t11, $t53, $t57
 84: $t52 := !=($t53, $t57)
     # live vars: $t0, $t11, $t52
 85: if ($t52) goto 86 else goto 88
     # live vars: $t0, $t11
 86: label L12
     # live vars: $t0, $t11
 87: goto 91
     # live vars: $t0, $t11
 88: label L13
     # live vars:
 89: $t61 := 0
     # live vars: $t61
 90: abort($t61)
     # live vars: $t0, $t11
 91: label L14
     # live vars: $t0, $t11
 92: $t64 := borrow_local($t0)
     # live vars: $t11, $t64
 93: $t65 := 1
     # live vars: $t11, $t64, $t65
 94: $t63 := vector::borrow<0xc0ffee::m::Test2>($t64, $t65)
     # live vars: $t11, $t63
 95: $t67 := borrow_local($t11)
     # live vars: $t63, $t67
 96: $t68 := 1
     # live vars: $t63, $t67, $t68
 97: $t66 := vector::borrow<0xc0ffee::m::Test2>($t67, $t68)
     # live vars: $t63, $t66
 98: $t62 := !=($t63, $t66)
     # live vars: $t62
 99: if ($t62) goto 100 else goto 102
     # live vars:
100: label L15
     # live vars:
101: goto 105
     # live vars:
102: label L16
     # live vars:
103: $t69 := 0
     # live vars: $t69
104: abort($t69)
     # live vars:
105: label L17
     # live vars:
106: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
     # live vars:
  0: $t4 := 1
     # live vars: $t4
  1: $t5 := 2
     # live vars: $t4, $t5
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t3
  3: $t7 := 1
     # live vars: $t3, $t7
  4: $t8 := 2
     # live vars: $t3, $t7, $t8
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
     # live vars: $t3, $t6
  6: $t2 := vector($t3, $t6)
     # live vars: $t2
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t1
  8: $t0 := vector($t1)
     # live vars: $t0
  9: $t13 := 1
     # live vars: $t0, $t13
 10: $t14 := 2
     # live vars: $t0, $t13, $t14
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
     # live vars: $t0, $t12
 12: $t16 := 1
     # live vars: $t0, $t12, $t16
 13: $t17 := 2
     # live vars: $t0, $t12, $t16, $t17
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
     # live vars: $t0, $t12, $t15
 15: $t11 := vector($t12, $t15)
     # live vars: $t0, $t11
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
     # live vars: $t0, $t10
 17: $t21 := 1
     # live vars: $t0, $t10, $t21
 18: $t22 := 2
     # live vars: $t0, $t10, $t21, $t22
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
     # live vars: $t0, $t10, $t20
 20: $t24 := 1
     # live vars: $t0, $t10, $t20, $t24
 21: $t25 := 2
     # live vars: $t0, $t10, $t20, $t24, $t25
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
     # live vars: $t0, $t10, $t20, $t23
 23: $t19 := vector($t20, $t23)
     # live vars: $t0, $t10, $t19
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
     # live vars: $t0, $t10, $t18
 25: $t9 := vector($t10, $t18)
     # live vars: $t0, $t9
 26: $t27 := infer($t0)
     # live vars: $t0, $t9, $t27
 27: $t26 := !=($t27, $t9)
     # live vars: $t0, $t9, $t26
 28: if ($t26) goto 29 else goto 31
     # live vars: $t0, $t9
 29: label L0
     # live vars: $t0, $t9
 30: goto 34
     # live vars: $t0, $t9
 31: label L1
     # live vars:
 32: $t28 := 0
     # live vars: $t28
 33: abort($t28)
     # live vars: $t0, $t9
 34: label L2
     # live vars: $t0, $t9
 35: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 36: $t31 := borrow_local($t9)
     # live vars: $t0, $t9, $t30, $t31
 37: $t29 := !=($t30, $t31)
     # live vars: $t0, $t9, $t29
 38: if ($t29) goto 39 else goto 41
     # live vars: $t0, $t9
 39: label L3
     # live vars: $t0, $t9
 40: goto 44
     # live vars: $t0, $t9
 41: label L4
     # live vars:
 42: $t32 := 0
     # live vars: $t32
 43: abort($t32)
     # live vars: $t0, $t9
 44: label L5
     # live vars: $t0, $t9
 45: $t36 := borrow_local($t0)
     # live vars: $t0, $t9, $t36
 46: $t37 := 0
     # live vars: $t0, $t9, $t36, $t37
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
     # live vars: $t0, $t9, $t35
 48: $t34 := read_ref($t35)
     # live vars: $t0, $t9, $t34
 49: $t40 := borrow_local($t9)
     # live vars: $t0, $t9, $t34, $t40
 50: $t41 := 0
     # live vars: $t0, $t9, $t34, $t40, $t41
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
     # live vars: $t0, $t9, $t34, $t39
 52: $t38 := read_ref($t39)
     # live vars: $t0, $t9, $t34, $t38
 53: $t33 := ==($t34, $t38)
     # live vars: $t0, $t9, $t33
 54: if ($t33) goto 55 else goto 57
     # live vars: $t0, $t9
 55: label L6
     # live vars: $t0, $t9
 56: goto 60
     # live vars: $t0, $t9
 57: label L7
     # live vars:
 58: $t42 := 0
     # live vars: $t42
 59: abort($t42)
     # live vars: $t0, $t9
 60: label L8
     # live vars: $t0, $t9
 61: $t45 := borrow_local($t0)
     # live vars: $t0, $t9, $t45
 62: $t46 := 0
     # live vars: $t0, $t9, $t45, $t46
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
     # live vars: $t0, $t9, $t44
 64: $t48 := borrow_local($t9)
     # live vars: $t0, $t9, $t44, $t48
 65: $t49 := 0
     # live vars: $t0, $t9, $t44, $t48, $t49
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
     # live vars: $t0, $t9, $t44, $t47
 67: $t43 := ==($t44, $t47)
     # live vars: $t0, $t9, $t43
 68: if ($t43) goto 69 else goto 71
     # live vars: $t0, $t9
 69: label L9
     # live vars: $t0, $t9
 70: goto 74
     # live vars: $t0, $t9
 71: label L10
     # live vars:
 72: $t50 := 0
     # live vars: $t50
 73: abort($t50)
     # live vars: $t0, $t9
 74: label L11
     # live vars: $t0, $t9
 75: $t54 := borrow_local($t0)
     # live vars: $t0, $t9, $t54
 76: $t55 := 0
     # live vars: $t0, $t9, $t54, $t55
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
     # live vars: $t0, $t9, $t53
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t0, $t9, $t56
 79: $t52 := read_ref($t56)
     # live vars: $t0, $t9, $t52
 80: $t59 := borrow_local($t9)
     # live vars: $t0, $t9, $t52, $t59
 81: $t60 := 0
     # live vars: $t0, $t9, $t52, $t59, $t60
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
     # live vars: $t0, $t9, $t52, $t58
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
     # live vars: $t0, $t9, $t52, $t61
 84: $t57 := read_ref($t61)
     # live vars: $t0, $t9, $t52, $t57
 85: $t51 := ==($t52, $t57)
     # live vars: $t0, $t9, $t51
 86: if ($t51) goto 87 else goto 89
     # live vars: $t0, $t9
 87: label L12
     # live vars: $t0, $t9
 88: goto 92
     # live vars: $t0, $t9
 89: label L13
     # live vars:
 90: $t62 := 0
     # live vars: $t62
 91: abort($t62)
     # live vars: $t0, $t9
 92: label L14
     # live vars: $t0, $t9
 93: $t66 := borrow_local($t0)
     # live vars: $t9, $t66
 94: $t67 := 0
     # live vars: $t9, $t66, $t67
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
     # live vars: $t9, $t65
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
     # live vars: $t9, $t64
 97: $t70 := borrow_local($t9)
     # live vars: $t64, $t70
 98: $t71 := 0
     # live vars: $t64, $t70, $t71
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
     # live vars: $t64, $t69
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
     # live vars: $t64, $t68
101: $t63 := ==($t64, $t68)
     # live vars: $t63
102: if ($t63) goto 103 else goto 105
     # live vars:
103: label L15
     # live vars:
104: goto 108
     # live vars:
105: label L16
     # live vars:
106: $t72 := 0
     # live vars: $t72
107: abort($t72)
     # live vars:
108: label L17
     # live vars:
109: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
     # live vars:
  0: $t1 := 1
     # live vars: $t1
  1: $t2 := 2
     # live vars: $t1, $t2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
     # live vars: $t0
  3: $t4 := 1
     # live vars: $t0, $t4
  4: $t5 := 2
     # live vars: $t0, $t4, $t5
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t3
  6: $t7 := infer($t0)
     # live vars: $t0, $t3, $t7
  7: $t6 := ==($t7, $t3)
     # live vars: $t0, $t3, $t6
  8: if ($t6) goto 9 else goto 11
     # live vars: $t0, $t3
  9: label L0
     # live vars: $t0, $t3
 10: goto 14
     # live vars: $t0, $t3
 11: label L1
     # live vars:
 12: $t8 := 0
     # live vars: $t8
 13: abort($t8)
     # live vars: $t0, $t3
 14: label L2
     # live vars: $t0, $t3
 15: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 16: $t11 := borrow_local($t3)
     # live vars: $t0, $t3, $t10, $t11
 17: $t9 := ==($t10, $t11)
     # live vars: $t0, $t3, $t9
 18: if ($t9) goto 19 else goto 21
     # live vars: $t0, $t3
 19: label L3
     # live vars: $t0, $t3
 20: goto 24
     # live vars: $t0, $t3
 21: label L4
     # live vars:
 22: $t12 := 0
     # live vars: $t12
 23: abort($t12)
     # live vars: $t0, $t3
 24: label L5
     # live vars: $t0, $t3
 25: $t15 := borrow_local($t0)
     # live vars: $t0, $t3, $t15
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
     # live vars: $t0, $t3, $t16
 27: $t14 := read_ref($t16)
     # live vars: $t0, $t3, $t14
 28: $t18 := borrow_local($t3)
     # live vars: $t0, $t3, $t14, $t18
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
     # live vars: $t0, $t3, $t14, $t19
 30: $t17 := read_ref($t19)
     # live vars: $t0, $t3, $t14, $t17
 31: $t13 := ==($t14, $t17)
     # live vars: $t0, $t3, $t13
 32: if ($t13) goto 33 else goto 35
     # live vars: $t0, $t3
 33: label L6
     # live vars: $t0, $t3
 34: goto 38
     # live vars: $t0, $t3
 35: label L7
     # live vars:
 36: $t20 := 0
     # live vars: $t20
 37: abort($t20)
     # live vars: $t0, $t3
 38: label L8
     # live vars: $t0, $t3
 39: $t23 := borrow_local($t0)
     # live vars: $t0, $t3, $t23
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
     # live vars: $t0, $t3, $t22
 41: $t25 := borrow_local($t3)
     # live vars: $t0, $t3, $t22, $t25
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
     # live vars: $t0, $t3, $t22, $t24
 43: $t21 := ==($t22, $t24)
     # live vars: $t0, $t3, $t21
 44: if ($t21) goto 45 else goto 47
     # live vars: $t0, $t3
 45: label L9
     # live vars: $t0, $t3
 46: goto 50
     # live vars: $t0, $t3
 47: label L10
     # live vars:
 48: $t26 := 0
     # live vars: $t26
 49: abort($t26)
     # live vars: $t0, $t3
 50: label L11
     # live vars: $t0, $t3
 51: $t29 := borrow_local($t0)
     # live vars: $t0, $t3, $t29
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
     # live vars: $t0, $t3, $t30
 53: $t28 := read_ref($t30)
     # live vars: $t0, $t3, $t28
 54: $t32 := borrow_local($t3)
     # live vars: $t0, $t3, $t28, $t32
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
     # live vars: $t0, $t3, $t28, $t33
 56: $t31 := read_ref($t33)
     # live vars: $t0, $t3, $t28, $t31
 57: $t27 := ==($t28, $t31)
     # live vars: $t0, $t3, $t27
 58: if ($t27) goto 59 else goto 61
     # live vars: $t0, $t3
 59: label L12
     # live vars: $t0, $t3
 60: goto 64
     # live vars: $t0, $t3
 61: label L13
     # live vars:
 62: $t34 := 0
     # live vars: $t34
 63: abort($t34)
     # live vars: $t0, $t3
 64: label L14
     # live vars: $t0, $t3
 65: $t37 := borrow_local($t0)
     # live vars: $t3, $t37
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
     # live vars: $t3, $t36
 67: $t39 := borrow_local($t3)
     # live vars: $t36, $t39
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
     # live vars: $t36, $t38
 69: $t35 := ==($t36, $t38)
     # live vars: $t35
 70: if ($t35) goto 71 else goto 73
     # live vars:
 71: label L15
     # live vars:
 72: goto 76
     # live vars:
 73: label L16
     # live vars:
 74: $t40 := 0
     # live vars: $t40
 75: abort($t40)
     # live vars:
 76: label L17
     # live vars:
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test2
     var $t6: vector<u64>
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: bool
     var $t11: 0xc0ffee::m::Test2
     var $t12: u64
     var $t13: bool
     var $t14: &0xc0ffee::m::Test2
     var $t15: &0xc0ffee::m::Test2
     var $t16: u64
     var $t17: bool
     var $t18: vector<u64>
     var $t19: &0xc0ffee::m::Test2
     var $t20: &vector<u64>
     var $t21: vector<u64>
     var $t22: &0xc0ffee::m::Test2
     var $t23: &vector<u64>
     var $t24: u64
     var $t25: bool
     var $t26: &vector<u64>
     var $t27: &0xc0ffee::m::Test2
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: bool
     var $t32: u64
     var $t33: &u64
     var $t34: &vector<u64>
     var $t35: &0xc0ffee::m::Test2
     var $t36: u64
     var $t37: u64
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &u64
     var $t45: &vector<u64>
     var $t46: &0xc0ffee::m::Test2
     var $t47: u64
     var $t48: &u64
     var $t49: &vector<u64>
     var $t50: &0xc0ffee::m::Test2
     var $t51: u64
     var $t52: u64
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t3 := 2
     # live vars: $t2, $t3
  2: $t4 := 3
     # live vars: $t2, $t3, $t4
  3: $t1 := vector($t2, $t3, $t4)
     # live vars: $t1
  4: $t0 := pack 0xc0ffee::m::Test2($t1)
     # live vars: $t0
  5: $t7 := 1
     # live vars: $t0, $t7
  6: $t8 := 2
     # live vars: $t0, $t7, $t8
  7: $t9 := 3
     # live vars: $t0, $t7, $t8, $t9
  8: $t6 := vector($t7, $t8, $t9)
     # live vars: $t0, $t6
  9: $t5 := pack 0xc0ffee::m::Test2($t6)
     # live vars: $t0, $t5
 10: $t11 := infer($t0)
     # live vars: $t0, $t5, $t11
 11: $t10 := ==($t11, $t5)
     # live vars: $t0, $t5, $t10
 12: if ($t10) goto 13 else goto 15
     # live vars: $t0, $t5
 13: label L0
     # live vars: $t0, $t5
 14: goto 18
     # live vars: $t0, $t5
 15: label L1
     # live vars:
 16: $t12 := 0
     # live vars: $t12
 17: abort($t12)
     # live vars: $t0, $t5
 18: label L2
     # live vars: $t0, $t5
 19: $t14 := borrow_local($t0)
     # live vars: $t0, $t5, $t14
 20: $t15 := borrow_local($t5)
     # live vars: $t0, $t5, $t14, $t15
 21: $t13 := ==($t14, $t15)
     # live vars: $t0, $t5, $t13
 22: if ($t13) goto 23 else goto 25
     # live vars: $t0, $t5
 23: label L3
     # live vars: $t0, $t5
 24: goto 28
     # live vars: $t0, $t5
 25: label L4
     # live vars:
 26: $t16 := 0
     # live vars: $t16
 27: abort($t16)
     # live vars: $t0, $t5
 28: label L5
     # live vars: $t0, $t5
 29: $t19 := borrow_local($t0)
     # live vars: $t0, $t5, $t19
 30: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t19)
     # live vars: $t0, $t5, $t20
 31: $t18 := read_ref($t20)
     # live vars: $t0, $t5, $t18
 32: $t22 := borrow_local($t5)
     # live vars: $t0, $t5, $t18, $t22
 33: $t23 := borrow_field<0xc0ffee::m::Test2>.a($t22)
     # live vars: $t0, $t5, $t18, $t23
 34: $t21 := read_ref($t23)
     # live vars: $t0, $t5, $t18, $t21
 35: $t17 := ==($t18, $t21)
     # live vars: $t0, $t5, $t17
 36: if ($t17) goto 37 else goto 39
     # live vars: $t0, $t5
 37: label L6
     # live vars: $t0, $t5
 38: goto 42
     # live vars: $t0, $t5
 39: label L7
     # live vars:
 40: $t24 := 0
     # live vars: $t24
 41: abort($t24)
     # live vars: $t0, $t5
 42: label L8
     # live vars: $t0, $t5
 43: $t27 := borrow_local($t0)
     # live vars: $t0, $t5, $t27
 44: $t26 := borrow_field<0xc0ffee::m::Test2>.a($t27)
     # live vars: $t0, $t5, $t26
 45: $t29 := borrow_local($t5)
     # live vars: $t0, $t5, $t26, $t29
 46: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
     # live vars: $t0, $t5, $t26, $t28
 47: $t25 := ==($t26, $t28)
     # live vars: $t0, $t5, $t25
 48: if ($t25) goto 49 else goto 51
     # live vars: $t0, $t5
 49: label L9
     # live vars: $t0, $t5
 50: goto 54
     # live vars: $t0, $t5
 51: label L10
     # live vars:
 52: $t30 := 0
     # live vars: $t30
 53: abort($t30)
     # live vars: $t0, $t5
 54: label L11
     # live vars: $t0, $t5
 55: $t35 := borrow_local($t0)
     # live vars: $t0, $t5, $t35
 56: $t34 := borrow_field<0xc0ffee::m::Test2>.a($t35)
     # live vars: $t0, $t5, $t34
 57: $t36 := 0
     # live vars: $t0, $t5, $t34, $t36
 58: $t33 := vector::borrow<u64>($t34, $t36)
     # live vars: $t0, $t5, $t33
 59: $t32 := read_ref($t33)
     # live vars: $t0, $t5, $t32
 60: $t40 := borrow_local($t5)
     # live vars: $t0, $t5, $t32, $t40
 61: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
     # live vars: $t0, $t5, $t32, $t39
 62: $t41 := 0
     # live vars: $t0, $t5, $t32, $t39, $t41
 63: $t38 := vector::borrow<u64>($t39, $t41)
     # live vars: $t0, $t5, $t32, $t38
 64: $t37 := read_ref($t38)
     # live vars: $t0, $t5, $t32, $t37
 65: $t31 := ==($t32, $t37)
     # live vars: $t0, $t5, $t31
 66: if ($t31) goto 67 else goto 69
     # live vars: $t0, $t5
 67: label L12
     # live vars: $t0, $t5
 68: goto 72
     # live vars: $t0, $t5
 69: label L13
     # live vars:
 70: $t42 := 0
     # live vars: $t42
 71: abort($t42)
     # live vars: $t0, $t5
 72: label L14
     # live vars: $t0, $t5
 73: $t46 := borrow_local($t0)
     # live vars: $t5, $t46
 74: $t45 := borrow_field<0xc0ffee::m::Test2>.a($t46)
     # live vars: $t5, $t45
 75: $t47 := 0
     # live vars: $t5, $t45, $t47
 76: $t44 := vector::borrow<u64>($t45, $t47)
     # live vars: $t5, $t44
 77: $t50 := borrow_local($t5)
     # live vars: $t44, $t50
 78: $t49 := borrow_field<0xc0ffee::m::Test2>.a($t50)
     # live vars: $t44, $t49
 79: $t51 := 0
     # live vars: $t44, $t49, $t51
 80: $t48 := vector::borrow<u64>($t49, $t51)
     # live vars: $t44, $t48
 81: $t43 := ==($t44, $t48)
     # live vars: $t43
 82: if ($t43) goto 83 else goto 85
     # live vars:
 83: label L15
     # live vars:
 84: goto 88
     # live vars:
 85: label L16
     # live vars:
 86: $t52 := 0
     # live vars: $t52
 87: abort($t52)
     # live vars:
 88: label L17
     # live vars:
 89: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
     # live vars:
  0: $t3 := 1
     # live vars: $t3
  1: $t4 := 2
     # live vars: $t3, $t4
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t2
  3: $t1 := vector($t2)
     # live vars: $t1
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
     # live vars: $t0
  5: $t8 := 1
     # live vars: $t0, $t8
  6: $t9 := 2
     # live vars: $t0, $t8, $t9
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t0, $t7
  8: $t11 := 1
     # live vars: $t0, $t7, $t11
  9: $t12 := 2
     # live vars: $t0, $t7, $t11, $t12
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
     # live vars: $t0, $t7, $t10
 11: $t6 := vector($t7, $t10)
     # live vars: $t0, $t6
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
     # live vars: $t0, $t5
 13: $t14 := infer($t0)
     # live vars: $t0, $t5, $t14
 14: $t13 := !=($t14, $t5)
     # live vars: $t0, $t5, $t13
 15: if ($t13) goto 16 else goto 18
     # live vars: $t0, $t5
 16: label L0
     # live vars: $t0, $t5
 17: goto 21
     # live vars: $t0, $t5
 18: label L1
     # live vars:
 19: $t15 := 0
     # live vars: $t15
 20: abort($t15)
     # live vars: $t0, $t5
 21: label L2
     # live vars: $t0, $t5
 22: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 23: $t18 := borrow_local($t5)
     # live vars: $t0, $t5, $t17, $t18
 24: $t16 := !=($t17, $t18)
     # live vars: $t0, $t5, $t16
 25: if ($t16) goto 26 else goto 28
     # live vars: $t0, $t5
 26: label L3
     # live vars: $t0, $t5
 27: goto 31
     # live vars: $t0, $t5
 28: label L4
     # live vars:
 29: $t19 := 0
     # live vars: $t19
 30: abort($t19)
     # live vars: $t0, $t5
 31: label L5
     # live vars: $t0, $t5
 32: $t22 := borrow_local($t0)
     # live vars: $t0, $t5, $t22
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
     # live vars: $t0, $t5, $t23
 34: $t21 := read_ref($t23)
     # live vars: $t0, $t5, $t21
 35: $t25 := borrow_local($t5)
     # live vars: $t0, $t5, $t21, $t25
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
     # live vars: $t0, $t5, $t21, $t26
 37: $t24 := read_ref($t26)
     # live vars: $t0, $t5, $t21, $t24
 38: $t20 := !=($t21, $t24)
     # live vars: $t0, $t5, $t20
 39: if ($t20) goto 40 else goto 42
     # live vars: $t0, $t5
 40: label L6
     # live vars: $t0, $t5
 41: goto 45
     # live vars: $t0, $t5
 42: label L7
     # live vars:
 43: $t27 := 0
     # live vars: $t27
 44: abort($t27)
     # live vars: $t0, $t5
 45: label L8
     # live vars: $t0, $t5
 46: $t30 := borrow_local($t0)
     # live vars: $t0, $t5, $t30
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
     # live vars: $t0, $t5, $t29
 48: $t32 := borrow_local($t5)
     # live vars: $t0, $t5, $t29, $t32
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
     # live vars: $t0, $t5, $t29, $t31
 50: $t28 := !=($t29, $t31)
     # live vars: $t0, $t5, $t28
 51: if ($t28) goto 52 else goto 54
     # live vars: $t0, $t5
 52: label L9
     # live vars: $t0, $t5
 53: goto 57
     # live vars: $t0, $t5
 54: label L10
     # live vars:
 55: $t33 := 0
     # live vars: $t33
 56: abort($t33)
     # live vars: $t0, $t5
 57: label L11
     # live vars: $t0, $t5
 58: $t38 := borrow_local($t0)
     # live vars: $t0, $t5, $t38
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
     # live vars: $t0, $t5, $t37
 60: $t39 := 0
     # live vars: $t0, $t5, $t37, $t39
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
     # live vars: $t0, $t5, $t36
 62: $t35 := read_ref($t36)
     # live vars: $t0, $t5, $t35
 63: $t43 := borrow_local($t5)
     # live vars: $t0, $t5, $t35, $t43
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
     # live vars: $t0, $t5, $t35, $t42
 65: $t44 := 0
     # live vars: $t0, $t5, $t35, $t42, $t44
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
     # live vars: $t0, $t5, $t35, $t41
 67: $t40 := read_ref($t41)
     # live vars: $t0, $t5, $t35, $t40
 68: $t34 := ==($t35, $t40)
     # live vars: $t0, $t5, $t34
 69: if ($t34) goto 70 else goto 72
     # live vars: $t0, $t5
 70: label L12
     # live vars: $t0, $t5
 71: goto 75
     # live vars: $t0, $t5
 72: label L13
     # live vars:
 73: $t45 := 0
     # live vars: $t45
 74: abort($t45)
     # live vars: $t0, $t5
 75: label L14
     # live vars: $t0, $t5
 76: $t49 := borrow_local($t0)
     # live vars: $t5, $t49
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
     # live vars: $t5, $t48
 78: $t50 := 0
     # live vars: $t5, $t48, $t50
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
     # live vars: $t5, $t47
 80: $t53 := borrow_local($t5)
     # live vars: $t47, $t53
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t47, $t52
 82: $t54 := 0
     # live vars: $t47, $t52, $t54
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
     # live vars: $t47, $t51
 84: $t46 := ==($t47, $t51)
     # live vars: $t46
 85: if ($t46) goto 86 else goto 88
     # live vars:
 86: label L15
     # live vars:
 87: goto 91
     # live vars:
 88: label L16
     # live vars:
 89: $t55 := 0
     # live vars: $t55
 90: abort($t55)
     # live vars:
 91: label L17
     # live vars:
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t3 := 2
     # live vars: $t2, $t3
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1
  3: $t5 := 1
     # live vars: $t1, $t5
  4: $t6 := 2
     # live vars: $t1, $t5, $t6
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
     # live vars: $t1, $t4
  6: $t8 := 1
     # live vars: $t1, $t4, $t8
  7: $t9 := 2
     # live vars: $t1, $t4, $t8, $t9
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t1, $t4, $t7
  9: $t0 := vector($t1, $t4, $t7)
     # live vars: $t0
 10: $t12 := 1
     # live vars: $t0, $t12
 11: $t13 := 2
     # live vars: $t0, $t12, $t13
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
     # live vars: $t0, $t11
 13: $t15 := 1
     # live vars: $t0, $t11, $t15
 14: $t16 := 2
     # live vars: $t0, $t11, $t15, $t16
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
     # live vars: $t0, $t11, $t14
 16: $t18 := 1
     # live vars: $t0, $t11, $t14, $t18
 17: $t19 := 2
     # live vars: $t0, $t11, $t14, $t18, $t19
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
     # live vars: $t0, $t11, $t14, $t17
 19: $t10 := vector($t11, $t14, $t17)
     # live vars: $t0, $t10
 20: $t21 := infer($t0)
     # live vars: $t0, $t10, $t21
 21: $t20 := ==($t21, $t10)
     # live vars: $t0, $t10, $t20
 22: if ($t20) goto 23 else goto 25
     # live vars: $t0, $t10
 23: label L0
     # live vars: $t0, $t10
 24: goto 28
     # live vars: $t0, $t10
 25: label L1
     # live vars:
 26: $t22 := 0
     # live vars: $t22
 27: abort($t22)
     # live vars: $t0, $t10
 28: label L2
     # live vars: $t0, $t10
 29: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 30: $t25 := borrow_local($t10)
     # live vars: $t0, $t10, $t24, $t25
 31: $t23 := ==($t24, $t25)
     # live vars: $t0, $t10, $t23
 32: if ($t23) goto 33 else goto 35
     # live vars: $t0, $t10
 33: label L3
     # live vars: $t0, $t10
 34: goto 38
     # live vars: $t0, $t10
 35: label L4
     # live vars:
 36: $t26 := 0
     # live vars: $t26
 37: abort($t26)
     # live vars: $t0, $t10
 38: label L5
     # live vars: $t0, $t10
 39: $t30 := borrow_local($t0)
     # live vars: $t0, $t10, $t30
 40: $t31 := 0
     # live vars: $t0, $t10, $t30, $t31
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
     # live vars: $t0, $t10, $t29
 42: $t28 := read_ref($t29)
     # live vars: $t0, $t10, $t28
 43: $t34 := borrow_local($t10)
     # live vars: $t0, $t10, $t28, $t34
 44: $t35 := 0
     # live vars: $t0, $t10, $t28, $t34, $t35
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
     # live vars: $t0, $t10, $t28, $t33
 46: $t32 := read_ref($t33)
     # live vars: $t0, $t10, $t28, $t32
 47: $t27 := ==($t28, $t32)
     # live vars: $t0, $t10, $t27
 48: if ($t27) goto 49 else goto 51
     # live vars: $t0, $t10
 49: label L6
     # live vars: $t0, $t10
 50: goto 54
     # live vars: $t0, $t10
 51: label L7
     # live vars:
 52: $t36 := 0
     # live vars: $t36
 53: abort($t36)
     # live vars: $t0, $t10
 54: label L8
     # live vars: $t0, $t10
 55: $t39 := borrow_local($t0)
     # live vars: $t0, $t10, $t39
 56: $t40 := 0
     # live vars: $t0, $t10, $t39, $t40
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
     # live vars: $t0, $t10, $t38
 58: $t42 := borrow_local($t10)
     # live vars: $t0, $t10, $t38, $t42
 59: $t43 := 0
     # live vars: $t0, $t10, $t38, $t42, $t43
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
     # live vars: $t0, $t10, $t38, $t41
 61: $t37 := ==($t38, $t41)
     # live vars: $t0, $t10, $t37
 62: if ($t37) goto 63 else goto 65
     # live vars: $t0, $t10
 63: label L9
     # live vars: $t0, $t10
 64: goto 68
     # live vars: $t0, $t10
 65: label L10
     # live vars:
 66: $t44 := 0
     # live vars: $t44
 67: abort($t44)
     # live vars: $t0, $t10
 68: label L11
     # live vars: $t0, $t10
 69: $t48 := borrow_local($t0)
     # live vars: $t0, $t10, $t48
 70: $t49 := 1
     # live vars: $t0, $t10, $t48, $t49
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
     # live vars: $t0, $t10, $t47
 72: $t46 := read_ref($t47)
     # live vars: $t0, $t10, $t46
 73: $t52 := borrow_local($t10)
     # live vars: $t0, $t10, $t46, $t52
 74: $t53 := 1
     # live vars: $t0, $t10, $t46, $t52, $t53
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
     # live vars: $t0, $t10, $t46, $t51
 76: $t50 := read_ref($t51)
     # live vars: $t0, $t10, $t46, $t50
 77: $t45 := ==($t46, $t50)
     # live vars: $t0, $t10, $t45
 78: if ($t45) goto 79 else goto 81
     # live vars: $t0, $t10
 79: label L12
     # live vars: $t0, $t10
 80: goto 84
     # live vars: $t0, $t10
 81: label L13
     # live vars:
 82: $t54 := 0
     # live vars: $t54
 83: abort($t54)
     # live vars: $t0, $t10
 84: label L14
     # live vars: $t0, $t10
 85: $t57 := borrow_local($t0)
     # live vars: $t10, $t57
 86: $t58 := 1
     # live vars: $t10, $t57, $t58
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
     # live vars: $t10, $t56
 88: $t60 := borrow_local($t10)
     # live vars: $t56, $t60
 89: $t61 := 1
     # live vars: $t56, $t60, $t61
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
     # live vars: $t56, $t59
 91: $t55 := ==($t56, $t59)
     # live vars: $t55
 92: if ($t55) goto 93 else goto 95
     # live vars:
 93: label L15
     # live vars:
 94: goto 98
     # live vars:
 95: label L16
     # live vars:
 96: $t62 := 0
     # live vars: $t62
 97: abort($t62)
     # live vars:
 98: label L17
     # live vars:
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: vector<0xc0ffee::m::Test2>
     var $t12: 0xc0ffee::m::Test2
     var $t13: vector<u64>
     var $t14: u64
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test2
     var $t18: vector<u64>
     var $t19: u64
     var $t20: u64
     var $t21: u64
     var $t22: 0xc0ffee::m::Test2
     var $t23: vector<u64>
     var $t24: u64
     var $t25: u64
     var $t26: u64
     var $t27: bool
     var $t28: vector<0xc0ffee::m::Test2>
     var $t29: u64
     var $t30: bool
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: &vector<0xc0ffee::m::Test2>
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test2
     var $t36: &0xc0ffee::m::Test2
     var $t37: &vector<0xc0ffee::m::Test2>
     var $t38: u64
     var $t39: 0xc0ffee::m::Test2
     var $t40: &0xc0ffee::m::Test2
     var $t41: &vector<0xc0ffee::m::Test2>
     var $t42: u64
     var $t43: u64
     var $t44: bool
     var $t45: &0xc0ffee::m::Test2
     var $t46: &vector<0xc0ffee::m::Test2>
     var $t47: u64
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: u64
     var $t52: bool
     var $t53: 0xc0ffee::m::Test2
     var $t54: &0xc0ffee::m::Test2
     var $t55: &vector<0xc0ffee::m::Test2>
     var $t56: u64
     var $t57: 0xc0ffee::m::Test2
     var $t58: &0xc0ffee::m::Test2
     var $t59: &vector<0xc0ffee::m::Test2>
     var $t60: u64
     var $t61: u64
     var $t62: bool
     var $t63: &0xc0ffee::m::Test2
     var $t64: &vector<0xc0ffee::m::Test2>
     var $t65: u64
     var $t66: &0xc0ffee::m::Test2
     var $t67: &vector<0xc0ffee::m::Test2>
     var $t68: u64
     var $t69: u64
     # live vars:
  0: $t3 := 1
     # live vars: $t3
  1: $t4 := 2
     # live vars: $t3, $t4
  2: $t5 := 3
     # live vars: $t3, $t4, $t5
  3: $t2 := vector($t3, $t4, $t5)
     # live vars: $t2
  4: $t1 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t1
  5: $t8 := 1
     # live vars: $t1, $t8
  6: $t9 := 2
     # live vars: $t1, $t8, $t9
  7: $t10 := 3
     # live vars: $t1, $t8, $t9, $t10
  8: $t7 := vector($t8, $t9, $t10)
     # live vars: $t1, $t7
  9: $t6 := pack 0xc0ffee::m::Test2($t7)
     # live vars: $t1, $t6
 10: $t0 := vector($t1, $t6)
     # live vars: $t0
 11: $t14 := 1
     # live vars: $t0, $t14
 12: $t15 := 2
     # live vars: $t0, $t14, $t15
 13: $t16 := 3
     # live vars: $t0, $t14, $t15, $t16
 14: $t13 := vector($t14, $t15, $t16)
     # live vars: $t0, $t13
 15: $t12 := pack 0xc0ffee::m::Test2($t13)
     # live vars: $t0, $t12
 16: $t19 := 2
     # live vars: $t0, $t12, $t19
 17: $t20 := 2
     # live vars: $t0, $t12, $t19, $t20
 18: $t21 := 2
     # live vars: $t0, $t12, $t19, $t20, $t21
 19: $t18 := vector($t19, $t20, $t21)
     # live vars: $t0, $t12, $t18
 20: $t17 := pack 0xc0ffee::m::Test2($t18)
     # live vars: $t0, $t12, $t17
 21: $t24 := 1
     # live vars: $t0, $t12, $t17, $t24
 22: $t25 := 2
     # live vars: $t0, $t12, $t17, $t24, $t25
 23: $t26 := 3
     # live vars: $t0, $t12, $t17, $t24, $t25, $t26
 24: $t23 := vector($t24, $t25, $t26)
     # live vars: $t0, $t12, $t17, $t23
 25: $t22 := pack 0xc0ffee::m::Test2($t23)
     # live vars: $t0, $t12, $t17, $t22
 26: $t11 := vector($t12, $t17, $t22)
     # live vars: $t0, $t11
 27: $t28 := infer($t0)
     # live vars: $t0, $t11, $t28
 28: $t27 := !=($t28, $t11)
     # live vars: $t0, $t11, $t27
 29: if ($t27) goto 30 else goto 32
     # live vars: $t0, $t11
 30: label L0
     # live vars: $t0, $t11
 31: goto 35
     # live vars: $t0, $t11
 32: label L1
     # live vars:
 33: $t29 := 0
     # live vars: $t29
 34: abort($t29)
     # live vars: $t0, $t11
 35: label L2
     # live vars: $t0, $t11
 36: $t31 := borrow_local($t0)
     # live vars: $t0, $t11, $t31
 37: $t32 := borrow_local($t11)
     # live vars: $t0, $t11, $t31, $t32
 38: $t30 := !=($t31, $t32)
     # live vars: $t0, $t11, $t30
 39: if ($t30) goto 40 else goto 42
     # live vars: $t0, $t11
 40: label L3
     # live vars: $t0, $t11
 41: goto 45
     # live vars: $t0, $t11
 42: label L4
     # live vars:
 43: $t33 := 0
     # live vars: $t33
 44: abort($t33)
     # live vars: $t0, $t11
 45: label L5
     # live vars: $t0, $t11
 46: $t37 := borrow_local($t0)
     # live vars: $t0, $t11, $t37
 47: $t38 := 0
     # live vars: $t0, $t11, $t37, $t38
 48: $t36 := vector::borrow<0xc0ffee::m::Test2>($t37, $t38)
     # live vars: $t0, $t11, $t36
 49: $t35 := read_ref($t36)
     # live vars: $t0, $t11, $t35
 50: $t41 := borrow_local($t11)
     # live vars: $t0, $t11, $t35, $t41
 51: $t42 := 0
     # live vars: $t0, $t11, $t35, $t41, $t42
 52: $t40 := vector::borrow<0xc0ffee::m::Test2>($t41, $t42)
     # live vars: $t0, $t11, $t35, $t40
 53: $t39 := read_ref($t40)
     # live vars: $t0, $t11, $t35, $t39
 54: $t34 := ==($t35, $t39)
     # live vars: $t0, $t11, $t34
 55: if ($t34) goto 56 else goto 58
     # live vars: $t0, $t11
 56: label L6
     # live vars: $t0, $t11
 57: goto 61
     # live vars: $t0, $t11
 58: label L7
     # live vars:
 59: $t43 := 0
     # live vars: $t43
 60: abort($t43)
     # live vars: $t0, $t11
 61: label L8
     # live vars: $t0, $t11
 62: $t46 := borrow_local($t0)
     # live vars: $t0, $t11, $t46
 63: $t47 := 0
     # live vars: $t0, $t11, $t46, $t47
 64: $t45 := vector::borrow<0xc0ffee::m::Test2>($t46, $t47)
     # live vars: $t0, $t11, $t45
 65: $t49 := borrow_local($t11)
     # live vars: $t0, $t11, $t45, $t49
 66: $t50 := 0
     # live vars: $t0, $t11, $t45, $t49, $t50
 67: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
     # live vars: $t0, $t11, $t45, $t48
 68: $t44 := ==($t45, $t48)
     # live vars: $t0, $t11, $t44
 69: if ($t44) goto 70 else goto 72
     # live vars: $t0, $t11
 70: label L9
     # live vars: $t0, $t11
 71: goto 75
     # live vars: $t0, $t11
 72: label L10
     # live vars:
 73: $t51 := 0
     # live vars: $t51
 74: abort($t51)
     # live vars: $t0, $t11
 75: label L11
     # live vars: $t0, $t11
 76: $t55 := borrow_local($t0)
     # live vars: $t0, $t11, $t55
 77: $t56 := 1
     # live vars: $t0, $t11, $t55, $t56
 78: $t54 := vector::borrow<0xc0ffee::m::Test2>($t55, $t56)
     # live vars: $t0, $t11, $t54
 79: $t53 := read_ref($t54)
     # live vars: $t0, $t11, $t53
 80: $t59 := borrow_local($t11)
     # live vars: $t0, $t11, $t53, $t59
 81: $t60 := 1
     # live vars: $t0, $t11, $t53, $t59, $t60
 82: $t58 := vector::borrow<0xc0ffee::m::Test2>($t59, $t60)
     # live vars: $t0, $t11, $t53, $t58
 83: $t57 := read_ref($t58)
     # live vars: $t0, $t11, $t53, $t57
 84: $t52 := !=($t53, $t57)
     # live vars: $t0, $t11, $t52
 85: if ($t52) goto 86 else goto 88
     # live vars: $t0, $t11
 86: label L12
     # live vars: $t0, $t11
 87: goto 91
     # live vars: $t0, $t11
 88: label L13
     # live vars:
 89: $t61 := 0
     # live vars: $t61
 90: abort($t61)
     # live vars: $t0, $t11
 91: label L14
     # live vars: $t0, $t11
 92: $t64 := borrow_local($t0)
     # live vars: $t11, $t64
 93: $t65 := 1
     # live vars: $t11, $t64, $t65
 94: $t63 := vector::borrow<0xc0ffee::m::Test2>($t64, $t65)
     # live vars: $t11, $t63
 95: $t67 := borrow_local($t11)
     # live vars: $t63, $t67
 96: $t68 := 1
     # live vars: $t63, $t67, $t68
 97: $t66 := vector::borrow<0xc0ffee::m::Test2>($t67, $t68)
     # live vars: $t63, $t66
 98: $t62 := !=($t63, $t66)
     # live vars: $t62
 99: if ($t62) goto 100 else goto 102
     # live vars:
100: label L15
     # live vars:
101: goto 105
     # live vars:
102: label L16
     # live vars:
103: $t69 := 0
     # live vars: $t69
104: abort($t69)
     # live vars:
105: label L17
     # live vars:
106: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
     # live vars:
  0: $t4 := 1
     # live vars: $t4
  1: $t5 := 2
     # live vars: $t4, $t5
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t3
  3: $t7 := 1
     # live vars: $t3, $t7
  4: $t8 := 2
     # live vars: $t3, $t7, $t8
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
     # live vars: $t3, $t6
  6: $t2 := vector($t3, $t6)
     # live vars: $t2
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t1
  8: $t0 := vector($t1)
     # live vars: $t0
  9: $t13 := 1
     # live vars: $t0, $t13
 10: $t14 := 2
     # live vars: $t0, $t13, $t14
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
     # live vars: $t0, $t12
 12: $t16 := 1
     # live vars: $t0, $t12, $t16
 13: $t17 := 2
     # live vars: $t0, $t12, $t16, $t17
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
     # live vars: $t0, $t12, $t15
 15: $t11 := vector($t12, $t15)
     # live vars: $t0, $t11
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
     # live vars: $t0, $t10
 17: $t21 := 1
     # live vars: $t0, $t10, $t21
 18: $t22 := 2
     # live vars: $t0, $t10, $t21, $t22
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
     # live vars: $t0, $t10, $t20
 20: $t24 := 1
     # live vars: $t0, $t10, $t20, $t24
 21: $t25 := 2
     # live vars: $t0, $t10, $t20, $t24, $t25
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
     # live vars: $t0, $t10, $t20, $t23
 23: $t19 := vector($t20, $t23)
     # live vars: $t0, $t10, $t19
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
     # live vars: $t0, $t10, $t18
 25: $t9 := vector($t10, $t18)
     # live vars: $t0, $t9
 26: $t27 := infer($t0)
     # live vars: $t0, $t9, $t27
 27: $t26 := !=($t27, $t9)
     # live vars: $t0, $t9, $t26
 28: if ($t26) goto 29 else goto 31
     # live vars: $t0, $t9
 29: label L0
     # live vars: $t0, $t9
 30: goto 34
     # live vars: $t0, $t9
 31: label L1
     # live vars:
 32: $t28 := 0
     # live vars: $t28
 33: abort($t28)
     # live vars: $t0, $t9
 34: label L2
     # live vars: $t0, $t9
 35: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 36: $t31 := borrow_local($t9)
     # live vars: $t0, $t9, $t30, $t31
 37: $t29 := !=($t30, $t31)
     # live vars: $t0, $t9, $t29
 38: if ($t29) goto 39 else goto 41
     # live vars: $t0, $t9
 39: label L3
     # live vars: $t0, $t9
 40: goto 44
     # live vars: $t0, $t9
 41: label L4
     # live vars:
 42: $t32 := 0
     # live vars: $t32
 43: abort($t32)
     # live vars: $t0, $t9
 44: label L5
     # live vars: $t0, $t9
 45: $t36 := borrow_local($t0)
     # live vars: $t0, $t9, $t36
 46: $t37 := 0
     # live vars: $t0, $t9, $t36, $t37
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
     # live vars: $t0, $t9, $t35
 48: $t34 := read_ref($t35)
     # live vars: $t0, $t9, $t34
 49: $t40 := borrow_local($t9)
     # live vars: $t0, $t9, $t34, $t40
 50: $t41 := 0
     # live vars: $t0, $t9, $t34, $t40, $t41
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
     # live vars: $t0, $t9, $t34, $t39
 52: $t38 := read_ref($t39)
     # live vars: $t0, $t9, $t34, $t38
 53: $t33 := ==($t34, $t38)
     # live vars: $t0, $t9, $t33
 54: if ($t33) goto 55 else goto 57
     # live vars: $t0, $t9
 55: label L6
     # live vars: $t0, $t9
 56: goto 60
     # live vars: $t0, $t9
 57: label L7
     # live vars:
 58: $t42 := 0
     # live vars: $t42
 59: abort($t42)
     # live vars: $t0, $t9
 60: label L8
     # live vars: $t0, $t9
 61: $t45 := borrow_local($t0)
     # live vars: $t0, $t9, $t45
 62: $t46 := 0
     # live vars: $t0, $t9, $t45, $t46
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
     # live vars: $t0, $t9, $t44
 64: $t48 := borrow_local($t9)
     # live vars: $t0, $t9, $t44, $t48
 65: $t49 := 0
     # live vars: $t0, $t9, $t44, $t48, $t49
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
     # live vars: $t0, $t9, $t44, $t47
 67: $t43 := ==($t44, $t47)
     # live vars: $t0, $t9, $t43
 68: if ($t43) goto 69 else goto 71
     # live vars: $t0, $t9
 69: label L9
     # live vars: $t0, $t9
 70: goto 74
     # live vars: $t0, $t9
 71: label L10
     # live vars:
 72: $t50 := 0
     # live vars: $t50
 73: abort($t50)
     # live vars: $t0, $t9
 74: label L11
     # live vars: $t0, $t9
 75: $t54 := borrow_local($t0)
     # live vars: $t0, $t9, $t54
 76: $t55 := 0
     # live vars: $t0, $t9, $t54, $t55
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
     # live vars: $t0, $t9, $t53
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t0, $t9, $t56
 79: $t52 := read_ref($t56)
     # live vars: $t0, $t9, $t52
 80: $t59 := borrow_local($t9)
     # live vars: $t0, $t9, $t52, $t59
 81: $t60 := 0
     # live vars: $t0, $t9, $t52, $t59, $t60
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
     # live vars: $t0, $t9, $t52, $t58
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
     # live vars: $t0, $t9, $t52, $t61
 84: $t57 := read_ref($t61)
     # live vars: $t0, $t9, $t52, $t57
 85: $t51 := ==($t52, $t57)
     # live vars: $t0, $t9, $t51
 86: if ($t51) goto 87 else goto 89
     # live vars: $t0, $t9
 87: label L12
     # live vars: $t0, $t9
 88: goto 92
     # live vars: $t0, $t9
 89: label L13
     # live vars:
 90: $t62 := 0
     # live vars: $t62
 91: abort($t62)
     # live vars: $t0, $t9
 92: label L14
     # live vars: $t0, $t9
 93: $t66 := borrow_local($t0)
     # live vars: $t9, $t66
 94: $t67 := 0
     # live vars: $t9, $t66, $t67
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
     # live vars: $t9, $t65
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
     # live vars: $t9, $t64
 97: $t70 := borrow_local($t9)
     # live vars: $t64, $t70
 98: $t71 := 0
     # live vars: $t64, $t70, $t71
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
     # live vars: $t64, $t69
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
     # live vars: $t64, $t68
101: $t63 := ==($t64, $t68)
     # live vars: $t63
102: if ($t63) goto 103 else goto 105
     # live vars:
103: label L15
     # live vars:
104: goto 108
     # live vars:
105: label L16
     # live vars:
106: $t72 := 0
     # live vars: $t72
107: abort($t72)
     # live vars:
108: label L17
     # live vars:
109: return ()
}

============ after ReferenceSafetyProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
     # live vars:
     # refs: []
     #
  0: $t1 := 1
     # live vars: $t1
     # refs: []
     #
  1: $t2 := 2
     # live vars: $t1, $t2
     # refs: []
     #
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
     # live vars: $t0
     # refs: []
     #
  3: $t4 := 1
     # live vars: $t0, $t4
     # refs: []
     #
  4: $t5 := 2
     # live vars: $t0, $t4, $t5
     # refs: []
     #
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t3
     # refs: []
     #
  6: $t7 := infer($t0)
     # live vars: $t0, $t3, $t7
     # refs: []
     #
  7: $t6 := ==($t7, $t3)
     # live vars: $t0, $t3, $t6
     # refs: []
     #
  8: if ($t6) goto 9 else goto 11
     # live vars: $t0, $t3
     # refs: []
     #
  9: label L0
     # live vars: $t0, $t3
     # refs: []
     #
 10: goto 14
     # live vars: $t0, $t3
     # refs: []
     #
 11: label L1
     # live vars:
     # refs: []
     #
 12: $t8 := 0
     # live vars: $t8
     # refs: []
     #
 13: abort($t8)
     # live vars: $t0, $t3
     # refs: []
     #
 14: label L2
     # live vars: $t0, $t3
     # refs: []
     #
 15: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
     # refs: [$t10 => #10]
     # #10
     #   <no edges>
     # #root
     #   => #10 via [local `x`] at line 22
     #
 16: $t11 := borrow_local($t3)
     # live vars: $t0, $t3, $t10, $t11
     # refs: [$t10 => #10, $t11 => #11]
     # #10
     #   <no edges>
     # #11
     #   <no edges>
     # #root
     #   => #10 via [local `x`] at line 22
     #   => #11 via [local `y`] at line 22
     #
 17: $t9 := ==($t10, $t11)
     # live vars: $t0, $t3, $t9
     # refs: []
     #
 18: if ($t9) goto 19 else goto 21
     # live vars: $t0, $t3
     # refs: []
     #
 19: label L3
     # live vars: $t0, $t3
     # refs: []
     #
 20: goto 24
     # live vars: $t0, $t3
     # refs: []
     #
 21: label L4
     # live vars:
     # refs: []
     #
 22: $t12 := 0
     # live vars: $t12
     # refs: []
     #
 23: abort($t12)
     # live vars: $t0, $t3
     # refs: []
     #
 24: label L5
     # live vars: $t0, $t3
     # refs: []
     #
 25: $t15 := borrow_local($t0)
     # live vars: $t0, $t3, $t15
     # refs: [$t15 => #15]
     # #15
     #   <no edges>
     # #root
     #   => #15 via [local `x`] at line 24
     #
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
     # live vars: $t0, $t3, $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => #16 via [local `x`, field `a`] at line 24
     #
 27: $t14 := read_ref($t16)
     # live vars: $t0, $t3, $t14
     # refs: []
     #
 28: $t18 := borrow_local($t3)
     # live vars: $t0, $t3, $t14, $t18
     # refs: [$t18 => #18]
     # #18
     #   <no edges>
     # #root
     #   => #18 via [local `y`] at line 24
     #
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
     # live vars: $t0, $t3, $t14, $t19
     # refs: [$t19 => #19]
     # #19
     #   <no edges>
     # #root
     #   => #19 via [local `y`, field `a`] at line 24
     #
 30: $t17 := read_ref($t19)
     # live vars: $t0, $t3, $t14, $t17
     # refs: []
     #
 31: $t13 := ==($t14, $t17)
     # live vars: $t0, $t3, $t13
     # refs: []
     #
 32: if ($t13) goto 33 else goto 35
     # live vars: $t0, $t3
     # refs: []
     #
 33: label L6
     # live vars: $t0, $t3
     # refs: []
     #
 34: goto 38
     # live vars: $t0, $t3
     # refs: []
     #
 35: label L7
     # live vars:
     # refs: []
     #
 36: $t20 := 0
     # live vars: $t20
     # refs: []
     #
 37: abort($t20)
     # live vars: $t0, $t3
     # refs: []
     #
 38: label L8
     # live vars: $t0, $t3
     # refs: []
     #
 39: $t23 := borrow_local($t0)
     # live vars: $t0, $t3, $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => #23 via [local `x`] at line 25
     #
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
     # live vars: $t0, $t3, $t22
     # refs: [$t22 => #22]
     # #22
     #   <no edges>
     # #root
     #   => #22 via [local `x`, field `a`] at line 25
     #
 41: $t25 := borrow_local($t3)
     # live vars: $t0, $t3, $t22, $t25
     # refs: [$t22 => #22, $t25 => #25]
     # #22
     #   <no edges>
     # #25
     #   <no edges>
     # #root
     #   => #22 via [local `x`, field `a`] at line 25
     #   => #25 via [local `y`] at line 25
     #
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
     # live vars: $t0, $t3, $t22, $t24
     # refs: [$t22 => #22, $t24 => #24]
     # #22
     #   <no edges>
     # #24
     #   <no edges>
     # #root
     #   => #22 via [local `x`, field `a`] at line 25
     #   => #24 via [local `y`, field `a`] at line 25
     #
 43: $t21 := ==($t22, $t24)
     # live vars: $t0, $t3, $t21
     # refs: []
     #
 44: if ($t21) goto 45 else goto 47
     # live vars: $t0, $t3
     # refs: []
     #
 45: label L9
     # live vars: $t0, $t3
     # refs: []
     #
 46: goto 50
     # live vars: $t0, $t3
     # refs: []
     #
 47: label L10
     # live vars:
     # refs: []
     #
 48: $t26 := 0
     # live vars: $t26
     # refs: []
     #
 49: abort($t26)
     # live vars: $t0, $t3
     # refs: []
     #
 50: label L11
     # live vars: $t0, $t3
     # refs: []
     #
 51: $t29 := borrow_local($t0)
     # live vars: $t0, $t3, $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   => #29 via [local `x`] at line 27
     #
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
     # live vars: $t0, $t3, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`, field `b`] at line 27
     #
 53: $t28 := read_ref($t30)
     # live vars: $t0, $t3, $t28
     # refs: []
     #
 54: $t32 := borrow_local($t3)
     # live vars: $t0, $t3, $t28, $t32
     # refs: [$t32 => #32]
     # #32
     #   <no edges>
     # #root
     #   => #32 via [local `y`] at line 27
     #
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
     # live vars: $t0, $t3, $t28, $t33
     # refs: [$t33 => #33]
     # #33
     #   <no edges>
     # #root
     #   => #33 via [local `y`, field `b`] at line 27
     #
 56: $t31 := read_ref($t33)
     # live vars: $t0, $t3, $t28, $t31
     # refs: []
     #
 57: $t27 := ==($t28, $t31)
     # live vars: $t0, $t3, $t27
     # refs: []
     #
 58: if ($t27) goto 59 else goto 61
     # live vars: $t0, $t3
     # refs: []
     #
 59: label L12
     # live vars: $t0, $t3
     # refs: []
     #
 60: goto 64
     # live vars: $t0, $t3
     # refs: []
     #
 61: label L13
     # live vars:
     # refs: []
     #
 62: $t34 := 0
     # live vars: $t34
     # refs: []
     #
 63: abort($t34)
     # live vars: $t0, $t3
     # refs: []
     #
 64: label L14
     # live vars: $t0, $t3
     # refs: []
     #
 65: $t37 := borrow_local($t0)
     # live vars: $t3, $t37
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`] at line 28
     #
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
     # live vars: $t3, $t36
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   => #36 via [local `x`, field `b`] at line 28
     #
 67: $t39 := borrow_local($t3)
     # live vars: $t36, $t39
     # refs: [$t36 => #36, $t39 => #39]
     # #36
     #   <no edges>
     # #39
     #   <no edges>
     # #root
     #   => #36 via [local `x`, field `b`] at line 28
     #   => #39 via [local `y`] at line 28
     #
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
     # live vars: $t36, $t38
     # refs: [$t36 => #36, $t38 => #38]
     # #36
     #   <no edges>
     # #38
     #   <no edges>
     # #root
     #   => #36 via [local `x`, field `b`] at line 28
     #   => #38 via [local `y`, field `b`] at line 28
     #
 69: $t35 := ==($t36, $t38)
     # live vars: $t35
     # refs: []
     #
 70: if ($t35) goto 71 else goto 73
     # live vars:
     # refs: []
     #
 71: label L15
     # live vars:
     # refs: []
     #
 72: goto 76
     # live vars:
     # refs: []
     #
 73: label L16
     # live vars:
     # refs: []
     #
 74: $t40 := 0
     # live vars: $t40
     # refs: []
     #
 75: abort($t40)
     # live vars:
     # refs: []
     #
 76: label L17
     # live vars:
     # refs: []
     #
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test2
     var $t6: vector<u64>
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: bool
     var $t11: 0xc0ffee::m::Test2
     var $t12: u64
     var $t13: bool
     var $t14: &0xc0ffee::m::Test2
     var $t15: &0xc0ffee::m::Test2
     var $t16: u64
     var $t17: bool
     var $t18: vector<u64>
     var $t19: &0xc0ffee::m::Test2
     var $t20: &vector<u64>
     var $t21: vector<u64>
     var $t22: &0xc0ffee::m::Test2
     var $t23: &vector<u64>
     var $t24: u64
     var $t25: bool
     var $t26: &vector<u64>
     var $t27: &0xc0ffee::m::Test2
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: bool
     var $t32: u64
     var $t33: &u64
     var $t34: &vector<u64>
     var $t35: &0xc0ffee::m::Test2
     var $t36: u64
     var $t37: u64
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &u64
     var $t45: &vector<u64>
     var $t46: &0xc0ffee::m::Test2
     var $t47: u64
     var $t48: &u64
     var $t49: &vector<u64>
     var $t50: &0xc0ffee::m::Test2
     var $t51: u64
     var $t52: u64
     # live vars:
     # refs: []
     #
  0: $t2 := 1
     # live vars: $t2
     # refs: []
     #
  1: $t3 := 2
     # live vars: $t2, $t3
     # refs: []
     #
  2: $t4 := 3
     # live vars: $t2, $t3, $t4
     # refs: []
     #
  3: $t1 := vector($t2, $t3, $t4)
     # live vars: $t1
     # refs: []
     #
  4: $t0 := pack 0xc0ffee::m::Test2($t1)
     # live vars: $t0
     # refs: []
     #
  5: $t7 := 1
     # live vars: $t0, $t7
     # refs: []
     #
  6: $t8 := 2
     # live vars: $t0, $t7, $t8
     # refs: []
     #
  7: $t9 := 3
     # live vars: $t0, $t7, $t8, $t9
     # refs: []
     #
  8: $t6 := vector($t7, $t8, $t9)
     # live vars: $t0, $t6
     # refs: []
     #
  9: $t5 := pack 0xc0ffee::m::Test2($t6)
     # live vars: $t0, $t5
     # refs: []
     #
 10: $t11 := infer($t0)
     # live vars: $t0, $t5, $t11
     # refs: []
     #
 11: $t10 := ==($t11, $t5)
     # live vars: $t0, $t5, $t10
     # refs: []
     #
 12: if ($t10) goto 13 else goto 15
     # live vars: $t0, $t5
     # refs: []
     #
 13: label L0
     # live vars: $t0, $t5
     # refs: []
     #
 14: goto 18
     # live vars: $t0, $t5
     # refs: []
     #
 15: label L1
     # live vars:
     # refs: []
     #
 16: $t12 := 0
     # live vars: $t12
     # refs: []
     #
 17: abort($t12)
     # live vars: $t0, $t5
     # refs: []
     #
 18: label L2
     # live vars: $t0, $t5
     # refs: []
     #
 19: $t14 := borrow_local($t0)
     # live vars: $t0, $t5, $t14
     # refs: [$t14 => #14]
     # #14
     #   <no edges>
     # #root
     #   => #14 via [local `x`] at line 36
     #
 20: $t15 := borrow_local($t5)
     # live vars: $t0, $t5, $t14, $t15
     # refs: [$t14 => #14, $t15 => #15]
     # #14
     #   <no edges>
     # #15
     #   <no edges>
     # #root
     #   => #14 via [local `x`] at line 36
     #   => #15 via [local `y`] at line 36
     #
 21: $t13 := ==($t14, $t15)
     # live vars: $t0, $t5, $t13
     # refs: []
     #
 22: if ($t13) goto 23 else goto 25
     # live vars: $t0, $t5
     # refs: []
     #
 23: label L3
     # live vars: $t0, $t5
     # refs: []
     #
 24: goto 28
     # live vars: $t0, $t5
     # refs: []
     #
 25: label L4
     # live vars:
     # refs: []
     #
 26: $t16 := 0
     # live vars: $t16
     # refs: []
     #
 27: abort($t16)
     # live vars: $t0, $t5
     # refs: []
     #
 28: label L5
     # live vars: $t0, $t5
     # refs: []
     #
 29: $t19 := borrow_local($t0)
     # live vars: $t0, $t5, $t19
     # refs: [$t19 => #19]
     # #19
     #   <no edges>
     # #root
     #   => #19 via [local `x`] at line 38
     #
 30: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t19)
     # live vars: $t0, $t5, $t20
     # refs: [$t20 => #20]
     # #20
     #   <no edges>
     # #root
     #   => #20 via [local `x`, field `a`] at line 38
     #
 31: $t18 := read_ref($t20)
     # live vars: $t0, $t5, $t18
     # refs: []
     #
 32: $t22 := borrow_local($t5)
     # live vars: $t0, $t5, $t18, $t22
     # refs: [$t22 => #22]
     # #22
     #   <no edges>
     # #root
     #   => #22 via [local `y`] at line 38
     #
 33: $t23 := borrow_field<0xc0ffee::m::Test2>.a($t22)
     # live vars: $t0, $t5, $t18, $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => #23 via [local `y`, field `a`] at line 38
     #
 34: $t21 := read_ref($t23)
     # live vars: $t0, $t5, $t18, $t21
     # refs: []
     #
 35: $t17 := ==($t18, $t21)
     # live vars: $t0, $t5, $t17
     # refs: []
     #
 36: if ($t17) goto 37 else goto 39
     # live vars: $t0, $t5
     # refs: []
     #
 37: label L6
     # live vars: $t0, $t5
     # refs: []
     #
 38: goto 42
     # live vars: $t0, $t5
     # refs: []
     #
 39: label L7
     # live vars:
     # refs: []
     #
 40: $t24 := 0
     # live vars: $t24
     # refs: []
     #
 41: abort($t24)
     # live vars: $t0, $t5
     # refs: []
     #
 42: label L8
     # live vars: $t0, $t5
     # refs: []
     #
 43: $t27 := borrow_local($t0)
     # live vars: $t0, $t5, $t27
     # refs: [$t27 => #27]
     # #27
     #   <no edges>
     # #root
     #   => #27 via [local `x`] at line 39
     #
 44: $t26 := borrow_field<0xc0ffee::m::Test2>.a($t27)
     # live vars: $t0, $t5, $t26
     # refs: [$t26 => #26]
     # #26
     #   <no edges>
     # #root
     #   => #26 via [local `x`, field `a`] at line 39
     #
 45: $t29 := borrow_local($t5)
     # live vars: $t0, $t5, $t26, $t29
     # refs: [$t26 => #26, $t29 => #29]
     # #26
     #   <no edges>
     # #29
     #   <no edges>
     # #root
     #   => #26 via [local `x`, field `a`] at line 39
     #   => #29 via [local `y`] at line 39
     #
 46: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
     # live vars: $t0, $t5, $t26, $t28
     # refs: [$t26 => #26, $t28 => #28]
     # #26
     #   <no edges>
     # #28
     #   <no edges>
     # #root
     #   => #26 via [local `x`, field `a`] at line 39
     #   => #28 via [local `y`, field `a`] at line 39
     #
 47: $t25 := ==($t26, $t28)
     # live vars: $t0, $t5, $t25
     # refs: []
     #
 48: if ($t25) goto 49 else goto 51
     # live vars: $t0, $t5
     # refs: []
     #
 49: label L9
     # live vars: $t0, $t5
     # refs: []
     #
 50: goto 54
     # live vars: $t0, $t5
     # refs: []
     #
 51: label L10
     # live vars:
     # refs: []
     #
 52: $t30 := 0
     # live vars: $t30
     # refs: []
     #
 53: abort($t30)
     # live vars: $t0, $t5
     # refs: []
     #
 54: label L11
     # live vars: $t0, $t5
     # refs: []
     #
 55: $t35 := borrow_local($t0)
     # live vars: $t0, $t5, $t35
     # refs: [$t35 => #35]
     # #35
     #   <no edges>
     # #root
     #   => #35 via [local `x`] at line 41
     #
 56: $t34 := borrow_field<0xc0ffee::m::Test2>.a($t35)
     # live vars: $t0, $t5, $t34
     # refs: [$t34 => #34]
     # #34
     #   <no edges>
     # #root
     #   => #34 via [local `x`, field `a`] at line 41
     #
 57: $t36 := 0
     # live vars: $t0, $t5, $t34, $t36
     # refs: [$t34 => #34]
     # #34
     #   <no edges>
     # #root
     #   => #34 via [local `x`, field `a`] at line 41
     #
 58: $t33 := vector::borrow<u64>($t34, $t36)
     # live vars: $t0, $t5, $t33
     # refs: [$t33 => #33]
     # #33
     #   <no edges>
     # #root
     #   -> #33 via [local `x`, field `a`] at line 41
     #
 59: $t32 := read_ref($t33)
     # live vars: $t0, $t5, $t32
     # refs: []
     #
 60: $t40 := borrow_local($t5)
     # live vars: $t0, $t5, $t32, $t40
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `y`] at line 41
     #
 61: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
     # live vars: $t0, $t5, $t32, $t39
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `y`, field `a`] at line 41
     #
 62: $t41 := 0
     # live vars: $t0, $t5, $t32, $t39, $t41
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `y`, field `a`] at line 41
     #
 63: $t38 := vector::borrow<u64>($t39, $t41)
     # live vars: $t0, $t5, $t32, $t38
     # refs: [$t38 => #38]
     # #38
     #   <no edges>
     # #root
     #   -> #38 via [local `y`, field `a`] at line 41
     #
 64: $t37 := read_ref($t38)
     # live vars: $t0, $t5, $t32, $t37
     # refs: []
     #
 65: $t31 := ==($t32, $t37)
     # live vars: $t0, $t5, $t31
     # refs: []
     #
 66: if ($t31) goto 67 else goto 69
     # live vars: $t0, $t5
     # refs: []
     #
 67: label L12
     # live vars: $t0, $t5
     # refs: []
     #
 68: goto 72
     # live vars: $t0, $t5
     # refs: []
     #
 69: label L13
     # live vars:
     # refs: []
     #
 70: $t42 := 0
     # live vars: $t42
     # refs: []
     #
 71: abort($t42)
     # live vars: $t0, $t5
     # refs: []
     #
 72: label L14
     # live vars: $t0, $t5
     # refs: []
     #
 73: $t46 := borrow_local($t0)
     # live vars: $t5, $t46
     # refs: [$t46 => #46]
     # #46
     #   <no edges>
     # #root
     #   => #46 via [local `x`] at line 42
     #
 74: $t45 := borrow_field<0xc0ffee::m::Test2>.a($t46)
     # live vars: $t5, $t45
     # refs: [$t45 => #45]
     # #45
     #   <no edges>
     # #root
     #   => #45 via [local `x`, field `a`] at line 42
     #
 75: $t47 := 0
     # live vars: $t5, $t45, $t47
     # refs: [$t45 => #45]
     # #45
     #   <no edges>
     # #root
     #   => #45 via [local `x`, field `a`] at line 42
     #
 76: $t44 := vector::borrow<u64>($t45, $t47)
     # live vars: $t5, $t44
     # refs: [$t44 => #44]
     # #44
     #   <no edges>
     # #root
     #   -> #44 via [local `x`, field `a`] at line 42
     #
 77: $t50 := borrow_local($t5)
     # live vars: $t44, $t50
     # refs: [$t44 => #44, $t50 => #50]
     # #44
     #   <no edges>
     # #50
     #   <no edges>
     # #root
     #   -> #44 via [local `x`, field `a`] at line 42
     #   => #50 via [local `y`] at line 42
     #
 78: $t49 := borrow_field<0xc0ffee::m::Test2>.a($t50)
     # live vars: $t44, $t49
     # refs: [$t44 => #44, $t49 => #49]
     # #44
     #   <no edges>
     # #49
     #   <no edges>
     # #root
     #   -> #44 via [local `x`, field `a`] at line 42
     #   => #49 via [local `y`, field `a`] at line 42
     #
 79: $t51 := 0
     # live vars: $t44, $t49, $t51
     # refs: [$t44 => #44, $t49 => #49]
     # #44
     #   <no edges>
     # #49
     #   <no edges>
     # #root
     #   -> #44 via [local `x`, field `a`] at line 42
     #   => #49 via [local `y`, field `a`] at line 42
     #
 80: $t48 := vector::borrow<u64>($t49, $t51)
     # live vars: $t44, $t48
     # refs: [$t44 => #44, $t48 => #48]
     # #44
     #   <no edges>
     # #48
     #   <no edges>
     # #root
     #   -> #44 via [local `x`, field `a`] at line 42
     #   -> #48 via [local `y`, field `a`] at line 42
     #
 81: $t43 := ==($t44, $t48)
     # live vars: $t43
     # refs: []
     #
 82: if ($t43) goto 83 else goto 85
     # live vars:
     # refs: []
     #
 83: label L15
     # live vars:
     # refs: []
     #
 84: goto 88
     # live vars:
     # refs: []
     #
 85: label L16
     # live vars:
     # refs: []
     #
 86: $t52 := 0
     # live vars: $t52
     # refs: []
     #
 87: abort($t52)
     # live vars:
     # refs: []
     #
 88: label L17
     # live vars:
     # refs: []
     #
 89: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
     # live vars:
     # refs: []
     #
  0: $t3 := 1
     # live vars: $t3
     # refs: []
     #
  1: $t4 := 2
     # live vars: $t3, $t4
     # refs: []
     #
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t2
     # refs: []
     #
  3: $t1 := vector($t2)
     # live vars: $t1
     # refs: []
     #
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
     # live vars: $t0
     # refs: []
     #
  5: $t8 := 1
     # live vars: $t0, $t8
     # refs: []
     #
  6: $t9 := 2
     # live vars: $t0, $t8, $t9
     # refs: []
     #
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t0, $t7
     # refs: []
     #
  8: $t11 := 1
     # live vars: $t0, $t7, $t11
     # refs: []
     #
  9: $t12 := 2
     # live vars: $t0, $t7, $t11, $t12
     # refs: []
     #
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
     # live vars: $t0, $t7, $t10
     # refs: []
     #
 11: $t6 := vector($t7, $t10)
     # live vars: $t0, $t6
     # refs: []
     #
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
     # live vars: $t0, $t5
     # refs: []
     #
 13: $t14 := infer($t0)
     # live vars: $t0, $t5, $t14
     # refs: []
     #
 14: $t13 := !=($t14, $t5)
     # live vars: $t0, $t5, $t13
     # refs: []
     #
 15: if ($t13) goto 16 else goto 18
     # live vars: $t0, $t5
     # refs: []
     #
 16: label L0
     # live vars: $t0, $t5
     # refs: []
     #
 17: goto 21
     # live vars: $t0, $t5
     # refs: []
     #
 18: label L1
     # live vars:
     # refs: []
     #
 19: $t15 := 0
     # live vars: $t15
     # refs: []
     #
 20: abort($t15)
     # live vars: $t0, $t5
     # refs: []
     #
 21: label L2
     # live vars: $t0, $t5
     # refs: []
     #
 22: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
     # refs: [$t17 => #17]
     # #17
     #   <no edges>
     # #root
     #   => #17 via [local `x`] at line 50
     #
 23: $t18 := borrow_local($t5)
     # live vars: $t0, $t5, $t17, $t18
     # refs: [$t17 => #17, $t18 => #18]
     # #17
     #   <no edges>
     # #18
     #   <no edges>
     # #root
     #   => #17 via [local `x`] at line 50
     #   => #18 via [local `y`] at line 50
     #
 24: $t16 := !=($t17, $t18)
     # live vars: $t0, $t5, $t16
     # refs: []
     #
 25: if ($t16) goto 26 else goto 28
     # live vars: $t0, $t5
     # refs: []
     #
 26: label L3
     # live vars: $t0, $t5
     # refs: []
     #
 27: goto 31
     # live vars: $t0, $t5
     # refs: []
     #
 28: label L4
     # live vars:
     # refs: []
     #
 29: $t19 := 0
     # live vars: $t19
     # refs: []
     #
 30: abort($t19)
     # live vars: $t0, $t5
     # refs: []
     #
 31: label L5
     # live vars: $t0, $t5
     # refs: []
     #
 32: $t22 := borrow_local($t0)
     # live vars: $t0, $t5, $t22
     # refs: [$t22 => #22]
     # #22
     #   <no edges>
     # #root
     #   => #22 via [local `x`] at line 52
     #
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
     # live vars: $t0, $t5, $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => #23 via [local `x`, field `a`] at line 52
     #
 34: $t21 := read_ref($t23)
     # live vars: $t0, $t5, $t21
     # refs: []
     #
 35: $t25 := borrow_local($t5)
     # live vars: $t0, $t5, $t21, $t25
     # refs: [$t25 => #25]
     # #25
     #   <no edges>
     # #root
     #   => #25 via [local `y`] at line 52
     #
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
     # live vars: $t0, $t5, $t21, $t26
     # refs: [$t26 => #26]
     # #26
     #   <no edges>
     # #root
     #   => #26 via [local `y`, field `a`] at line 52
     #
 37: $t24 := read_ref($t26)
     # live vars: $t0, $t5, $t21, $t24
     # refs: []
     #
 38: $t20 := !=($t21, $t24)
     # live vars: $t0, $t5, $t20
     # refs: []
     #
 39: if ($t20) goto 40 else goto 42
     # live vars: $t0, $t5
     # refs: []
     #
 40: label L6
     # live vars: $t0, $t5
     # refs: []
     #
 41: goto 45
     # live vars: $t0, $t5
     # refs: []
     #
 42: label L7
     # live vars:
     # refs: []
     #
 43: $t27 := 0
     # live vars: $t27
     # refs: []
     #
 44: abort($t27)
     # live vars: $t0, $t5
     # refs: []
     #
 45: label L8
     # live vars: $t0, $t5
     # refs: []
     #
 46: $t30 := borrow_local($t0)
     # live vars: $t0, $t5, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 53
     #
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
     # live vars: $t0, $t5, $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   => #29 via [local `x`, field `a`] at line 53
     #
 48: $t32 := borrow_local($t5)
     # live vars: $t0, $t5, $t29, $t32
     # refs: [$t29 => #29, $t32 => #32]
     # #29
     #   <no edges>
     # #32
     #   <no edges>
     # #root
     #   => #29 via [local `x`, field `a`] at line 53
     #   => #32 via [local `y`] at line 53
     #
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
     # live vars: $t0, $t5, $t29, $t31
     # refs: [$t29 => #29, $t31 => #31]
     # #29
     #   <no edges>
     # #31
     #   <no edges>
     # #root
     #   => #29 via [local `x`, field `a`] at line 53
     #   => #31 via [local `y`, field `a`] at line 53
     #
 50: $t28 := !=($t29, $t31)
     # live vars: $t0, $t5, $t28
     # refs: []
     #
 51: if ($t28) goto 52 else goto 54
     # live vars: $t0, $t5
     # refs: []
     #
 52: label L9
     # live vars: $t0, $t5
     # refs: []
     #
 53: goto 57
     # live vars: $t0, $t5
     # refs: []
     #
 54: label L10
     # live vars:
     # refs: []
     #
 55: $t33 := 0
     # live vars: $t33
     # refs: []
     #
 56: abort($t33)
     # live vars: $t0, $t5
     # refs: []
     #
 57: label L11
     # live vars: $t0, $t5
     # refs: []
     #
 58: $t38 := borrow_local($t0)
     # live vars: $t0, $t5, $t38
     # refs: [$t38 => #38]
     # #38
     #   <no edges>
     # #root
     #   => #38 via [local `x`] at line 55
     #
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
     # live vars: $t0, $t5, $t37
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`, field `a`] at line 55
     #
 60: $t39 := 0
     # live vars: $t0, $t5, $t37, $t39
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`, field `a`] at line 55
     #
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
     # live vars: $t0, $t5, $t36
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   -> #36 via [local `x`, field `a`] at line 55
     #
 62: $t35 := read_ref($t36)
     # live vars: $t0, $t5, $t35
     # refs: []
     #
 63: $t43 := borrow_local($t5)
     # live vars: $t0, $t5, $t35, $t43
     # refs: [$t43 => #43]
     # #43
     #   <no edges>
     # #root
     #   => #43 via [local `y`] at line 55
     #
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
     # live vars: $t0, $t5, $t35, $t42
     # refs: [$t42 => #42]
     # #42
     #   <no edges>
     # #root
     #   => #42 via [local `y`, field `a`] at line 55
     #
 65: $t44 := 0
     # live vars: $t0, $t5, $t35, $t42, $t44
     # refs: [$t42 => #42]
     # #42
     #   <no edges>
     # #root
     #   => #42 via [local `y`, field `a`] at line 55
     #
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
     # live vars: $t0, $t5, $t35, $t41
     # refs: [$t41 => #41]
     # #41
     #   <no edges>
     # #root
     #   -> #41 via [local `y`, field `a`] at line 55
     #
 67: $t40 := read_ref($t41)
     # live vars: $t0, $t5, $t35, $t40
     # refs: []
     #
 68: $t34 := ==($t35, $t40)
     # live vars: $t0, $t5, $t34
     # refs: []
     #
 69: if ($t34) goto 70 else goto 72
     # live vars: $t0, $t5
     # refs: []
     #
 70: label L12
     # live vars: $t0, $t5
     # refs: []
     #
 71: goto 75
     # live vars: $t0, $t5
     # refs: []
     #
 72: label L13
     # live vars:
     # refs: []
     #
 73: $t45 := 0
     # live vars: $t45
     # refs: []
     #
 74: abort($t45)
     # live vars: $t0, $t5
     # refs: []
     #
 75: label L14
     # live vars: $t0, $t5
     # refs: []
     #
 76: $t49 := borrow_local($t0)
     # live vars: $t5, $t49
     # refs: [$t49 => #49]
     # #49
     #   <no edges>
     # #root
     #   => #49 via [local `x`] at line 56
     #
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
     # live vars: $t5, $t48
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`, field `a`] at line 56
     #
 78: $t50 := 0
     # live vars: $t5, $t48, $t50
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`, field `a`] at line 56
     #
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
     # live vars: $t5, $t47
     # refs: [$t47 => #47]
     # #47
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #
 80: $t53 := borrow_local($t5)
     # live vars: $t47, $t53
     # refs: [$t47 => #47, $t53 => #53]
     # #47
     #   <no edges>
     # #53
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   => #53 via [local `y`] at line 56
     #
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t47, $t52
     # refs: [$t47 => #47, $t52 => #52]
     # #47
     #   <no edges>
     # #52
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   => #52 via [local `y`, field `a`] at line 56
     #
 82: $t54 := 0
     # live vars: $t47, $t52, $t54
     # refs: [$t47 => #47, $t52 => #52]
     # #47
     #   <no edges>
     # #52
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   => #52 via [local `y`, field `a`] at line 56
     #
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
     # live vars: $t47, $t51
     # refs: [$t47 => #47, $t51 => #51]
     # #47
     #   <no edges>
     # #51
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   -> #51 via [local `y`, field `a`] at line 56
     #
 84: $t46 := ==($t47, $t51)
     # live vars: $t46
     # refs: []
     #
 85: if ($t46) goto 86 else goto 88
     # live vars:
     # refs: []
     #
 86: label L15
     # live vars:
     # refs: []
     #
 87: goto 91
     # live vars:
     # refs: []
     #
 88: label L16
     # live vars:
     # refs: []
     #
 89: $t55 := 0
     # live vars: $t55
     # refs: []
     #
 90: abort($t55)
     # live vars:
     # refs: []
     #
 91: label L17
     # live vars:
     # refs: []
     #
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
     # live vars:
     # refs: []
     #
  0: $t2 := 1
     # live vars: $t2
     # refs: []
     #
  1: $t3 := 2
     # live vars: $t2, $t3
     # refs: []
     #
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1
     # refs: []
     #
  3: $t5 := 1
     # live vars: $t1, $t5
     # refs: []
     #
  4: $t6 := 2
     # live vars: $t1, $t5, $t6
     # refs: []
     #
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
     # live vars: $t1, $t4
     # refs: []
     #
  6: $t8 := 1
     # live vars: $t1, $t4, $t8
     # refs: []
     #
  7: $t9 := 2
     # live vars: $t1, $t4, $t8, $t9
     # refs: []
     #
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t1, $t4, $t7
     # refs: []
     #
  9: $t0 := vector($t1, $t4, $t7)
     # live vars: $t0
     # refs: []
     #
 10: $t12 := 1
     # live vars: $t0, $t12
     # refs: []
     #
 11: $t13 := 2
     # live vars: $t0, $t12, $t13
     # refs: []
     #
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
     # live vars: $t0, $t11
     # refs: []
     #
 13: $t15 := 1
     # live vars: $t0, $t11, $t15
     # refs: []
     #
 14: $t16 := 2
     # live vars: $t0, $t11, $t15, $t16
     # refs: []
     #
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
     # live vars: $t0, $t11, $t14
     # refs: []
     #
 16: $t18 := 1
     # live vars: $t0, $t11, $t14, $t18
     # refs: []
     #
 17: $t19 := 2
     # live vars: $t0, $t11, $t14, $t18, $t19
     # refs: []
     #
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
     # live vars: $t0, $t11, $t14, $t17
     # refs: []
     #
 19: $t10 := vector($t11, $t14, $t17)
     # live vars: $t0, $t10
     # refs: []
     #
 20: $t21 := infer($t0)
     # live vars: $t0, $t10, $t21
     # refs: []
     #
 21: $t20 := ==($t21, $t10)
     # live vars: $t0, $t10, $t20
     # refs: []
     #
 22: if ($t20) goto 23 else goto 25
     # live vars: $t0, $t10
     # refs: []
     #
 23: label L0
     # live vars: $t0, $t10
     # refs: []
     #
 24: goto 28
     # live vars: $t0, $t10
     # refs: []
     #
 25: label L1
     # live vars:
     # refs: []
     #
 26: $t22 := 0
     # live vars: $t22
     # refs: []
     #
 27: abort($t22)
     # live vars: $t0, $t10
     # refs: []
     #
 28: label L2
     # live vars: $t0, $t10
     # refs: []
     #
 29: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
     # refs: [$t24 => #24]
     # #24
     #   <no edges>
     # #root
     #   => #24 via [local `x`] at line 65
     #
 30: $t25 := borrow_local($t10)
     # live vars: $t0, $t10, $t24, $t25
     # refs: [$t24 => #24, $t25 => #25]
     # #24
     #   <no edges>
     # #25
     #   <no edges>
     # #root
     #   => #24 via [local `x`] at line 65
     #   => #25 via [local `y`] at line 65
     #
 31: $t23 := ==($t24, $t25)
     # live vars: $t0, $t10, $t23
     # refs: []
     #
 32: if ($t23) goto 33 else goto 35
     # live vars: $t0, $t10
     # refs: []
     #
 33: label L3
     # live vars: $t0, $t10
     # refs: []
     #
 34: goto 38
     # live vars: $t0, $t10
     # refs: []
     #
 35: label L4
     # live vars:
     # refs: []
     #
 36: $t26 := 0
     # live vars: $t26
     # refs: []
     #
 37: abort($t26)
     # live vars: $t0, $t10
     # refs: []
     #
 38: label L5
     # live vars: $t0, $t10
     # refs: []
     #
 39: $t30 := borrow_local($t0)
     # live vars: $t0, $t10, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 67
     #
 40: $t31 := 0
     # live vars: $t0, $t10, $t30, $t31
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 67
     #
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
     # live vars: $t0, $t10, $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   -> #29 via [local `x`] at line 67
     #
 42: $t28 := read_ref($t29)
     # live vars: $t0, $t10, $t28
     # refs: []
     #
 43: $t34 := borrow_local($t10)
     # live vars: $t0, $t10, $t28, $t34
     # refs: [$t34 => #34]
     # #34
     #   <no edges>
     # #root
     #   => #34 via [local `y`] at line 67
     #
 44: $t35 := 0
     # live vars: $t0, $t10, $t28, $t34, $t35
     # refs: [$t34 => #34]
     # #34
     #   <no edges>
     # #root
     #   => #34 via [local `y`] at line 67
     #
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
     # live vars: $t0, $t10, $t28, $t33
     # refs: [$t33 => #33]
     # #33
     #   <no edges>
     # #root
     #   -> #33 via [local `y`] at line 67
     #
 46: $t32 := read_ref($t33)
     # live vars: $t0, $t10, $t28, $t32
     # refs: []
     #
 47: $t27 := ==($t28, $t32)
     # live vars: $t0, $t10, $t27
     # refs: []
     #
 48: if ($t27) goto 49 else goto 51
     # live vars: $t0, $t10
     # refs: []
     #
 49: label L6
     # live vars: $t0, $t10
     # refs: []
     #
 50: goto 54
     # live vars: $t0, $t10
     # refs: []
     #
 51: label L7
     # live vars:
     # refs: []
     #
 52: $t36 := 0
     # live vars: $t36
     # refs: []
     #
 53: abort($t36)
     # live vars: $t0, $t10
     # refs: []
     #
 54: label L8
     # live vars: $t0, $t10
     # refs: []
     #
 55: $t39 := borrow_local($t0)
     # live vars: $t0, $t10, $t39
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `x`] at line 68
     #
 56: $t40 := 0
     # live vars: $t0, $t10, $t39, $t40
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `x`] at line 68
     #
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
     # live vars: $t0, $t10, $t38
     # refs: [$t38 => #38]
     # #38
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #
 58: $t42 := borrow_local($t10)
     # live vars: $t0, $t10, $t38, $t42
     # refs: [$t38 => #38, $t42 => #42]
     # #38
     #   <no edges>
     # #42
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #   => #42 via [local `y`] at line 68
     #
 59: $t43 := 0
     # live vars: $t0, $t10, $t38, $t42, $t43
     # refs: [$t38 => #38, $t42 => #42]
     # #38
     #   <no edges>
     # #42
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #   => #42 via [local `y`] at line 68
     #
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
     # live vars: $t0, $t10, $t38, $t41
     # refs: [$t38 => #38, $t41 => #41]
     # #38
     #   <no edges>
     # #41
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #   -> #41 via [local `y`] at line 68
     #
 61: $t37 := ==($t38, $t41)
     # live vars: $t0, $t10, $t37
     # refs: []
     #
 62: if ($t37) goto 63 else goto 65
     # live vars: $t0, $t10
     # refs: []
     #
 63: label L9
     # live vars: $t0, $t10
     # refs: []
     #
 64: goto 68
     # live vars: $t0, $t10
     # refs: []
     #
 65: label L10
     # live vars:
     # refs: []
     #
 66: $t44 := 0
     # live vars: $t44
     # refs: []
     #
 67: abort($t44)
     # live vars: $t0, $t10
     # refs: []
     #
 68: label L11
     # live vars: $t0, $t10
     # refs: []
     #
 69: $t48 := borrow_local($t0)
     # live vars: $t0, $t10, $t48
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`] at line 70
     #
 70: $t49 := 1
     # live vars: $t0, $t10, $t48, $t49
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`] at line 70
     #
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
     # live vars: $t0, $t10, $t47
     # refs: [$t47 => #47]
     # #47
     #   <no edges>
     # #root
     #   -> #47 via [local `x`] at line 70
     #
 72: $t46 := read_ref($t47)
     # live vars: $t0, $t10, $t46
     # refs: []
     #
 73: $t52 := borrow_local($t10)
     # live vars: $t0, $t10, $t46, $t52
     # refs: [$t52 => #52]
     # #52
     #   <no edges>
     # #root
     #   => #52 via [local `y`] at line 70
     #
 74: $t53 := 1
     # live vars: $t0, $t10, $t46, $t52, $t53
     # refs: [$t52 => #52]
     # #52
     #   <no edges>
     # #root
     #   => #52 via [local `y`] at line 70
     #
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
     # live vars: $t0, $t10, $t46, $t51
     # refs: [$t51 => #51]
     # #51
     #   <no edges>
     # #root
     #   -> #51 via [local `y`] at line 70
     #
 76: $t50 := read_ref($t51)
     # live vars: $t0, $t10, $t46, $t50
     # refs: []
     #
 77: $t45 := ==($t46, $t50)
     # live vars: $t0, $t10, $t45
     # refs: []
     #
 78: if ($t45) goto 79 else goto 81
     # live vars: $t0, $t10
     # refs: []
     #
 79: label L12
     # live vars: $t0, $t10
     # refs: []
     #
 80: goto 84
     # live vars: $t0, $t10
     # refs: []
     #
 81: label L13
     # live vars:
     # refs: []
     #
 82: $t54 := 0
     # live vars: $t54
     # refs: []
     #
 83: abort($t54)
     # live vars: $t0, $t10
     # refs: []
     #
 84: label L14
     # live vars: $t0, $t10
     # refs: []
     #
 85: $t57 := borrow_local($t0)
     # live vars: $t10, $t57
     # refs: [$t57 => #57]
     # #57
     #   <no edges>
     # #root
     #   => #57 via [local `x`] at line 71
     #
 86: $t58 := 1
     # live vars: $t10, $t57, $t58
     # refs: [$t57 => #57]
     # #57
     #   <no edges>
     # #root
     #   => #57 via [local `x`] at line 71
     #
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
     # live vars: $t10, $t56
     # refs: [$t56 => #56]
     # #56
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #
 88: $t60 := borrow_local($t10)
     # live vars: $t56, $t60
     # refs: [$t56 => #56, $t60 => #60]
     # #56
     #   <no edges>
     # #60
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #   => #60 via [local `y`] at line 71
     #
 89: $t61 := 1
     # live vars: $t56, $t60, $t61
     # refs: [$t56 => #56, $t60 => #60]
     # #56
     #   <no edges>
     # #60
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #   => #60 via [local `y`] at line 71
     #
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
     # live vars: $t56, $t59
     # refs: [$t56 => #56, $t59 => #59]
     # #56
     #   <no edges>
     # #59
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #   -> #59 via [local `y`] at line 71
     #
 91: $t55 := ==($t56, $t59)
     # live vars: $t55
     # refs: []
     #
 92: if ($t55) goto 93 else goto 95
     # live vars:
     # refs: []
     #
 93: label L15
     # live vars:
     # refs: []
     #
 94: goto 98
     # live vars:
     # refs: []
     #
 95: label L16
     # live vars:
     # refs: []
     #
 96: $t62 := 0
     # live vars: $t62
     # refs: []
     #
 97: abort($t62)
     # live vars:
     # refs: []
     #
 98: label L17
     # live vars:
     # refs: []
     #
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: vector<0xc0ffee::m::Test2>
     var $t12: 0xc0ffee::m::Test2
     var $t13: vector<u64>
     var $t14: u64
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test2
     var $t18: vector<u64>
     var $t19: u64
     var $t20: u64
     var $t21: u64
     var $t22: 0xc0ffee::m::Test2
     var $t23: vector<u64>
     var $t24: u64
     var $t25: u64
     var $t26: u64
     var $t27: bool
     var $t28: vector<0xc0ffee::m::Test2>
     var $t29: u64
     var $t30: bool
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: &vector<0xc0ffee::m::Test2>
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test2
     var $t36: &0xc0ffee::m::Test2
     var $t37: &vector<0xc0ffee::m::Test2>
     var $t38: u64
     var $t39: 0xc0ffee::m::Test2
     var $t40: &0xc0ffee::m::Test2
     var $t41: &vector<0xc0ffee::m::Test2>
     var $t42: u64
     var $t43: u64
     var $t44: bool
     var $t45: &0xc0ffee::m::Test2
     var $t46: &vector<0xc0ffee::m::Test2>
     var $t47: u64
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: u64
     var $t52: bool
     var $t53: 0xc0ffee::m::Test2
     var $t54: &0xc0ffee::m::Test2
     var $t55: &vector<0xc0ffee::m::Test2>
     var $t56: u64
     var $t57: 0xc0ffee::m::Test2
     var $t58: &0xc0ffee::m::Test2
     var $t59: &vector<0xc0ffee::m::Test2>
     var $t60: u64
     var $t61: u64
     var $t62: bool
     var $t63: &0xc0ffee::m::Test2
     var $t64: &vector<0xc0ffee::m::Test2>
     var $t65: u64
     var $t66: &0xc0ffee::m::Test2
     var $t67: &vector<0xc0ffee::m::Test2>
     var $t68: u64
     var $t69: u64
     # live vars:
     # refs: []
     #
  0: $t3 := 1
     # live vars: $t3
     # refs: []
     #
  1: $t4 := 2
     # live vars: $t3, $t4
     # refs: []
     #
  2: $t5 := 3
     # live vars: $t3, $t4, $t5
     # refs: []
     #
  3: $t2 := vector($t3, $t4, $t5)
     # live vars: $t2
     # refs: []
     #
  4: $t1 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t1
     # refs: []
     #
  5: $t8 := 1
     # live vars: $t1, $t8
     # refs: []
     #
  6: $t9 := 2
     # live vars: $t1, $t8, $t9
     # refs: []
     #
  7: $t10 := 3
     # live vars: $t1, $t8, $t9, $t10
     # refs: []
     #
  8: $t7 := vector($t8, $t9, $t10)
     # live vars: $t1, $t7
     # refs: []
     #
  9: $t6 := pack 0xc0ffee::m::Test2($t7)
     # live vars: $t1, $t6
     # refs: []
     #
 10: $t0 := vector($t1, $t6)
     # live vars: $t0
     # refs: []
     #
 11: $t14 := 1
     # live vars: $t0, $t14
     # refs: []
     #
 12: $t15 := 2
     # live vars: $t0, $t14, $t15
     # refs: []
     #
 13: $t16 := 3
     # live vars: $t0, $t14, $t15, $t16
     # refs: []
     #
 14: $t13 := vector($t14, $t15, $t16)
     # live vars: $t0, $t13
     # refs: []
     #
 15: $t12 := pack 0xc0ffee::m::Test2($t13)
     # live vars: $t0, $t12
     # refs: []
     #
 16: $t19 := 2
     # live vars: $t0, $t12, $t19
     # refs: []
     #
 17: $t20 := 2
     # live vars: $t0, $t12, $t19, $t20
     # refs: []
     #
 18: $t21 := 2
     # live vars: $t0, $t12, $t19, $t20, $t21
     # refs: []
     #
 19: $t18 := vector($t19, $t20, $t21)
     # live vars: $t0, $t12, $t18
     # refs: []
     #
 20: $t17 := pack 0xc0ffee::m::Test2($t18)
     # live vars: $t0, $t12, $t17
     # refs: []
     #
 21: $t24 := 1
     # live vars: $t0, $t12, $t17, $t24
     # refs: []
     #
 22: $t25 := 2
     # live vars: $t0, $t12, $t17, $t24, $t25
     # refs: []
     #
 23: $t26 := 3
     # live vars: $t0, $t12, $t17, $t24, $t25, $t26
     # refs: []
     #
 24: $t23 := vector($t24, $t25, $t26)
     # live vars: $t0, $t12, $t17, $t23
     # refs: []
     #
 25: $t22 := pack 0xc0ffee::m::Test2($t23)
     # live vars: $t0, $t12, $t17, $t22
     # refs: []
     #
 26: $t11 := vector($t12, $t17, $t22)
     # live vars: $t0, $t11
     # refs: []
     #
 27: $t28 := infer($t0)
     # live vars: $t0, $t11, $t28
     # refs: []
     #
 28: $t27 := !=($t28, $t11)
     # live vars: $t0, $t11, $t27
     # refs: []
     #
 29: if ($t27) goto 30 else goto 32
     # live vars: $t0, $t11
     # refs: []
     #
 30: label L0
     # live vars: $t0, $t11
     # refs: []
     #
 31: goto 35
     # live vars: $t0, $t11
     # refs: []
     #
 32: label L1
     # live vars:
     # refs: []
     #
 33: $t29 := 0
     # live vars: $t29
     # refs: []
     #
 34: abort($t29)
     # live vars: $t0, $t11
     # refs: []
     #
 35: label L2
     # live vars: $t0, $t11
     # refs: []
     #
 36: $t31 := borrow_local($t0)
     # live vars: $t0, $t11, $t31
     # refs: [$t31 => #31]
     # #31
     #   <no edges>
     # #root
     #   => #31 via [local `x`] at line 80
     #
 37: $t32 := borrow_local($t11)
     # live vars: $t0, $t11, $t31, $t32
     # refs: [$t31 => #31, $t32 => #32]
     # #31
     #   <no edges>
     # #32
     #   <no edges>
     # #root
     #   => #31 via [local `x`] at line 80
     #   => #32 via [local `y`] at line 80
     #
 38: $t30 := !=($t31, $t32)
     # live vars: $t0, $t11, $t30
     # refs: []
     #
 39: if ($t30) goto 40 else goto 42
     # live vars: $t0, $t11
     # refs: []
     #
 40: label L3
     # live vars: $t0, $t11
     # refs: []
     #
 41: goto 45
     # live vars: $t0, $t11
     # refs: []
     #
 42: label L4
     # live vars:
     # refs: []
     #
 43: $t33 := 0
     # live vars: $t33
     # refs: []
     #
 44: abort($t33)
     # live vars: $t0, $t11
     # refs: []
     #
 45: label L5
     # live vars: $t0, $t11
     # refs: []
     #
 46: $t37 := borrow_local($t0)
     # live vars: $t0, $t11, $t37
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`] at line 82
     #
 47: $t38 := 0
     # live vars: $t0, $t11, $t37, $t38
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`] at line 82
     #
 48: $t36 := vector::borrow<0xc0ffee::m::Test2>($t37, $t38)
     # live vars: $t0, $t11, $t36
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   -> #36 via [local `x`] at line 82
     #
 49: $t35 := read_ref($t36)
     # live vars: $t0, $t11, $t35
     # refs: []
     #
 50: $t41 := borrow_local($t11)
     # live vars: $t0, $t11, $t35, $t41
     # refs: [$t41 => #41]
     # #41
     #   <no edges>
     # #root
     #   => #41 via [local `y`] at line 82
     #
 51: $t42 := 0
     # live vars: $t0, $t11, $t35, $t41, $t42
     # refs: [$t41 => #41]
     # #41
     #   <no edges>
     # #root
     #   => #41 via [local `y`] at line 82
     #
 52: $t40 := vector::borrow<0xc0ffee::m::Test2>($t41, $t42)
     # live vars: $t0, $t11, $t35, $t40
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   -> #40 via [local `y`] at line 82
     #
 53: $t39 := read_ref($t40)
     # live vars: $t0, $t11, $t35, $t39
     # refs: []
     #
 54: $t34 := ==($t35, $t39)
     # live vars: $t0, $t11, $t34
     # refs: []
     #
 55: if ($t34) goto 56 else goto 58
     # live vars: $t0, $t11
     # refs: []
     #
 56: label L6
     # live vars: $t0, $t11
     # refs: []
     #
 57: goto 61
     # live vars: $t0, $t11
     # refs: []
     #
 58: label L7
     # live vars:
     # refs: []
     #
 59: $t43 := 0
     # live vars: $t43
     # refs: []
     #
 60: abort($t43)
     # live vars: $t0, $t11
     # refs: []
     #
 61: label L8
     # live vars: $t0, $t11
     # refs: []
     #
 62: $t46 := borrow_local($t0)
     # live vars: $t0, $t11, $t46
     # refs: [$t46 => #46]
     # #46
     #   <no edges>
     # #root
     #   => #46 via [local `x`] at line 83
     #
 63: $t47 := 0
     # live vars: $t0, $t11, $t46, $t47
     # refs: [$t46 => #46]
     # #46
     #   <no edges>
     # #root
     #   => #46 via [local `x`] at line 83
     #
 64: $t45 := vector::borrow<0xc0ffee::m::Test2>($t46, $t47)
     # live vars: $t0, $t11, $t45
     # refs: [$t45 => #45]
     # #45
     #   <no edges>
     # #root
     #   -> #45 via [local `x`] at line 83
     #
 65: $t49 := borrow_local($t11)
     # live vars: $t0, $t11, $t45, $t49
     # refs: [$t45 => #45, $t49 => #49]
     # #45
     #   <no edges>
     # #49
     #   <no edges>
     # #root
     #   -> #45 via [local `x`] at line 83
     #   => #49 via [local `y`] at line 83
     #
 66: $t50 := 0
     # live vars: $t0, $t11, $t45, $t49, $t50
     # refs: [$t45 => #45, $t49 => #49]
     # #45
     #   <no edges>
     # #49
     #   <no edges>
     # #root
     #   -> #45 via [local `x`] at line 83
     #   => #49 via [local `y`] at line 83
     #
 67: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
     # live vars: $t0, $t11, $t45, $t48
     # refs: [$t45 => #45, $t48 => #48]
     # #45
     #   <no edges>
     # #48
     #   <no edges>
     # #root
     #   -> #45 via [local `x`] at line 83
     #   -> #48 via [local `y`] at line 83
     #
 68: $t44 := ==($t45, $t48)
     # live vars: $t0, $t11, $t44
     # refs: []
     #
 69: if ($t44) goto 70 else goto 72
     # live vars: $t0, $t11
     # refs: []
     #
 70: label L9
     # live vars: $t0, $t11
     # refs: []
     #
 71: goto 75
     # live vars: $t0, $t11
     # refs: []
     #
 72: label L10
     # live vars:
     # refs: []
     #
 73: $t51 := 0
     # live vars: $t51
     # refs: []
     #
 74: abort($t51)
     # live vars: $t0, $t11
     # refs: []
     #
 75: label L11
     # live vars: $t0, $t11
     # refs: []
     #
 76: $t55 := borrow_local($t0)
     # live vars: $t0, $t11, $t55
     # refs: [$t55 => #55]
     # #55
     #   <no edges>
     # #root
     #   => #55 via [local `x`] at line 85
     #
 77: $t56 := 1
     # live vars: $t0, $t11, $t55, $t56
     # refs: [$t55 => #55]
     # #55
     #   <no edges>
     # #root
     #   => #55 via [local `x`] at line 85
     #
 78: $t54 := vector::borrow<0xc0ffee::m::Test2>($t55, $t56)
     # live vars: $t0, $t11, $t54
     # refs: [$t54 => #54]
     # #54
     #   <no edges>
     # #root
     #   -> #54 via [local `x`] at line 85
     #
 79: $t53 := read_ref($t54)
     # live vars: $t0, $t11, $t53
     # refs: []
     #
 80: $t59 := borrow_local($t11)
     # live vars: $t0, $t11, $t53, $t59
     # refs: [$t59 => #59]
     # #59
     #   <no edges>
     # #root
     #   => #59 via [local `y`] at line 85
     #
 81: $t60 := 1
     # live vars: $t0, $t11, $t53, $t59, $t60
     # refs: [$t59 => #59]
     # #59
     #   <no edges>
     # #root
     #   => #59 via [local `y`] at line 85
     #
 82: $t58 := vector::borrow<0xc0ffee::m::Test2>($t59, $t60)
     # live vars: $t0, $t11, $t53, $t58
     # refs: [$t58 => #58]
     # #58
     #   <no edges>
     # #root
     #   -> #58 via [local `y`] at line 85
     #
 83: $t57 := read_ref($t58)
     # live vars: $t0, $t11, $t53, $t57
     # refs: []
     #
 84: $t52 := !=($t53, $t57)
     # live vars: $t0, $t11, $t52
     # refs: []
     #
 85: if ($t52) goto 86 else goto 88
     # live vars: $t0, $t11
     # refs: []
     #
 86: label L12
     # live vars: $t0, $t11
     # refs: []
     #
 87: goto 91
     # live vars: $t0, $t11
     # refs: []
     #
 88: label L13
     # live vars:
     # refs: []
     #
 89: $t61 := 0
     # live vars: $t61
     # refs: []
     #
 90: abort($t61)
     # live vars: $t0, $t11
     # refs: []
     #
 91: label L14
     # live vars: $t0, $t11
     # refs: []
     #
 92: $t64 := borrow_local($t0)
     # live vars: $t11, $t64
     # refs: [$t64 => #64]
     # #64
     #   <no edges>
     # #root
     #   => #64 via [local `x`] at line 86
     #
 93: $t65 := 1
     # live vars: $t11, $t64, $t65
     # refs: [$t64 => #64]
     # #64
     #   <no edges>
     # #root
     #   => #64 via [local `x`] at line 86
     #
 94: $t63 := vector::borrow<0xc0ffee::m::Test2>($t64, $t65)
     # live vars: $t11, $t63
     # refs: [$t63 => #63]
     # #63
     #   <no edges>
     # #root
     #   -> #63 via [local `x`] at line 86
     #
 95: $t67 := borrow_local($t11)
     # live vars: $t63, $t67
     # refs: [$t63 => #63, $t67 => #67]
     # #63
     #   <no edges>
     # #67
     #   <no edges>
     # #root
     #   -> #63 via [local `x`] at line 86
     #   => #67 via [local `y`] at line 86
     #
 96: $t68 := 1
     # live vars: $t63, $t67, $t68
     # refs: [$t63 => #63, $t67 => #67]
     # #63
     #   <no edges>
     # #67
     #   <no edges>
     # #root
     #   -> #63 via [local `x`] at line 86
     #   => #67 via [local `y`] at line 86
     #
 97: $t66 := vector::borrow<0xc0ffee::m::Test2>($t67, $t68)
     # live vars: $t63, $t66
     # refs: [$t63 => #63, $t66 => #66]
     # #63
     #   <no edges>
     # #66
     #   <no edges>
     # #root
     #   -> #63 via [local `x`] at line 86
     #   -> #66 via [local `y`] at line 86
     #
 98: $t62 := !=($t63, $t66)
     # live vars: $t62
     # refs: []
     #
 99: if ($t62) goto 100 else goto 102
     # live vars:
     # refs: []
     #
100: label L15
     # live vars:
     # refs: []
     #
101: goto 105
     # live vars:
     # refs: []
     #
102: label L16
     # live vars:
     # refs: []
     #
103: $t69 := 0
     # live vars: $t69
     # refs: []
     #
104: abort($t69)
     # live vars:
     # refs: []
     #
105: label L17
     # live vars:
     # refs: []
     #
106: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
     # live vars:
     # refs: []
     #
  0: $t4 := 1
     # live vars: $t4
     # refs: []
     #
  1: $t5 := 2
     # live vars: $t4, $t5
     # refs: []
     #
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t3
     # refs: []
     #
  3: $t7 := 1
     # live vars: $t3, $t7
     # refs: []
     #
  4: $t8 := 2
     # live vars: $t3, $t7, $t8
     # refs: []
     #
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
     # live vars: $t3, $t6
     # refs: []
     #
  6: $t2 := vector($t3, $t6)
     # live vars: $t2
     # refs: []
     #
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t1
     # refs: []
     #
  8: $t0 := vector($t1)
     # live vars: $t0
     # refs: []
     #
  9: $t13 := 1
     # live vars: $t0, $t13
     # refs: []
     #
 10: $t14 := 2
     # live vars: $t0, $t13, $t14
     # refs: []
     #
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
     # live vars: $t0, $t12
     # refs: []
     #
 12: $t16 := 1
     # live vars: $t0, $t12, $t16
     # refs: []
     #
 13: $t17 := 2
     # live vars: $t0, $t12, $t16, $t17
     # refs: []
     #
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
     # live vars: $t0, $t12, $t15
     # refs: []
     #
 15: $t11 := vector($t12, $t15)
     # live vars: $t0, $t11
     # refs: []
     #
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
     # live vars: $t0, $t10
     # refs: []
     #
 17: $t21 := 1
     # live vars: $t0, $t10, $t21
     # refs: []
     #
 18: $t22 := 2
     # live vars: $t0, $t10, $t21, $t22
     # refs: []
     #
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
     # live vars: $t0, $t10, $t20
     # refs: []
     #
 20: $t24 := 1
     # live vars: $t0, $t10, $t20, $t24
     # refs: []
     #
 21: $t25 := 2
     # live vars: $t0, $t10, $t20, $t24, $t25
     # refs: []
     #
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
     # live vars: $t0, $t10, $t20, $t23
     # refs: []
     #
 23: $t19 := vector($t20, $t23)
     # live vars: $t0, $t10, $t19
     # refs: []
     #
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
     # live vars: $t0, $t10, $t18
     # refs: []
     #
 25: $t9 := vector($t10, $t18)
     # live vars: $t0, $t9
     # refs: []
     #
 26: $t27 := infer($t0)
     # live vars: $t0, $t9, $t27
     # refs: []
     #
 27: $t26 := !=($t27, $t9)
     # live vars: $t0, $t9, $t26
     # refs: []
     #
 28: if ($t26) goto 29 else goto 31
     # live vars: $t0, $t9
     # refs: []
     #
 29: label L0
     # live vars: $t0, $t9
     # refs: []
     #
 30: goto 34
     # live vars: $t0, $t9
     # refs: []
     #
 31: label L1
     # live vars:
     # refs: []
     #
 32: $t28 := 0
     # live vars: $t28
     # refs: []
     #
 33: abort($t28)
     # live vars: $t0, $t9
     # refs: []
     #
 34: label L2
     # live vars: $t0, $t9
     # refs: []
     #
 35: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 94
     #
 36: $t31 := borrow_local($t9)
     # live vars: $t0, $t9, $t30, $t31
     # refs: [$t30 => #30, $t31 => #31]
     # #30
     #   <no edges>
     # #31
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 94
     #   => #31 via [local `y`] at line 94
     #
 37: $t29 := !=($t30, $t31)
     # live vars: $t0, $t9, $t29
     # refs: []
     #
 38: if ($t29) goto 39 else goto 41
     # live vars: $t0, $t9
     # refs: []
     #
 39: label L3
     # live vars: $t0, $t9
     # refs: []
     #
 40: goto 44
     # live vars: $t0, $t9
     # refs: []
     #
 41: label L4
     # live vars:
     # refs: []
     #
 42: $t32 := 0
     # live vars: $t32
     # refs: []
     #
 43: abort($t32)
     # live vars: $t0, $t9
     # refs: []
     #
 44: label L5
     # live vars: $t0, $t9
     # refs: []
     #
 45: $t36 := borrow_local($t0)
     # live vars: $t0, $t9, $t36
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   => #36 via [local `x`] at line 96
     #
 46: $t37 := 0
     # live vars: $t0, $t9, $t36, $t37
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   => #36 via [local `x`] at line 96
     #
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
     # live vars: $t0, $t9, $t35
     # refs: [$t35 => #35]
     # #35
     #   <no edges>
     # #root
     #   -> #35 via [local `x`] at line 96
     #
 48: $t34 := read_ref($t35)
     # live vars: $t0, $t9, $t34
     # refs: []
     #
 49: $t40 := borrow_local($t9)
     # live vars: $t0, $t9, $t34, $t40
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `y`] at line 96
     #
 50: $t41 := 0
     # live vars: $t0, $t9, $t34, $t40, $t41
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `y`] at line 96
     #
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
     # live vars: $t0, $t9, $t34, $t39
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   -> #39 via [local `y`] at line 96
     #
 52: $t38 := read_ref($t39)
     # live vars: $t0, $t9, $t34, $t38
     # refs: []
     #
 53: $t33 := ==($t34, $t38)
     # live vars: $t0, $t9, $t33
     # refs: []
     #
 54: if ($t33) goto 55 else goto 57
     # live vars: $t0, $t9
     # refs: []
     #
 55: label L6
     # live vars: $t0, $t9
     # refs: []
     #
 56: goto 60
     # live vars: $t0, $t9
     # refs: []
     #
 57: label L7
     # live vars:
     # refs: []
     #
 58: $t42 := 0
     # live vars: $t42
     # refs: []
     #
 59: abort($t42)
     # live vars: $t0, $t9
     # refs: []
     #
 60: label L8
     # live vars: $t0, $t9
     # refs: []
     #
 61: $t45 := borrow_local($t0)
     # live vars: $t0, $t9, $t45
     # refs: [$t45 => #45]
     # #45
     #   <no edges>
     # #root
     #   => #45 via [local `x`] at line 97
     #
 62: $t46 := 0
     # live vars: $t0, $t9, $t45, $t46
     # refs: [$t45 => #45]
     # #45
     #   <no edges>
     # #root
     #   => #45 via [local `x`] at line 97
     #
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
     # live vars: $t0, $t9, $t44
     # refs: [$t44 => #44]
     # #44
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #
 64: $t48 := borrow_local($t9)
     # live vars: $t0, $t9, $t44, $t48
     # refs: [$t44 => #44, $t48 => #48]
     # #44
     #   <no edges>
     # #48
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #   => #48 via [local `y`] at line 97
     #
 65: $t49 := 0
     # live vars: $t0, $t9, $t44, $t48, $t49
     # refs: [$t44 => #44, $t48 => #48]
     # #44
     #   <no edges>
     # #48
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #   => #48 via [local `y`] at line 97
     #
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
     # live vars: $t0, $t9, $t44, $t47
     # refs: [$t44 => #44, $t47 => #47]
     # #44
     #   <no edges>
     # #47
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #   -> #47 via [local `y`] at line 97
     #
 67: $t43 := ==($t44, $t47)
     # live vars: $t0, $t9, $t43
     # refs: []
     #
 68: if ($t43) goto 69 else goto 71
     # live vars: $t0, $t9
     # refs: []
     #
 69: label L9
     # live vars: $t0, $t9
     # refs: []
     #
 70: goto 74
     # live vars: $t0, $t9
     # refs: []
     #
 71: label L10
     # live vars:
     # refs: []
     #
 72: $t50 := 0
     # live vars: $t50
     # refs: []
     #
 73: abort($t50)
     # live vars: $t0, $t9
     # refs: []
     #
 74: label L11
     # live vars: $t0, $t9
     # refs: []
     #
 75: $t54 := borrow_local($t0)
     # live vars: $t0, $t9, $t54
     # refs: [$t54 => #54]
     # #54
     #   <no edges>
     # #root
     #   => #54 via [local `x`] at line 99
     #
 76: $t55 := 0
     # live vars: $t0, $t9, $t54, $t55
     # refs: [$t54 => #54]
     # #54
     #   <no edges>
     # #root
     #   => #54 via [local `x`] at line 99
     #
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
     # live vars: $t0, $t9, $t53
     # refs: [$t53 => #53]
     # #53
     #   <no edges>
     # #root
     #   -> #53 via [local `x`] at line 99
     #
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t0, $t9, $t56
     # refs: [$t56 => #56]
     # #56
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 99
     #
 79: $t52 := read_ref($t56)
     # live vars: $t0, $t9, $t52
     # refs: []
     #
 80: $t59 := borrow_local($t9)
     # live vars: $t0, $t9, $t52, $t59
     # refs: [$t59 => #59]
     # #59
     #   <no edges>
     # #root
     #   => #59 via [local `y`] at line 99
     #
 81: $t60 := 0
     # live vars: $t0, $t9, $t52, $t59, $t60
     # refs: [$t59 => #59]
     # #59
     #   <no edges>
     # #root
     #   => #59 via [local `y`] at line 99
     #
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
     # live vars: $t0, $t9, $t52, $t58
     # refs: [$t58 => #58]
     # #58
     #   <no edges>
     # #root
     #   -> #58 via [local `y`] at line 99
     #
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
     # live vars: $t0, $t9, $t52, $t61
     # refs: [$t61 => #61]
     # #61
     #   <no edges>
     # #root
     #   -> #61 via [local `y`] at line 99
     #
 84: $t57 := read_ref($t61)
     # live vars: $t0, $t9, $t52, $t57
     # refs: []
     #
 85: $t51 := ==($t52, $t57)
     # live vars: $t0, $t9, $t51
     # refs: []
     #
 86: if ($t51) goto 87 else goto 89
     # live vars: $t0, $t9
     # refs: []
     #
 87: label L12
     # live vars: $t0, $t9
     # refs: []
     #
 88: goto 92
     # live vars: $t0, $t9
     # refs: []
     #
 89: label L13
     # live vars:
     # refs: []
     #
 90: $t62 := 0
     # live vars: $t62
     # refs: []
     #
 91: abort($t62)
     # live vars: $t0, $t9
     # refs: []
     #
 92: label L14
     # live vars: $t0, $t9
     # refs: []
     #
 93: $t66 := borrow_local($t0)
     # live vars: $t9, $t66
     # refs: [$t66 => #66]
     # #66
     #   <no edges>
     # #root
     #   => #66 via [local `x`] at line 100
     #
 94: $t67 := 0
     # live vars: $t9, $t66, $t67
     # refs: [$t66 => #66]
     # #66
     #   <no edges>
     # #root
     #   => #66 via [local `x`] at line 100
     #
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
     # live vars: $t9, $t65
     # refs: [$t65 => #65]
     # #65
     #   <no edges>
     # #root
     #   -> #65 via [local `x`] at line 100
     #
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
     # live vars: $t9, $t64
     # refs: [$t64 => #64]
     # #64
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #
 97: $t70 := borrow_local($t9)
     # live vars: $t64, $t70
     # refs: [$t64 => #64, $t70 => #70]
     # #64
     #   <no edges>
     # #70
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   => #70 via [local `y`] at line 100
     #
 98: $t71 := 0
     # live vars: $t64, $t70, $t71
     # refs: [$t64 => #64, $t70 => #70]
     # #64
     #   <no edges>
     # #70
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   => #70 via [local `y`] at line 100
     #
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
     # live vars: $t64, $t69
     # refs: [$t64 => #64, $t69 => #69]
     # #64
     #   <no edges>
     # #69
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   -> #69 via [local `y`] at line 100
     #
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
     # live vars: $t64, $t68
     # refs: [$t64 => #64, $t68 => #68]
     # #64
     #   <no edges>
     # #68
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   -> #68 via [local `y`] at line 100
     #
101: $t63 := ==($t64, $t68)
     # live vars: $t63
     # refs: []
     #
102: if ($t63) goto 103 else goto 105
     # live vars:
     # refs: []
     #
103: label L15
     # live vars:
     # refs: []
     #
104: goto 108
     # live vars:
     # refs: []
     #
105: label L16
     # live vars:
     # refs: []
     #
106: $t72 := 0
     # live vars: $t72
     # refs: []
     #
107: abort($t72)
     # live vars:
     # refs: []
     #
108: label L17
     # live vars:
     # refs: []
     #
109: return ()
}

============ after AbortAnalysisProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t1 := 1
     # abort state: {returns,aborts}
     # live vars: $t1
     # refs: []
     #
  1: $t2 := 2
     # abort state: {returns,aborts}
     # live vars: $t1, $t2
     # refs: []
     #
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
  3: $t4 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t4
     # refs: []
     #
  4: $t5 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t4, $t5
     # refs: []
     #
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
  6: $t7 := infer($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t7
     # refs: []
     #
  7: $t6 := ==($t7, $t3)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t6
     # refs: []
     #
  8: if ($t6) goto 9 else goto 11
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
  9: label L0
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 10: goto 14
     # abort state: {aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 11: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 12: $t8 := 0
     # abort state: {aborts}
     # live vars: $t8
     # refs: []
     #
 13: abort($t8)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 14: label L2
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 15: $t10 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t10
     # refs: [$t10 => #10]
     # #10
     #   <no edges>
     # #root
     #   => #10 via [local `x`] at line 22
     #
 16: $t11 := borrow_local($t3)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t10, $t11
     # refs: [$t10 => #10, $t11 => #11]
     # #10
     #   <no edges>
     # #11
     #   <no edges>
     # #root
     #   => #10 via [local `x`] at line 22
     #   => #11 via [local `y`] at line 22
     #
 17: $t9 := ==($t10, $t11)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t9
     # refs: []
     #
 18: if ($t9) goto 19 else goto 21
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 19: label L3
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 20: goto 24
     # abort state: {aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 21: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 22: $t12 := 0
     # abort state: {aborts}
     # live vars: $t12
     # refs: []
     #
 23: abort($t12)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 24: label L5
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 25: $t15 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t15
     # refs: [$t15 => #15]
     # #15
     #   <no edges>
     # #root
     #   => #15 via [local `x`] at line 24
     #
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => #16 via [local `x`, field `a`] at line 24
     #
 27: $t14 := read_ref($t16)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t14
     # refs: []
     #
 28: $t18 := borrow_local($t3)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t14, $t18
     # refs: [$t18 => #18]
     # #18
     #   <no edges>
     # #root
     #   => #18 via [local `y`] at line 24
     #
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t14, $t19
     # refs: [$t19 => #19]
     # #19
     #   <no edges>
     # #root
     #   => #19 via [local `y`, field `a`] at line 24
     #
 30: $t17 := read_ref($t19)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t14, $t17
     # refs: []
     #
 31: $t13 := ==($t14, $t17)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t13
     # refs: []
     #
 32: if ($t13) goto 33 else goto 35
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 33: label L6
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 34: goto 38
     # abort state: {aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 35: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 36: $t20 := 0
     # abort state: {aborts}
     # live vars: $t20
     # refs: []
     #
 37: abort($t20)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 38: label L8
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 39: $t23 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => #23 via [local `x`] at line 25
     #
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t22
     # refs: [$t22 => #22]
     # #22
     #   <no edges>
     # #root
     #   => #22 via [local `x`, field `a`] at line 25
     #
 41: $t25 := borrow_local($t3)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t22, $t25
     # refs: [$t22 => #22, $t25 => #25]
     # #22
     #   <no edges>
     # #25
     #   <no edges>
     # #root
     #   => #22 via [local `x`, field `a`] at line 25
     #   => #25 via [local `y`] at line 25
     #
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t22, $t24
     # refs: [$t22 => #22, $t24 => #24]
     # #22
     #   <no edges>
     # #24
     #   <no edges>
     # #root
     #   => #22 via [local `x`, field `a`] at line 25
     #   => #24 via [local `y`, field `a`] at line 25
     #
 43: $t21 := ==($t22, $t24)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t21
     # refs: []
     #
 44: if ($t21) goto 45 else goto 47
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 45: label L9
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 46: goto 50
     # abort state: {aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 47: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 48: $t26 := 0
     # abort state: {aborts}
     # live vars: $t26
     # refs: []
     #
 49: abort($t26)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 50: label L11
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 51: $t29 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   => #29 via [local `x`] at line 27
     #
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`, field `b`] at line 27
     #
 53: $t28 := read_ref($t30)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t28
     # refs: []
     #
 54: $t32 := borrow_local($t3)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t28, $t32
     # refs: [$t32 => #32]
     # #32
     #   <no edges>
     # #root
     #   => #32 via [local `y`] at line 27
     #
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t28, $t33
     # refs: [$t33 => #33]
     # #33
     #   <no edges>
     # #root
     #   => #33 via [local `y`, field `b`] at line 27
     #
 56: $t31 := read_ref($t33)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t28, $t31
     # refs: []
     #
 57: $t27 := ==($t28, $t31)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t27
     # refs: []
     #
 58: if ($t27) goto 59 else goto 61
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 59: label L12
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 60: goto 64
     # abort state: {aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 61: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 62: $t34 := 0
     # abort state: {aborts}
     # live vars: $t34
     # refs: []
     #
 63: abort($t34)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 64: label L14
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 65: $t37 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t3, $t37
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`] at line 28
     #
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
     # abort state: {returns,aborts}
     # live vars: $t3, $t36
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   => #36 via [local `x`, field `b`] at line 28
     #
 67: $t39 := borrow_local($t3)
     # abort state: {returns,aborts}
     # live vars: $t36, $t39
     # refs: [$t36 => #36, $t39 => #39]
     # #36
     #   <no edges>
     # #39
     #   <no edges>
     # #root
     #   => #36 via [local `x`, field `b`] at line 28
     #   => #39 via [local `y`] at line 28
     #
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
     # abort state: {returns,aborts}
     # live vars: $t36, $t38
     # refs: [$t36 => #36, $t38 => #38]
     # #36
     #   <no edges>
     # #38
     #   <no edges>
     # #root
     #   => #36 via [local `x`, field `b`] at line 28
     #   => #38 via [local `y`, field `b`] at line 28
     #
 69: $t35 := ==($t36, $t38)
     # abort state: {returns,aborts}
     # live vars: $t35
     # refs: []
     #
 70: if ($t35) goto 71 else goto 73
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 71: label L15
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 72: goto 76
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 73: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 74: $t40 := 0
     # abort state: {aborts}
     # live vars: $t40
     # refs: []
     #
 75: abort($t40)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 76: label L17
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test2
     var $t6: vector<u64>
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: bool
     var $t11: 0xc0ffee::m::Test2
     var $t12: u64
     var $t13: bool
     var $t14: &0xc0ffee::m::Test2
     var $t15: &0xc0ffee::m::Test2
     var $t16: u64
     var $t17: bool
     var $t18: vector<u64>
     var $t19: &0xc0ffee::m::Test2
     var $t20: &vector<u64>
     var $t21: vector<u64>
     var $t22: &0xc0ffee::m::Test2
     var $t23: &vector<u64>
     var $t24: u64
     var $t25: bool
     var $t26: &vector<u64>
     var $t27: &0xc0ffee::m::Test2
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: bool
     var $t32: u64
     var $t33: &u64
     var $t34: &vector<u64>
     var $t35: &0xc0ffee::m::Test2
     var $t36: u64
     var $t37: u64
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &u64
     var $t45: &vector<u64>
     var $t46: &0xc0ffee::m::Test2
     var $t47: u64
     var $t48: &u64
     var $t49: &vector<u64>
     var $t50: &0xc0ffee::m::Test2
     var $t51: u64
     var $t52: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t2 := 1
     # abort state: {returns,aborts}
     # live vars: $t2
     # refs: []
     #
  1: $t3 := 2
     # abort state: {returns,aborts}
     # live vars: $t2, $t3
     # refs: []
     #
  2: $t4 := 3
     # abort state: {returns,aborts}
     # live vars: $t2, $t3, $t4
     # refs: []
     #
  3: $t1 := vector($t2, $t3, $t4)
     # abort state: {returns,aborts}
     # live vars: $t1
     # refs: []
     #
  4: $t0 := pack 0xc0ffee::m::Test2($t1)
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
  5: $t7 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t7
     # refs: []
     #
  6: $t8 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t7, $t8
     # refs: []
     #
  7: $t9 := 3
     # abort state: {returns,aborts}
     # live vars: $t0, $t7, $t8, $t9
     # refs: []
     #
  8: $t6 := vector($t7, $t8, $t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t6
     # refs: []
     #
  9: $t5 := pack 0xc0ffee::m::Test2($t6)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 10: $t11 := infer($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t11
     # refs: []
     #
 11: $t10 := ==($t11, $t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t10
     # refs: []
     #
 12: if ($t10) goto 13 else goto 15
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 13: label L0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 14: goto 18
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 15: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 16: $t12 := 0
     # abort state: {aborts}
     # live vars: $t12
     # refs: []
     #
 17: abort($t12)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 18: label L2
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 19: $t14 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t14
     # refs: [$t14 => #14]
     # #14
     #   <no edges>
     # #root
     #   => #14 via [local `x`] at line 36
     #
 20: $t15 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t14, $t15
     # refs: [$t14 => #14, $t15 => #15]
     # #14
     #   <no edges>
     # #15
     #   <no edges>
     # #root
     #   => #14 via [local `x`] at line 36
     #   => #15 via [local `y`] at line 36
     #
 21: $t13 := ==($t14, $t15)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t13
     # refs: []
     #
 22: if ($t13) goto 23 else goto 25
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 23: label L3
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 24: goto 28
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 25: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 26: $t16 := 0
     # abort state: {aborts}
     # live vars: $t16
     # refs: []
     #
 27: abort($t16)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 28: label L5
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 29: $t19 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t19
     # refs: [$t19 => #19]
     # #19
     #   <no edges>
     # #root
     #   => #19 via [local `x`] at line 38
     #
 30: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t19)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t20
     # refs: [$t20 => #20]
     # #20
     #   <no edges>
     # #root
     #   => #20 via [local `x`, field `a`] at line 38
     #
 31: $t18 := read_ref($t20)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t18
     # refs: []
     #
 32: $t22 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t18, $t22
     # refs: [$t22 => #22]
     # #22
     #   <no edges>
     # #root
     #   => #22 via [local `y`] at line 38
     #
 33: $t23 := borrow_field<0xc0ffee::m::Test2>.a($t22)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t18, $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => #23 via [local `y`, field `a`] at line 38
     #
 34: $t21 := read_ref($t23)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t18, $t21
     # refs: []
     #
 35: $t17 := ==($t18, $t21)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t17
     # refs: []
     #
 36: if ($t17) goto 37 else goto 39
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 37: label L6
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 38: goto 42
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 39: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 40: $t24 := 0
     # abort state: {aborts}
     # live vars: $t24
     # refs: []
     #
 41: abort($t24)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 42: label L8
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 43: $t27 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t27
     # refs: [$t27 => #27]
     # #27
     #   <no edges>
     # #root
     #   => #27 via [local `x`] at line 39
     #
 44: $t26 := borrow_field<0xc0ffee::m::Test2>.a($t27)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t26
     # refs: [$t26 => #26]
     # #26
     #   <no edges>
     # #root
     #   => #26 via [local `x`, field `a`] at line 39
     #
 45: $t29 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t26, $t29
     # refs: [$t26 => #26, $t29 => #29]
     # #26
     #   <no edges>
     # #29
     #   <no edges>
     # #root
     #   => #26 via [local `x`, field `a`] at line 39
     #   => #29 via [local `y`] at line 39
     #
 46: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t26, $t28
     # refs: [$t26 => #26, $t28 => #28]
     # #26
     #   <no edges>
     # #28
     #   <no edges>
     # #root
     #   => #26 via [local `x`, field `a`] at line 39
     #   => #28 via [local `y`, field `a`] at line 39
     #
 47: $t25 := ==($t26, $t28)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t25
     # refs: []
     #
 48: if ($t25) goto 49 else goto 51
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 49: label L9
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 50: goto 54
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 51: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 52: $t30 := 0
     # abort state: {aborts}
     # live vars: $t30
     # refs: []
     #
 53: abort($t30)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 54: label L11
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 55: $t35 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t35
     # refs: [$t35 => #35]
     # #35
     #   <no edges>
     # #root
     #   => #35 via [local `x`] at line 41
     #
 56: $t34 := borrow_field<0xc0ffee::m::Test2>.a($t35)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t34
     # refs: [$t34 => #34]
     # #34
     #   <no edges>
     # #root
     #   => #34 via [local `x`, field `a`] at line 41
     #
 57: $t36 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t34, $t36
     # refs: [$t34 => #34]
     # #34
     #   <no edges>
     # #root
     #   => #34 via [local `x`, field `a`] at line 41
     #
 58: $t33 := vector::borrow<u64>($t34, $t36)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t33
     # refs: [$t33 => #33]
     # #33
     #   <no edges>
     # #root
     #   -> #33 via [local `x`, field `a`] at line 41
     #
 59: $t32 := read_ref($t33)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t32
     # refs: []
     #
 60: $t40 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t32, $t40
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `y`] at line 41
     #
 61: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t32, $t39
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `y`, field `a`] at line 41
     #
 62: $t41 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t32, $t39, $t41
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `y`, field `a`] at line 41
     #
 63: $t38 := vector::borrow<u64>($t39, $t41)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t32, $t38
     # refs: [$t38 => #38]
     # #38
     #   <no edges>
     # #root
     #   -> #38 via [local `y`, field `a`] at line 41
     #
 64: $t37 := read_ref($t38)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t32, $t37
     # refs: []
     #
 65: $t31 := ==($t32, $t37)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t31
     # refs: []
     #
 66: if ($t31) goto 67 else goto 69
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 67: label L12
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 68: goto 72
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 69: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 70: $t42 := 0
     # abort state: {aborts}
     # live vars: $t42
     # refs: []
     #
 71: abort($t42)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 72: label L14
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 73: $t46 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t5, $t46
     # refs: [$t46 => #46]
     # #46
     #   <no edges>
     # #root
     #   => #46 via [local `x`] at line 42
     #
 74: $t45 := borrow_field<0xc0ffee::m::Test2>.a($t46)
     # abort state: {returns,aborts}
     # live vars: $t5, $t45
     # refs: [$t45 => #45]
     # #45
     #   <no edges>
     # #root
     #   => #45 via [local `x`, field `a`] at line 42
     #
 75: $t47 := 0
     # abort state: {returns,aborts}
     # live vars: $t5, $t45, $t47
     # refs: [$t45 => #45]
     # #45
     #   <no edges>
     # #root
     #   => #45 via [local `x`, field `a`] at line 42
     #
 76: $t44 := vector::borrow<u64>($t45, $t47)
     # abort state: {returns,aborts}
     # live vars: $t5, $t44
     # refs: [$t44 => #44]
     # #44
     #   <no edges>
     # #root
     #   -> #44 via [local `x`, field `a`] at line 42
     #
 77: $t50 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t44, $t50
     # refs: [$t44 => #44, $t50 => #50]
     # #44
     #   <no edges>
     # #50
     #   <no edges>
     # #root
     #   -> #44 via [local `x`, field `a`] at line 42
     #   => #50 via [local `y`] at line 42
     #
 78: $t49 := borrow_field<0xc0ffee::m::Test2>.a($t50)
     # abort state: {returns,aborts}
     # live vars: $t44, $t49
     # refs: [$t44 => #44, $t49 => #49]
     # #44
     #   <no edges>
     # #49
     #   <no edges>
     # #root
     #   -> #44 via [local `x`, field `a`] at line 42
     #   => #49 via [local `y`, field `a`] at line 42
     #
 79: $t51 := 0
     # abort state: {returns,aborts}
     # live vars: $t44, $t49, $t51
     # refs: [$t44 => #44, $t49 => #49]
     # #44
     #   <no edges>
     # #49
     #   <no edges>
     # #root
     #   -> #44 via [local `x`, field `a`] at line 42
     #   => #49 via [local `y`, field `a`] at line 42
     #
 80: $t48 := vector::borrow<u64>($t49, $t51)
     # abort state: {returns,aborts}
     # live vars: $t44, $t48
     # refs: [$t44 => #44, $t48 => #48]
     # #44
     #   <no edges>
     # #48
     #   <no edges>
     # #root
     #   -> #44 via [local `x`, field `a`] at line 42
     #   -> #48 via [local `y`, field `a`] at line 42
     #
 81: $t43 := ==($t44, $t48)
     # abort state: {returns,aborts}
     # live vars: $t43
     # refs: []
     #
 82: if ($t43) goto 83 else goto 85
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 83: label L15
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 84: goto 88
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 85: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 86: $t52 := 0
     # abort state: {aborts}
     # live vars: $t52
     # refs: []
     #
 87: abort($t52)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 88: label L17
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 89: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t3 := 1
     # abort state: {returns,aborts}
     # live vars: $t3
     # refs: []
     #
  1: $t4 := 2
     # abort state: {returns,aborts}
     # live vars: $t3, $t4
     # refs: []
     #
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # abort state: {returns,aborts}
     # live vars: $t2
     # refs: []
     #
  3: $t1 := vector($t2)
     # abort state: {returns,aborts}
     # live vars: $t1
     # refs: []
     #
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
  5: $t8 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t8
     # refs: []
     #
  6: $t9 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t8, $t9
     # refs: []
     #
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t7
     # refs: []
     #
  8: $t11 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t7, $t11
     # refs: []
     #
  9: $t12 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t7, $t11, $t12
     # refs: []
     #
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
     # abort state: {returns,aborts}
     # live vars: $t0, $t7, $t10
     # refs: []
     #
 11: $t6 := vector($t7, $t10)
     # abort state: {returns,aborts}
     # live vars: $t0, $t6
     # refs: []
     #
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 13: $t14 := infer($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t14
     # refs: []
     #
 14: $t13 := !=($t14, $t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t13
     # refs: []
     #
 15: if ($t13) goto 16 else goto 18
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 16: label L0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 17: goto 21
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 18: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 19: $t15 := 0
     # abort state: {aborts}
     # live vars: $t15
     # refs: []
     #
 20: abort($t15)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 21: label L2
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 22: $t17 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t17
     # refs: [$t17 => #17]
     # #17
     #   <no edges>
     # #root
     #   => #17 via [local `x`] at line 50
     #
 23: $t18 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t17, $t18
     # refs: [$t17 => #17, $t18 => #18]
     # #17
     #   <no edges>
     # #18
     #   <no edges>
     # #root
     #   => #17 via [local `x`] at line 50
     #   => #18 via [local `y`] at line 50
     #
 24: $t16 := !=($t17, $t18)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t16
     # refs: []
     #
 25: if ($t16) goto 26 else goto 28
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 26: label L3
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 27: goto 31
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 28: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 29: $t19 := 0
     # abort state: {aborts}
     # live vars: $t19
     # refs: []
     #
 30: abort($t19)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 31: label L5
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 32: $t22 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t22
     # refs: [$t22 => #22]
     # #22
     #   <no edges>
     # #root
     #   => #22 via [local `x`] at line 52
     #
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => #23 via [local `x`, field `a`] at line 52
     #
 34: $t21 := read_ref($t23)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t21
     # refs: []
     #
 35: $t25 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t21, $t25
     # refs: [$t25 => #25]
     # #25
     #   <no edges>
     # #root
     #   => #25 via [local `y`] at line 52
     #
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t21, $t26
     # refs: [$t26 => #26]
     # #26
     #   <no edges>
     # #root
     #   => #26 via [local `y`, field `a`] at line 52
     #
 37: $t24 := read_ref($t26)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t21, $t24
     # refs: []
     #
 38: $t20 := !=($t21, $t24)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t20
     # refs: []
     #
 39: if ($t20) goto 40 else goto 42
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 40: label L6
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 41: goto 45
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 42: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 43: $t27 := 0
     # abort state: {aborts}
     # live vars: $t27
     # refs: []
     #
 44: abort($t27)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 45: label L8
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 46: $t30 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 53
     #
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   => #29 via [local `x`, field `a`] at line 53
     #
 48: $t32 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t29, $t32
     # refs: [$t29 => #29, $t32 => #32]
     # #29
     #   <no edges>
     # #32
     #   <no edges>
     # #root
     #   => #29 via [local `x`, field `a`] at line 53
     #   => #32 via [local `y`] at line 53
     #
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t29, $t31
     # refs: [$t29 => #29, $t31 => #31]
     # #29
     #   <no edges>
     # #31
     #   <no edges>
     # #root
     #   => #29 via [local `x`, field `a`] at line 53
     #   => #31 via [local `y`, field `a`] at line 53
     #
 50: $t28 := !=($t29, $t31)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t28
     # refs: []
     #
 51: if ($t28) goto 52 else goto 54
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 52: label L9
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 53: goto 57
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 54: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 55: $t33 := 0
     # abort state: {aborts}
     # live vars: $t33
     # refs: []
     #
 56: abort($t33)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 57: label L11
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 58: $t38 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t38
     # refs: [$t38 => #38]
     # #38
     #   <no edges>
     # #root
     #   => #38 via [local `x`] at line 55
     #
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t37
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`, field `a`] at line 55
     #
 60: $t39 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t37, $t39
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`, field `a`] at line 55
     #
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t36
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   -> #36 via [local `x`, field `a`] at line 55
     #
 62: $t35 := read_ref($t36)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t35
     # refs: []
     #
 63: $t43 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t35, $t43
     # refs: [$t43 => #43]
     # #43
     #   <no edges>
     # #root
     #   => #43 via [local `y`] at line 55
     #
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t35, $t42
     # refs: [$t42 => #42]
     # #42
     #   <no edges>
     # #root
     #   => #42 via [local `y`, field `a`] at line 55
     #
 65: $t44 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t35, $t42, $t44
     # refs: [$t42 => #42]
     # #42
     #   <no edges>
     # #root
     #   => #42 via [local `y`, field `a`] at line 55
     #
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t35, $t41
     # refs: [$t41 => #41]
     # #41
     #   <no edges>
     # #root
     #   -> #41 via [local `y`, field `a`] at line 55
     #
 67: $t40 := read_ref($t41)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t35, $t40
     # refs: []
     #
 68: $t34 := ==($t35, $t40)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t34
     # refs: []
     #
 69: if ($t34) goto 70 else goto 72
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 70: label L12
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 71: goto 75
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 72: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 73: $t45 := 0
     # abort state: {aborts}
     # live vars: $t45
     # refs: []
     #
 74: abort($t45)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 75: label L14
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 76: $t49 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t5, $t49
     # refs: [$t49 => #49]
     # #49
     #   <no edges>
     # #root
     #   => #49 via [local `x`] at line 56
     #
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
     # abort state: {returns,aborts}
     # live vars: $t5, $t48
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`, field `a`] at line 56
     #
 78: $t50 := 0
     # abort state: {returns,aborts}
     # live vars: $t5, $t48, $t50
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`, field `a`] at line 56
     #
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
     # abort state: {returns,aborts}
     # live vars: $t5, $t47
     # refs: [$t47 => #47]
     # #47
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #
 80: $t53 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t47, $t53
     # refs: [$t47 => #47, $t53 => #53]
     # #47
     #   <no edges>
     # #53
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   => #53 via [local `y`] at line 56
     #
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # abort state: {returns,aborts}
     # live vars: $t47, $t52
     # refs: [$t47 => #47, $t52 => #52]
     # #47
     #   <no edges>
     # #52
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   => #52 via [local `y`, field `a`] at line 56
     #
 82: $t54 := 0
     # abort state: {returns,aborts}
     # live vars: $t47, $t52, $t54
     # refs: [$t47 => #47, $t52 => #52]
     # #47
     #   <no edges>
     # #52
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   => #52 via [local `y`, field `a`] at line 56
     #
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
     # abort state: {returns,aborts}
     # live vars: $t47, $t51
     # refs: [$t47 => #47, $t51 => #51]
     # #47
     #   <no edges>
     # #51
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   -> #51 via [local `y`, field `a`] at line 56
     #
 84: $t46 := ==($t47, $t51)
     # abort state: {returns,aborts}
     # live vars: $t46
     # refs: []
     #
 85: if ($t46) goto 86 else goto 88
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 86: label L15
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 87: goto 91
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 88: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 89: $t55 := 0
     # abort state: {aborts}
     # live vars: $t55
     # refs: []
     #
 90: abort($t55)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 91: label L17
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t2 := 1
     # abort state: {returns,aborts}
     # live vars: $t2
     # refs: []
     #
  1: $t3 := 2
     # abort state: {returns,aborts}
     # live vars: $t2, $t3
     # refs: []
     #
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # abort state: {returns,aborts}
     # live vars: $t1
     # refs: []
     #
  3: $t5 := 1
     # abort state: {returns,aborts}
     # live vars: $t1, $t5
     # refs: []
     #
  4: $t6 := 2
     # abort state: {returns,aborts}
     # live vars: $t1, $t5, $t6
     # refs: []
     #
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
     # abort state: {returns,aborts}
     # live vars: $t1, $t4
     # refs: []
     #
  6: $t8 := 1
     # abort state: {returns,aborts}
     # live vars: $t1, $t4, $t8
     # refs: []
     #
  7: $t9 := 2
     # abort state: {returns,aborts}
     # live vars: $t1, $t4, $t8, $t9
     # refs: []
     #
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # abort state: {returns,aborts}
     # live vars: $t1, $t4, $t7
     # refs: []
     #
  9: $t0 := vector($t1, $t4, $t7)
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
 10: $t12 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t12
     # refs: []
     #
 11: $t13 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t13
     # refs: []
     #
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 13: $t15 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t15
     # refs: []
     #
 14: $t16 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t15, $t16
     # refs: []
     #
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t14
     # refs: []
     #
 16: $t18 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t14, $t18
     # refs: []
     #
 17: $t19 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t14, $t18, $t19
     # refs: []
     #
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t14, $t17
     # refs: []
     #
 19: $t10 := vector($t11, $t14, $t17)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 20: $t21 := infer($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t21
     # refs: []
     #
 21: $t20 := ==($t21, $t10)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t20
     # refs: []
     #
 22: if ($t20) goto 23 else goto 25
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 23: label L0
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 24: goto 28
     # abort state: {aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 25: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 26: $t22 := 0
     # abort state: {aborts}
     # live vars: $t22
     # refs: []
     #
 27: abort($t22)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 28: label L2
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 29: $t24 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t24
     # refs: [$t24 => #24]
     # #24
     #   <no edges>
     # #root
     #   => #24 via [local `x`] at line 65
     #
 30: $t25 := borrow_local($t10)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t24, $t25
     # refs: [$t24 => #24, $t25 => #25]
     # #24
     #   <no edges>
     # #25
     #   <no edges>
     # #root
     #   => #24 via [local `x`] at line 65
     #   => #25 via [local `y`] at line 65
     #
 31: $t23 := ==($t24, $t25)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t23
     # refs: []
     #
 32: if ($t23) goto 33 else goto 35
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 33: label L3
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 34: goto 38
     # abort state: {aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 35: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 36: $t26 := 0
     # abort state: {aborts}
     # live vars: $t26
     # refs: []
     #
 37: abort($t26)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 38: label L5
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 39: $t30 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 67
     #
 40: $t31 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t30, $t31
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 67
     #
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   -> #29 via [local `x`] at line 67
     #
 42: $t28 := read_ref($t29)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t28
     # refs: []
     #
 43: $t34 := borrow_local($t10)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t28, $t34
     # refs: [$t34 => #34]
     # #34
     #   <no edges>
     # #root
     #   => #34 via [local `y`] at line 67
     #
 44: $t35 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t28, $t34, $t35
     # refs: [$t34 => #34]
     # #34
     #   <no edges>
     # #root
     #   => #34 via [local `y`] at line 67
     #
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t28, $t33
     # refs: [$t33 => #33]
     # #33
     #   <no edges>
     # #root
     #   -> #33 via [local `y`] at line 67
     #
 46: $t32 := read_ref($t33)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t28, $t32
     # refs: []
     #
 47: $t27 := ==($t28, $t32)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t27
     # refs: []
     #
 48: if ($t27) goto 49 else goto 51
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 49: label L6
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 50: goto 54
     # abort state: {aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 51: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 52: $t36 := 0
     # abort state: {aborts}
     # live vars: $t36
     # refs: []
     #
 53: abort($t36)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 54: label L8
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 55: $t39 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t39
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `x`] at line 68
     #
 56: $t40 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t39, $t40
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `x`] at line 68
     #
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t38
     # refs: [$t38 => #38]
     # #38
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #
 58: $t42 := borrow_local($t10)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t38, $t42
     # refs: [$t38 => #38, $t42 => #42]
     # #38
     #   <no edges>
     # #42
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #   => #42 via [local `y`] at line 68
     #
 59: $t43 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t38, $t42, $t43
     # refs: [$t38 => #38, $t42 => #42]
     # #38
     #   <no edges>
     # #42
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #   => #42 via [local `y`] at line 68
     #
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t38, $t41
     # refs: [$t38 => #38, $t41 => #41]
     # #38
     #   <no edges>
     # #41
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #   -> #41 via [local `y`] at line 68
     #
 61: $t37 := ==($t38, $t41)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t37
     # refs: []
     #
 62: if ($t37) goto 63 else goto 65
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 63: label L9
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 64: goto 68
     # abort state: {aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 65: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 66: $t44 := 0
     # abort state: {aborts}
     # live vars: $t44
     # refs: []
     #
 67: abort($t44)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 68: label L11
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 69: $t48 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t48
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`] at line 70
     #
 70: $t49 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t48, $t49
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`] at line 70
     #
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t47
     # refs: [$t47 => #47]
     # #47
     #   <no edges>
     # #root
     #   -> #47 via [local `x`] at line 70
     #
 72: $t46 := read_ref($t47)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t46
     # refs: []
     #
 73: $t52 := borrow_local($t10)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t46, $t52
     # refs: [$t52 => #52]
     # #52
     #   <no edges>
     # #root
     #   => #52 via [local `y`] at line 70
     #
 74: $t53 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t46, $t52, $t53
     # refs: [$t52 => #52]
     # #52
     #   <no edges>
     # #root
     #   => #52 via [local `y`] at line 70
     #
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t46, $t51
     # refs: [$t51 => #51]
     # #51
     #   <no edges>
     # #root
     #   -> #51 via [local `y`] at line 70
     #
 76: $t50 := read_ref($t51)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t46, $t50
     # refs: []
     #
 77: $t45 := ==($t46, $t50)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t45
     # refs: []
     #
 78: if ($t45) goto 79 else goto 81
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 79: label L12
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 80: goto 84
     # abort state: {aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 81: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 82: $t54 := 0
     # abort state: {aborts}
     # live vars: $t54
     # refs: []
     #
 83: abort($t54)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 84: label L14
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 85: $t57 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t10, $t57
     # refs: [$t57 => #57]
     # #57
     #   <no edges>
     # #root
     #   => #57 via [local `x`] at line 71
     #
 86: $t58 := 1
     # abort state: {returns,aborts}
     # live vars: $t10, $t57, $t58
     # refs: [$t57 => #57]
     # #57
     #   <no edges>
     # #root
     #   => #57 via [local `x`] at line 71
     #
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
     # abort state: {returns,aborts}
     # live vars: $t10, $t56
     # refs: [$t56 => #56]
     # #56
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #
 88: $t60 := borrow_local($t10)
     # abort state: {returns,aborts}
     # live vars: $t56, $t60
     # refs: [$t56 => #56, $t60 => #60]
     # #56
     #   <no edges>
     # #60
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #   => #60 via [local `y`] at line 71
     #
 89: $t61 := 1
     # abort state: {returns,aborts}
     # live vars: $t56, $t60, $t61
     # refs: [$t56 => #56, $t60 => #60]
     # #56
     #   <no edges>
     # #60
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #   => #60 via [local `y`] at line 71
     #
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
     # abort state: {returns,aborts}
     # live vars: $t56, $t59
     # refs: [$t56 => #56, $t59 => #59]
     # #56
     #   <no edges>
     # #59
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #   -> #59 via [local `y`] at line 71
     #
 91: $t55 := ==($t56, $t59)
     # abort state: {returns,aborts}
     # live vars: $t55
     # refs: []
     #
 92: if ($t55) goto 93 else goto 95
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 93: label L15
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 94: goto 98
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 95: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 96: $t62 := 0
     # abort state: {aborts}
     # live vars: $t62
     # refs: []
     #
 97: abort($t62)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 98: label L17
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: vector<0xc0ffee::m::Test2>
     var $t12: 0xc0ffee::m::Test2
     var $t13: vector<u64>
     var $t14: u64
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test2
     var $t18: vector<u64>
     var $t19: u64
     var $t20: u64
     var $t21: u64
     var $t22: 0xc0ffee::m::Test2
     var $t23: vector<u64>
     var $t24: u64
     var $t25: u64
     var $t26: u64
     var $t27: bool
     var $t28: vector<0xc0ffee::m::Test2>
     var $t29: u64
     var $t30: bool
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: &vector<0xc0ffee::m::Test2>
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test2
     var $t36: &0xc0ffee::m::Test2
     var $t37: &vector<0xc0ffee::m::Test2>
     var $t38: u64
     var $t39: 0xc0ffee::m::Test2
     var $t40: &0xc0ffee::m::Test2
     var $t41: &vector<0xc0ffee::m::Test2>
     var $t42: u64
     var $t43: u64
     var $t44: bool
     var $t45: &0xc0ffee::m::Test2
     var $t46: &vector<0xc0ffee::m::Test2>
     var $t47: u64
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: u64
     var $t52: bool
     var $t53: 0xc0ffee::m::Test2
     var $t54: &0xc0ffee::m::Test2
     var $t55: &vector<0xc0ffee::m::Test2>
     var $t56: u64
     var $t57: 0xc0ffee::m::Test2
     var $t58: &0xc0ffee::m::Test2
     var $t59: &vector<0xc0ffee::m::Test2>
     var $t60: u64
     var $t61: u64
     var $t62: bool
     var $t63: &0xc0ffee::m::Test2
     var $t64: &vector<0xc0ffee::m::Test2>
     var $t65: u64
     var $t66: &0xc0ffee::m::Test2
     var $t67: &vector<0xc0ffee::m::Test2>
     var $t68: u64
     var $t69: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t3 := 1
     # abort state: {returns,aborts}
     # live vars: $t3
     # refs: []
     #
  1: $t4 := 2
     # abort state: {returns,aborts}
     # live vars: $t3, $t4
     # refs: []
     #
  2: $t5 := 3
     # abort state: {returns,aborts}
     # live vars: $t3, $t4, $t5
     # refs: []
     #
  3: $t2 := vector($t3, $t4, $t5)
     # abort state: {returns,aborts}
     # live vars: $t2
     # refs: []
     #
  4: $t1 := pack 0xc0ffee::m::Test2($t2)
     # abort state: {returns,aborts}
     # live vars: $t1
     # refs: []
     #
  5: $t8 := 1
     # abort state: {returns,aborts}
     # live vars: $t1, $t8
     # refs: []
     #
  6: $t9 := 2
     # abort state: {returns,aborts}
     # live vars: $t1, $t8, $t9
     # refs: []
     #
  7: $t10 := 3
     # abort state: {returns,aborts}
     # live vars: $t1, $t8, $t9, $t10
     # refs: []
     #
  8: $t7 := vector($t8, $t9, $t10)
     # abort state: {returns,aborts}
     # live vars: $t1, $t7
     # refs: []
     #
  9: $t6 := pack 0xc0ffee::m::Test2($t7)
     # abort state: {returns,aborts}
     # live vars: $t1, $t6
     # refs: []
     #
 10: $t0 := vector($t1, $t6)
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
 11: $t14 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t14
     # refs: []
     #
 12: $t15 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t14, $t15
     # refs: []
     #
 13: $t16 := 3
     # abort state: {returns,aborts}
     # live vars: $t0, $t14, $t15, $t16
     # refs: []
     #
 14: $t13 := vector($t14, $t15, $t16)
     # abort state: {returns,aborts}
     # live vars: $t0, $t13
     # refs: []
     #
 15: $t12 := pack 0xc0ffee::m::Test2($t13)
     # abort state: {returns,aborts}
     # live vars: $t0, $t12
     # refs: []
     #
 16: $t19 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t19
     # refs: []
     #
 17: $t20 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t19, $t20
     # refs: []
     #
 18: $t21 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t19, $t20, $t21
     # refs: []
     #
 19: $t18 := vector($t19, $t20, $t21)
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t18
     # refs: []
     #
 20: $t17 := pack 0xc0ffee::m::Test2($t18)
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t17
     # refs: []
     #
 21: $t24 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t17, $t24
     # refs: []
     #
 22: $t25 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t17, $t24, $t25
     # refs: []
     #
 23: $t26 := 3
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t17, $t24, $t25, $t26
     # refs: []
     #
 24: $t23 := vector($t24, $t25, $t26)
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t17, $t23
     # refs: []
     #
 25: $t22 := pack 0xc0ffee::m::Test2($t23)
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t17, $t22
     # refs: []
     #
 26: $t11 := vector($t12, $t17, $t22)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 27: $t28 := infer($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t28
     # refs: []
     #
 28: $t27 := !=($t28, $t11)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t27
     # refs: []
     #
 29: if ($t27) goto 30 else goto 32
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 30: label L0
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 31: goto 35
     # abort state: {aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 32: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 33: $t29 := 0
     # abort state: {aborts}
     # live vars: $t29
     # refs: []
     #
 34: abort($t29)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 35: label L2
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 36: $t31 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t31
     # refs: [$t31 => #31]
     # #31
     #   <no edges>
     # #root
     #   => #31 via [local `x`] at line 80
     #
 37: $t32 := borrow_local($t11)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t31, $t32
     # refs: [$t31 => #31, $t32 => #32]
     # #31
     #   <no edges>
     # #32
     #   <no edges>
     # #root
     #   => #31 via [local `x`] at line 80
     #   => #32 via [local `y`] at line 80
     #
 38: $t30 := !=($t31, $t32)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t30
     # refs: []
     #
 39: if ($t30) goto 40 else goto 42
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 40: label L3
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 41: goto 45
     # abort state: {aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 42: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 43: $t33 := 0
     # abort state: {aborts}
     # live vars: $t33
     # refs: []
     #
 44: abort($t33)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 45: label L5
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 46: $t37 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t37
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`] at line 82
     #
 47: $t38 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t37, $t38
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`] at line 82
     #
 48: $t36 := vector::borrow<0xc0ffee::m::Test2>($t37, $t38)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t36
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   -> #36 via [local `x`] at line 82
     #
 49: $t35 := read_ref($t36)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t35
     # refs: []
     #
 50: $t41 := borrow_local($t11)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t35, $t41
     # refs: [$t41 => #41]
     # #41
     #   <no edges>
     # #root
     #   => #41 via [local `y`] at line 82
     #
 51: $t42 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t35, $t41, $t42
     # refs: [$t41 => #41]
     # #41
     #   <no edges>
     # #root
     #   => #41 via [local `y`] at line 82
     #
 52: $t40 := vector::borrow<0xc0ffee::m::Test2>($t41, $t42)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t35, $t40
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   -> #40 via [local `y`] at line 82
     #
 53: $t39 := read_ref($t40)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t35, $t39
     # refs: []
     #
 54: $t34 := ==($t35, $t39)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t34
     # refs: []
     #
 55: if ($t34) goto 56 else goto 58
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 56: label L6
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 57: goto 61
     # abort state: {aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 58: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 59: $t43 := 0
     # abort state: {aborts}
     # live vars: $t43
     # refs: []
     #
 60: abort($t43)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 61: label L8
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 62: $t46 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t46
     # refs: [$t46 => #46]
     # #46
     #   <no edges>
     # #root
     #   => #46 via [local `x`] at line 83
     #
 63: $t47 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t46, $t47
     # refs: [$t46 => #46]
     # #46
     #   <no edges>
     # #root
     #   => #46 via [local `x`] at line 83
     #
 64: $t45 := vector::borrow<0xc0ffee::m::Test2>($t46, $t47)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t45
     # refs: [$t45 => #45]
     # #45
     #   <no edges>
     # #root
     #   -> #45 via [local `x`] at line 83
     #
 65: $t49 := borrow_local($t11)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t45, $t49
     # refs: [$t45 => #45, $t49 => #49]
     # #45
     #   <no edges>
     # #49
     #   <no edges>
     # #root
     #   -> #45 via [local `x`] at line 83
     #   => #49 via [local `y`] at line 83
     #
 66: $t50 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t45, $t49, $t50
     # refs: [$t45 => #45, $t49 => #49]
     # #45
     #   <no edges>
     # #49
     #   <no edges>
     # #root
     #   -> #45 via [local `x`] at line 83
     #   => #49 via [local `y`] at line 83
     #
 67: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t45, $t48
     # refs: [$t45 => #45, $t48 => #48]
     # #45
     #   <no edges>
     # #48
     #   <no edges>
     # #root
     #   -> #45 via [local `x`] at line 83
     #   -> #48 via [local `y`] at line 83
     #
 68: $t44 := ==($t45, $t48)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t44
     # refs: []
     #
 69: if ($t44) goto 70 else goto 72
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 70: label L9
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 71: goto 75
     # abort state: {aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 72: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 73: $t51 := 0
     # abort state: {aborts}
     # live vars: $t51
     # refs: []
     #
 74: abort($t51)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 75: label L11
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 76: $t55 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t55
     # refs: [$t55 => #55]
     # #55
     #   <no edges>
     # #root
     #   => #55 via [local `x`] at line 85
     #
 77: $t56 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t55, $t56
     # refs: [$t55 => #55]
     # #55
     #   <no edges>
     # #root
     #   => #55 via [local `x`] at line 85
     #
 78: $t54 := vector::borrow<0xc0ffee::m::Test2>($t55, $t56)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t54
     # refs: [$t54 => #54]
     # #54
     #   <no edges>
     # #root
     #   -> #54 via [local `x`] at line 85
     #
 79: $t53 := read_ref($t54)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t53
     # refs: []
     #
 80: $t59 := borrow_local($t11)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t53, $t59
     # refs: [$t59 => #59]
     # #59
     #   <no edges>
     # #root
     #   => #59 via [local `y`] at line 85
     #
 81: $t60 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t53, $t59, $t60
     # refs: [$t59 => #59]
     # #59
     #   <no edges>
     # #root
     #   => #59 via [local `y`] at line 85
     #
 82: $t58 := vector::borrow<0xc0ffee::m::Test2>($t59, $t60)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t53, $t58
     # refs: [$t58 => #58]
     # #58
     #   <no edges>
     # #root
     #   -> #58 via [local `y`] at line 85
     #
 83: $t57 := read_ref($t58)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t53, $t57
     # refs: []
     #
 84: $t52 := !=($t53, $t57)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t52
     # refs: []
     #
 85: if ($t52) goto 86 else goto 88
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 86: label L12
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 87: goto 91
     # abort state: {aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 88: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 89: $t61 := 0
     # abort state: {aborts}
     # live vars: $t61
     # refs: []
     #
 90: abort($t61)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 91: label L14
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 92: $t64 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t11, $t64
     # refs: [$t64 => #64]
     # #64
     #   <no edges>
     # #root
     #   => #64 via [local `x`] at line 86
     #
 93: $t65 := 1
     # abort state: {returns,aborts}
     # live vars: $t11, $t64, $t65
     # refs: [$t64 => #64]
     # #64
     #   <no edges>
     # #root
     #   => #64 via [local `x`] at line 86
     #
 94: $t63 := vector::borrow<0xc0ffee::m::Test2>($t64, $t65)
     # abort state: {returns,aborts}
     # live vars: $t11, $t63
     # refs: [$t63 => #63]
     # #63
     #   <no edges>
     # #root
     #   -> #63 via [local `x`] at line 86
     #
 95: $t67 := borrow_local($t11)
     # abort state: {returns,aborts}
     # live vars: $t63, $t67
     # refs: [$t63 => #63, $t67 => #67]
     # #63
     #   <no edges>
     # #67
     #   <no edges>
     # #root
     #   -> #63 via [local `x`] at line 86
     #   => #67 via [local `y`] at line 86
     #
 96: $t68 := 1
     # abort state: {returns,aborts}
     # live vars: $t63, $t67, $t68
     # refs: [$t63 => #63, $t67 => #67]
     # #63
     #   <no edges>
     # #67
     #   <no edges>
     # #root
     #   -> #63 via [local `x`] at line 86
     #   => #67 via [local `y`] at line 86
     #
 97: $t66 := vector::borrow<0xc0ffee::m::Test2>($t67, $t68)
     # abort state: {returns,aborts}
     # live vars: $t63, $t66
     # refs: [$t63 => #63, $t66 => #66]
     # #63
     #   <no edges>
     # #66
     #   <no edges>
     # #root
     #   -> #63 via [local `x`] at line 86
     #   -> #66 via [local `y`] at line 86
     #
 98: $t62 := !=($t63, $t66)
     # abort state: {returns,aborts}
     # live vars: $t62
     # refs: []
     #
 99: if ($t62) goto 100 else goto 102
     # abort state: {returns}
     # live vars:
     # refs: []
     #
100: label L15
     # abort state: {returns}
     # live vars:
     # refs: []
     #
101: goto 105
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
102: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
103: $t69 := 0
     # abort state: {aborts}
     # live vars: $t69
     # refs: []
     #
104: abort($t69)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
105: label L17
     # abort state: {returns}
     # live vars:
     # refs: []
     #
106: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t4 := 1
     # abort state: {returns,aborts}
     # live vars: $t4
     # refs: []
     #
  1: $t5 := 2
     # abort state: {returns,aborts}
     # live vars: $t4, $t5
     # refs: []
     #
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # abort state: {returns,aborts}
     # live vars: $t3
     # refs: []
     #
  3: $t7 := 1
     # abort state: {returns,aborts}
     # live vars: $t3, $t7
     # refs: []
     #
  4: $t8 := 2
     # abort state: {returns,aborts}
     # live vars: $t3, $t7, $t8
     # refs: []
     #
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
     # abort state: {returns,aborts}
     # live vars: $t3, $t6
     # refs: []
     #
  6: $t2 := vector($t3, $t6)
     # abort state: {returns,aborts}
     # live vars: $t2
     # refs: []
     #
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
     # abort state: {returns,aborts}
     # live vars: $t1
     # refs: []
     #
  8: $t0 := vector($t1)
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
  9: $t13 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t13
     # refs: []
     #
 10: $t14 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t13, $t14
     # refs: []
     #
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
     # abort state: {returns,aborts}
     # live vars: $t0, $t12
     # refs: []
     #
 12: $t16 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t16
     # refs: []
     #
 13: $t17 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t16, $t17
     # refs: []
     #
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t15
     # refs: []
     #
 15: $t11 := vector($t12, $t15)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 17: $t21 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t21
     # refs: []
     #
 18: $t22 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t21, $t22
     # refs: []
     #
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t20
     # refs: []
     #
 20: $t24 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t20, $t24
     # refs: []
     #
 21: $t25 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t20, $t24, $t25
     # refs: []
     #
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t20, $t23
     # refs: []
     #
 23: $t19 := vector($t20, $t23)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t19
     # refs: []
     #
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t18
     # refs: []
     #
 25: $t9 := vector($t10, $t18)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 26: $t27 := infer($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t27
     # refs: []
     #
 27: $t26 := !=($t27, $t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t26
     # refs: []
     #
 28: if ($t26) goto 29 else goto 31
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 29: label L0
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 30: goto 34
     # abort state: {aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 31: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 32: $t28 := 0
     # abort state: {aborts}
     # live vars: $t28
     # refs: []
     #
 33: abort($t28)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 34: label L2
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 35: $t30 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 94
     #
 36: $t31 := borrow_local($t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t30, $t31
     # refs: [$t30 => #30, $t31 => #31]
     # #30
     #   <no edges>
     # #31
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 94
     #   => #31 via [local `y`] at line 94
     #
 37: $t29 := !=($t30, $t31)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t29
     # refs: []
     #
 38: if ($t29) goto 39 else goto 41
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 39: label L3
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 40: goto 44
     # abort state: {aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 41: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 42: $t32 := 0
     # abort state: {aborts}
     # live vars: $t32
     # refs: []
     #
 43: abort($t32)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 44: label L5
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 45: $t36 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t36
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   => #36 via [local `x`] at line 96
     #
 46: $t37 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t36, $t37
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   => #36 via [local `x`] at line 96
     #
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t35
     # refs: [$t35 => #35]
     # #35
     #   <no edges>
     # #root
     #   -> #35 via [local `x`] at line 96
     #
 48: $t34 := read_ref($t35)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t34
     # refs: []
     #
 49: $t40 := borrow_local($t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t34, $t40
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `y`] at line 96
     #
 50: $t41 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t34, $t40, $t41
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `y`] at line 96
     #
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t34, $t39
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   -> #39 via [local `y`] at line 96
     #
 52: $t38 := read_ref($t39)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t34, $t38
     # refs: []
     #
 53: $t33 := ==($t34, $t38)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t33
     # refs: []
     #
 54: if ($t33) goto 55 else goto 57
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 55: label L6
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 56: goto 60
     # abort state: {aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 57: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 58: $t42 := 0
     # abort state: {aborts}
     # live vars: $t42
     # refs: []
     #
 59: abort($t42)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 60: label L8
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 61: $t45 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t45
     # refs: [$t45 => #45]
     # #45
     #   <no edges>
     # #root
     #   => #45 via [local `x`] at line 97
     #
 62: $t46 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t45, $t46
     # refs: [$t45 => #45]
     # #45
     #   <no edges>
     # #root
     #   => #45 via [local `x`] at line 97
     #
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t44
     # refs: [$t44 => #44]
     # #44
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #
 64: $t48 := borrow_local($t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t44, $t48
     # refs: [$t44 => #44, $t48 => #48]
     # #44
     #   <no edges>
     # #48
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #   => #48 via [local `y`] at line 97
     #
 65: $t49 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t44, $t48, $t49
     # refs: [$t44 => #44, $t48 => #48]
     # #44
     #   <no edges>
     # #48
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #   => #48 via [local `y`] at line 97
     #
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t44, $t47
     # refs: [$t44 => #44, $t47 => #47]
     # #44
     #   <no edges>
     # #47
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #   -> #47 via [local `y`] at line 97
     #
 67: $t43 := ==($t44, $t47)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t43
     # refs: []
     #
 68: if ($t43) goto 69 else goto 71
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 69: label L9
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 70: goto 74
     # abort state: {aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 71: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 72: $t50 := 0
     # abort state: {aborts}
     # live vars: $t50
     # refs: []
     #
 73: abort($t50)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 74: label L11
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 75: $t54 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t54
     # refs: [$t54 => #54]
     # #54
     #   <no edges>
     # #root
     #   => #54 via [local `x`] at line 99
     #
 76: $t55 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t54, $t55
     # refs: [$t54 => #54]
     # #54
     #   <no edges>
     # #root
     #   => #54 via [local `x`] at line 99
     #
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t53
     # refs: [$t53 => #53]
     # #53
     #   <no edges>
     # #root
     #   -> #53 via [local `x`] at line 99
     #
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t56
     # refs: [$t56 => #56]
     # #56
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 99
     #
 79: $t52 := read_ref($t56)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t52
     # refs: []
     #
 80: $t59 := borrow_local($t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t52, $t59
     # refs: [$t59 => #59]
     # #59
     #   <no edges>
     # #root
     #   => #59 via [local `y`] at line 99
     #
 81: $t60 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t52, $t59, $t60
     # refs: [$t59 => #59]
     # #59
     #   <no edges>
     # #root
     #   => #59 via [local `y`] at line 99
     #
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t52, $t58
     # refs: [$t58 => #58]
     # #58
     #   <no edges>
     # #root
     #   -> #58 via [local `y`] at line 99
     #
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t52, $t61
     # refs: [$t61 => #61]
     # #61
     #   <no edges>
     # #root
     #   -> #61 via [local `y`] at line 99
     #
 84: $t57 := read_ref($t61)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t52, $t57
     # refs: []
     #
 85: $t51 := ==($t52, $t57)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t51
     # refs: []
     #
 86: if ($t51) goto 87 else goto 89
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 87: label L12
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 88: goto 92
     # abort state: {aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 89: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 90: $t62 := 0
     # abort state: {aborts}
     # live vars: $t62
     # refs: []
     #
 91: abort($t62)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 92: label L14
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 93: $t66 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t9, $t66
     # refs: [$t66 => #66]
     # #66
     #   <no edges>
     # #root
     #   => #66 via [local `x`] at line 100
     #
 94: $t67 := 0
     # abort state: {returns,aborts}
     # live vars: $t9, $t66, $t67
     # refs: [$t66 => #66]
     # #66
     #   <no edges>
     # #root
     #   => #66 via [local `x`] at line 100
     #
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
     # abort state: {returns,aborts}
     # live vars: $t9, $t65
     # refs: [$t65 => #65]
     # #65
     #   <no edges>
     # #root
     #   -> #65 via [local `x`] at line 100
     #
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
     # abort state: {returns,aborts}
     # live vars: $t9, $t64
     # refs: [$t64 => #64]
     # #64
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #
 97: $t70 := borrow_local($t9)
     # abort state: {returns,aborts}
     # live vars: $t64, $t70
     # refs: [$t64 => #64, $t70 => #70]
     # #64
     #   <no edges>
     # #70
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   => #70 via [local `y`] at line 100
     #
 98: $t71 := 0
     # abort state: {returns,aborts}
     # live vars: $t64, $t70, $t71
     # refs: [$t64 => #64, $t70 => #70]
     # #64
     #   <no edges>
     # #70
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   => #70 via [local `y`] at line 100
     #
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
     # abort state: {returns,aborts}
     # live vars: $t64, $t69
     # refs: [$t64 => #64, $t69 => #69]
     # #64
     #   <no edges>
     # #69
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   -> #69 via [local `y`] at line 100
     #
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
     # abort state: {returns,aborts}
     # live vars: $t64, $t68
     # refs: [$t64 => #64, $t68 => #68]
     # #64
     #   <no edges>
     # #68
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   -> #68 via [local `y`] at line 100
     #
101: $t63 := ==($t64, $t68)
     # abort state: {returns,aborts}
     # live vars: $t63
     # refs: []
     #
102: if ($t63) goto 103 else goto 105
     # abort state: {returns}
     # live vars:
     # refs: []
     #
103: label L15
     # abort state: {returns}
     # live vars:
     # refs: []
     #
104: goto 108
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
105: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
106: $t72 := 0
     # abort state: {aborts}
     # live vars: $t72
     # refs: []
     #
107: abort($t72)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
108: label L17
     # abort state: {returns}
     # live vars:
     # refs: []
     #
109: return ()
}

============ after AbilityProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
  0: $t1 := 1
  1: $t2 := 2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
  3: $t4 := 1
  4: $t5 := 2
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  6: $t7 := copy($t0)
  7: $t6 := ==($t7, $t3)
  8: if ($t6) goto 9 else goto 11
  9: label L0
 10: goto 14
 11: label L1
 12: $t8 := 0
 13: abort($t8)
 14: label L2
 15: $t10 := borrow_local($t0)
 16: $t11 := borrow_local($t3)
 17: $t9 := ==($t10, $t11)
 18: if ($t9) goto 19 else goto 21
 19: label L3
 20: goto 24
 21: label L4
 22: $t12 := 0
 23: abort($t12)
 24: label L5
 25: $t15 := borrow_local($t0)
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
 27: $t14 := read_ref($t16)
 28: $t18 := borrow_local($t3)
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
 30: $t17 := read_ref($t19)
 31: $t13 := ==($t14, $t17)
 32: if ($t13) goto 33 else goto 35
 33: label L6
 34: goto 38
 35: label L7
 36: $t20 := 0
 37: abort($t20)
 38: label L8
 39: $t23 := borrow_local($t0)
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
 41: $t25 := borrow_local($t3)
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
 43: $t21 := ==($t22, $t24)
 44: if ($t21) goto 45 else goto 47
 45: label L9
 46: goto 50
 47: label L10
 48: $t26 := 0
 49: abort($t26)
 50: label L11
 51: $t29 := borrow_local($t0)
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
 53: $t28 := read_ref($t30)
 54: $t32 := borrow_local($t3)
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
 56: $t31 := read_ref($t33)
 57: $t27 := ==($t28, $t31)
 58: if ($t27) goto 59 else goto 61
 59: label L12
 60: goto 64
 61: label L13
 62: $t34 := 0
 63: abort($t34)
 64: label L14
 65: $t37 := borrow_local($t0)
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
 67: $t39 := borrow_local($t3)
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
 69: $t35 := ==($t36, $t38)
 70: if ($t35) goto 71 else goto 73
 71: label L15
 72: goto 76
 73: label L16
 74: $t40 := 0
 75: abort($t40)
 76: label L17
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test2
     var $t6: vector<u64>
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: bool
     var $t11: 0xc0ffee::m::Test2
     var $t12: u64
     var $t13: bool
     var $t14: &0xc0ffee::m::Test2
     var $t15: &0xc0ffee::m::Test2
     var $t16: u64
     var $t17: bool
     var $t18: vector<u64>
     var $t19: &0xc0ffee::m::Test2
     var $t20: &vector<u64>
     var $t21: vector<u64>
     var $t22: &0xc0ffee::m::Test2
     var $t23: &vector<u64>
     var $t24: u64
     var $t25: bool
     var $t26: &vector<u64>
     var $t27: &0xc0ffee::m::Test2
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: bool
     var $t32: u64
     var $t33: &u64
     var $t34: &vector<u64>
     var $t35: &0xc0ffee::m::Test2
     var $t36: u64
     var $t37: u64
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &u64
     var $t45: &vector<u64>
     var $t46: &0xc0ffee::m::Test2
     var $t47: u64
     var $t48: &u64
     var $t49: &vector<u64>
     var $t50: &0xc0ffee::m::Test2
     var $t51: u64
     var $t52: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t4 := 3
  3: $t1 := vector($t2, $t3, $t4)
  4: $t0 := pack 0xc0ffee::m::Test2($t1)
  5: $t7 := 1
  6: $t8 := 2
  7: $t9 := 3
  8: $t6 := vector($t7, $t8, $t9)
  9: $t5 := pack 0xc0ffee::m::Test2($t6)
 10: $t11 := copy($t0)
 11: $t10 := ==($t11, $t5)
 12: if ($t10) goto 13 else goto 15
 13: label L0
 14: goto 18
 15: label L1
 16: $t12 := 0
 17: abort($t12)
 18: label L2
 19: $t14 := borrow_local($t0)
 20: $t15 := borrow_local($t5)
 21: $t13 := ==($t14, $t15)
 22: if ($t13) goto 23 else goto 25
 23: label L3
 24: goto 28
 25: label L4
 26: $t16 := 0
 27: abort($t16)
 28: label L5
 29: $t19 := borrow_local($t0)
 30: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t19)
 31: $t18 := read_ref($t20)
 32: $t22 := borrow_local($t5)
 33: $t23 := borrow_field<0xc0ffee::m::Test2>.a($t22)
 34: $t21 := read_ref($t23)
 35: $t17 := ==($t18, $t21)
 36: if ($t17) goto 37 else goto 39
 37: label L6
 38: goto 42
 39: label L7
 40: $t24 := 0
 41: abort($t24)
 42: label L8
 43: $t27 := borrow_local($t0)
 44: $t26 := borrow_field<0xc0ffee::m::Test2>.a($t27)
 45: $t29 := borrow_local($t5)
 46: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
 47: $t25 := ==($t26, $t28)
 48: if ($t25) goto 49 else goto 51
 49: label L9
 50: goto 54
 51: label L10
 52: $t30 := 0
 53: abort($t30)
 54: label L11
 55: $t35 := borrow_local($t0)
 56: $t34 := borrow_field<0xc0ffee::m::Test2>.a($t35)
 57: $t36 := 0
 58: $t33 := vector::borrow<u64>($t34, $t36)
 59: $t32 := read_ref($t33)
 60: $t40 := borrow_local($t5)
 61: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
 62: $t41 := 0
 63: $t38 := vector::borrow<u64>($t39, $t41)
 64: $t37 := read_ref($t38)
 65: $t31 := ==($t32, $t37)
 66: if ($t31) goto 67 else goto 69
 67: label L12
 68: goto 72
 69: label L13
 70: $t42 := 0
 71: abort($t42)
 72: label L14
 73: $t46 := borrow_local($t0)
 74: $t45 := borrow_field<0xc0ffee::m::Test2>.a($t46)
 75: $t47 := 0
 76: $t44 := vector::borrow<u64>($t45, $t47)
 77: $t50 := borrow_local($t5)
 78: $t49 := borrow_field<0xc0ffee::m::Test2>.a($t50)
 79: $t51 := 0
 80: $t48 := vector::borrow<u64>($t49, $t51)
 81: $t43 := ==($t44, $t48)
 82: if ($t43) goto 83 else goto 85
 83: label L15
 84: goto 88
 85: label L16
 86: $t52 := 0
 87: abort($t52)
 88: label L17
 89: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  3: $t1 := vector($t2)
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
  5: $t8 := 1
  6: $t9 := 2
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  8: $t11 := 1
  9: $t12 := 2
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
 11: $t6 := vector($t7, $t10)
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
 13: $t14 := copy($t0)
 14: $t13 := !=($t14, $t5)
 15: if ($t13) goto 16 else goto 18
 16: label L0
 17: goto 21
 18: label L1
 19: $t15 := 0
 20: abort($t15)
 21: label L2
 22: $t17 := borrow_local($t0)
 23: $t18 := borrow_local($t5)
 24: $t16 := !=($t17, $t18)
 25: if ($t16) goto 26 else goto 28
 26: label L3
 27: goto 31
 28: label L4
 29: $t19 := 0
 30: abort($t19)
 31: label L5
 32: $t22 := borrow_local($t0)
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
 34: $t21 := read_ref($t23)
 35: $t25 := borrow_local($t5)
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
 37: $t24 := read_ref($t26)
 38: $t20 := !=($t21, $t24)
 39: if ($t20) goto 40 else goto 42
 40: label L6
 41: goto 45
 42: label L7
 43: $t27 := 0
 44: abort($t27)
 45: label L8
 46: $t30 := borrow_local($t0)
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
 48: $t32 := borrow_local($t5)
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
 50: $t28 := !=($t29, $t31)
 51: if ($t28) goto 52 else goto 54
 52: label L9
 53: goto 57
 54: label L10
 55: $t33 := 0
 56: abort($t33)
 57: label L11
 58: $t38 := borrow_local($t0)
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
 60: $t39 := 0
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
 62: $t35 := read_ref($t36)
 63: $t43 := borrow_local($t5)
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
 65: $t44 := 0
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
 67: $t40 := read_ref($t41)
 68: $t34 := ==($t35, $t40)
 69: if ($t34) goto 70 else goto 72
 70: label L12
 71: goto 75
 72: label L13
 73: $t45 := 0
 74: abort($t45)
 75: label L14
 76: $t49 := borrow_local($t0)
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
 78: $t50 := 0
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
 80: $t53 := borrow_local($t5)
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 82: $t54 := 0
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
 84: $t46 := ==($t47, $t51)
 85: if ($t46) goto 86 else goto 88
 86: label L15
 87: goto 91
 88: label L16
 89: $t55 := 0
 90: abort($t55)
 91: label L17
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
  3: $t5 := 1
  4: $t6 := 2
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
  6: $t8 := 1
  7: $t9 := 2
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  9: $t0 := vector($t1, $t4, $t7)
 10: $t12 := 1
 11: $t13 := 2
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
 13: $t15 := 1
 14: $t16 := 2
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
 16: $t18 := 1
 17: $t19 := 2
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
 19: $t10 := vector($t11, $t14, $t17)
 20: $t21 := copy($t0)
 21: $t20 := ==($t21, $t10)
 22: if ($t20) goto 23 else goto 25
 23: label L0
 24: goto 28
 25: label L1
 26: $t22 := 0
 27: abort($t22)
 28: label L2
 29: $t24 := borrow_local($t0)
 30: $t25 := borrow_local($t10)
 31: $t23 := ==($t24, $t25)
 32: if ($t23) goto 33 else goto 35
 33: label L3
 34: goto 38
 35: label L4
 36: $t26 := 0
 37: abort($t26)
 38: label L5
 39: $t30 := borrow_local($t0)
 40: $t31 := 0
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
 42: $t28 := read_ref($t29)
 43: $t34 := borrow_local($t10)
 44: $t35 := 0
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
 46: $t32 := read_ref($t33)
 47: $t27 := ==($t28, $t32)
 48: if ($t27) goto 49 else goto 51
 49: label L6
 50: goto 54
 51: label L7
 52: $t36 := 0
 53: abort($t36)
 54: label L8
 55: $t39 := borrow_local($t0)
 56: $t40 := 0
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
 58: $t42 := borrow_local($t10)
 59: $t43 := 0
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
 61: $t37 := ==($t38, $t41)
 62: if ($t37) goto 63 else goto 65
 63: label L9
 64: goto 68
 65: label L10
 66: $t44 := 0
 67: abort($t44)
 68: label L11
 69: $t48 := borrow_local($t0)
 70: $t49 := 1
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
 72: $t46 := read_ref($t47)
 73: $t52 := borrow_local($t10)
 74: $t53 := 1
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
 76: $t50 := read_ref($t51)
 77: $t45 := ==($t46, $t50)
 78: if ($t45) goto 79 else goto 81
 79: label L12
 80: goto 84
 81: label L13
 82: $t54 := 0
 83: abort($t54)
 84: label L14
 85: $t57 := borrow_local($t0)
 86: $t58 := 1
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
 88: $t60 := borrow_local($t10)
 89: $t61 := 1
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
 91: $t55 := ==($t56, $t59)
 92: if ($t55) goto 93 else goto 95
 93: label L15
 94: goto 98
 95: label L16
 96: $t62 := 0
 97: abort($t62)
 98: label L17
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: vector<0xc0ffee::m::Test2>
     var $t12: 0xc0ffee::m::Test2
     var $t13: vector<u64>
     var $t14: u64
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test2
     var $t18: vector<u64>
     var $t19: u64
     var $t20: u64
     var $t21: u64
     var $t22: 0xc0ffee::m::Test2
     var $t23: vector<u64>
     var $t24: u64
     var $t25: u64
     var $t26: u64
     var $t27: bool
     var $t28: vector<0xc0ffee::m::Test2>
     var $t29: u64
     var $t30: bool
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: &vector<0xc0ffee::m::Test2>
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test2
     var $t36: &0xc0ffee::m::Test2
     var $t37: &vector<0xc0ffee::m::Test2>
     var $t38: u64
     var $t39: 0xc0ffee::m::Test2
     var $t40: &0xc0ffee::m::Test2
     var $t41: &vector<0xc0ffee::m::Test2>
     var $t42: u64
     var $t43: u64
     var $t44: bool
     var $t45: &0xc0ffee::m::Test2
     var $t46: &vector<0xc0ffee::m::Test2>
     var $t47: u64
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: u64
     var $t52: bool
     var $t53: 0xc0ffee::m::Test2
     var $t54: &0xc0ffee::m::Test2
     var $t55: &vector<0xc0ffee::m::Test2>
     var $t56: u64
     var $t57: 0xc0ffee::m::Test2
     var $t58: &0xc0ffee::m::Test2
     var $t59: &vector<0xc0ffee::m::Test2>
     var $t60: u64
     var $t61: u64
     var $t62: bool
     var $t63: &0xc0ffee::m::Test2
     var $t64: &vector<0xc0ffee::m::Test2>
     var $t65: u64
     var $t66: &0xc0ffee::m::Test2
     var $t67: &vector<0xc0ffee::m::Test2>
     var $t68: u64
     var $t69: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t5 := 3
  3: $t2 := vector($t3, $t4, $t5)
  4: $t1 := pack 0xc0ffee::m::Test2($t2)
  5: $t8 := 1
  6: $t9 := 2
  7: $t10 := 3
  8: $t7 := vector($t8, $t9, $t10)
  9: $t6 := pack 0xc0ffee::m::Test2($t7)
 10: $t0 := vector($t1, $t6)
 11: $t14 := 1
 12: $t15 := 2
 13: $t16 := 3
 14: $t13 := vector($t14, $t15, $t16)
 15: $t12 := pack 0xc0ffee::m::Test2($t13)
 16: $t19 := 2
 17: $t20 := 2
 18: $t21 := 2
 19: $t18 := vector($t19, $t20, $t21)
 20: $t17 := pack 0xc0ffee::m::Test2($t18)
 21: $t24 := 1
 22: $t25 := 2
 23: $t26 := 3
 24: $t23 := vector($t24, $t25, $t26)
 25: $t22 := pack 0xc0ffee::m::Test2($t23)
 26: $t11 := vector($t12, $t17, $t22)
 27: $t28 := copy($t0)
 28: $t27 := !=($t28, $t11)
 29: if ($t27) goto 30 else goto 32
 30: label L0
 31: goto 35
 32: label L1
 33: $t29 := 0
 34: abort($t29)
 35: label L2
 36: $t31 := borrow_local($t0)
 37: $t32 := borrow_local($t11)
 38: $t30 := !=($t31, $t32)
 39: if ($t30) goto 40 else goto 42
 40: label L3
 41: goto 45
 42: label L4
 43: $t33 := 0
 44: abort($t33)
 45: label L5
 46: $t37 := borrow_local($t0)
 47: $t38 := 0
 48: $t36 := vector::borrow<0xc0ffee::m::Test2>($t37, $t38)
 49: $t35 := read_ref($t36)
 50: $t41 := borrow_local($t11)
 51: $t42 := 0
 52: $t40 := vector::borrow<0xc0ffee::m::Test2>($t41, $t42)
 53: $t39 := read_ref($t40)
 54: $t34 := ==($t35, $t39)
 55: if ($t34) goto 56 else goto 58
 56: label L6
 57: goto 61
 58: label L7
 59: $t43 := 0
 60: abort($t43)
 61: label L8
 62: $t46 := borrow_local($t0)
 63: $t47 := 0
 64: $t45 := vector::borrow<0xc0ffee::m::Test2>($t46, $t47)
 65: $t49 := borrow_local($t11)
 66: $t50 := 0
 67: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
 68: $t44 := ==($t45, $t48)
 69: if ($t44) goto 70 else goto 72
 70: label L9
 71: goto 75
 72: label L10
 73: $t51 := 0
 74: abort($t51)
 75: label L11
 76: $t55 := borrow_local($t0)
 77: $t56 := 1
 78: $t54 := vector::borrow<0xc0ffee::m::Test2>($t55, $t56)
 79: $t53 := read_ref($t54)
 80: $t59 := borrow_local($t11)
 81: $t60 := 1
 82: $t58 := vector::borrow<0xc0ffee::m::Test2>($t59, $t60)
 83: $t57 := read_ref($t58)
 84: $t52 := !=($t53, $t57)
 85: if ($t52) goto 86 else goto 88
 86: label L12
 87: goto 91
 88: label L13
 89: $t61 := 0
 90: abort($t61)
 91: label L14
 92: $t64 := borrow_local($t0)
 93: $t65 := 1
 94: $t63 := vector::borrow<0xc0ffee::m::Test2>($t64, $t65)
 95: $t67 := borrow_local($t11)
 96: $t68 := 1
 97: $t66 := vector::borrow<0xc0ffee::m::Test2>($t67, $t68)
 98: $t62 := !=($t63, $t66)
 99: if ($t62) goto 100 else goto 102
100: label L15
101: goto 105
102: label L16
103: $t69 := 0
104: abort($t69)
105: label L17
106: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
  0: $t4 := 1
  1: $t5 := 2
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  3: $t7 := 1
  4: $t8 := 2
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
  6: $t2 := vector($t3, $t6)
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
  8: $t0 := vector($t1)
  9: $t13 := 1
 10: $t14 := 2
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
 12: $t16 := 1
 13: $t17 := 2
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
 15: $t11 := vector($t12, $t15)
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
 17: $t21 := 1
 18: $t22 := 2
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
 20: $t24 := 1
 21: $t25 := 2
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
 23: $t19 := vector($t20, $t23)
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
 25: $t9 := vector($t10, $t18)
 26: $t27 := copy($t0)
 27: $t26 := !=($t27, $t9)
 28: if ($t26) goto 29 else goto 31
 29: label L0
 30: goto 34
 31: label L1
 32: $t28 := 0
 33: abort($t28)
 34: label L2
 35: $t30 := borrow_local($t0)
 36: $t31 := borrow_local($t9)
 37: $t29 := !=($t30, $t31)
 38: if ($t29) goto 39 else goto 41
 39: label L3
 40: goto 44
 41: label L4
 42: $t32 := 0
 43: abort($t32)
 44: label L5
 45: $t36 := borrow_local($t0)
 46: $t37 := 0
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
 48: $t34 := read_ref($t35)
 49: $t40 := borrow_local($t9)
 50: $t41 := 0
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
 52: $t38 := read_ref($t39)
 53: $t33 := ==($t34, $t38)
 54: if ($t33) goto 55 else goto 57
 55: label L6
 56: goto 60
 57: label L7
 58: $t42 := 0
 59: abort($t42)
 60: label L8
 61: $t45 := borrow_local($t0)
 62: $t46 := 0
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
 64: $t48 := borrow_local($t9)
 65: $t49 := 0
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
 67: $t43 := ==($t44, $t47)
 68: if ($t43) goto 69 else goto 71
 69: label L9
 70: goto 74
 71: label L10
 72: $t50 := 0
 73: abort($t50)
 74: label L11
 75: $t54 := borrow_local($t0)
 76: $t55 := 0
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 79: $t52 := read_ref($t56)
 80: $t59 := borrow_local($t9)
 81: $t60 := 0
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
 84: $t57 := read_ref($t61)
 85: $t51 := ==($t52, $t57)
 86: if ($t51) goto 87 else goto 89
 87: label L12
 88: goto 92
 89: label L13
 90: $t62 := 0
 91: abort($t62)
 92: label L14
 93: $t66 := borrow_local($t0)
 94: $t67 := 0
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
 97: $t70 := borrow_local($t9)
 98: $t71 := 0
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
101: $t63 := ==($t64, $t68)
102: if ($t63) goto 103 else goto 105
103: label L15
104: goto 108
105: label L16
106: $t72 := 0
107: abort($t72)
108: label L17
109: return ()
}

// -- Model dump before env processor pipeline:
module 0xc0ffee::m {
    struct Test1 {
        a: u64,
        b: u64,
    }
    struct Test2 {
        a: vector<u64>,
    }
    struct Test3 {
        a: vector<Test1>,
    }
    public fun test1() {
        {
          let x: Test1 = pack m::Test1(1, 2);
          {
            let y: Test1 = pack m::Test1(1, 2);
            if Eq<Test1>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.a<Test1>(x), select m::Test1.a<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.a<Test1>(x)), Borrow(Immutable)(select m::Test1.a<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.b<Test1>(x), select m::Test1.b<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.b<Test1>(x)), Borrow(Immutable)(select m::Test1.b<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test2() {
        {
          let x: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
          {
            let y: Test2 = pack m::Test2(Vector<u64>(1, 2, 3));
            if Eq<Test2>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(select m::Test2.a<Test2>(x), select m::Test2.a<Test2>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), Borrow(Immutable)(select m::Test2.a<Test2>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0)), Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0), vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test3() {
        {
          let x: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2)));
          {
            let y: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2)));
            if Neq<Test3>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test3>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(select m::Test3.a<Test3>(x), select m::Test3.a<Test3>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), Borrow(Immutable)(select m::Test3.a<Test3>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0), vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test4() {
        {
          let x: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
          {
            let y: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
            if Eq<vector<Test1>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 0), vector::borrow<Test1>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 1), vector::borrow<Test1>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test5() {
        {
          let x: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(1, 2, 3)));
          {
            let y: vector<Test2> = Vector<Test2>(pack m::Test2(Vector<u64>(1, 2, 3)), pack m::Test2(Vector<u64>(2, 2, 2)), pack m::Test2(Vector<u64>(1, 2, 3)));
            if Neq<vector<Test2>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test2>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 0), vector::borrow<Test2>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 1), vector::borrow<Test2>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test6() {
        {
          let x: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
          {
            let y: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))), pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
            if Neq<vector<Test3>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test3>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(Deref(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0), vector::borrow<Test3>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0))), Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0)))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m


// -- Model dump after env processor simplifier:
module 0xc0ffee::m {
    struct Test1 {
        a: u64,
        b: u64,
    }
    struct Test2 {
        a: vector<u64>,
    }
    struct Test3 {
        a: vector<Test1>,
    }
    public fun test1() {
        {
          let x: Test1 = pack m::Test1(1, 2);
          {
            let y: Test1 = pack m::Test1(1, 2);
            if Eq<Test1>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.a<Test1>(x), select m::Test1.a<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.a<Test1>(x)), Borrow(Immutable)(select m::Test1.a<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(select m::Test1.b<Test1>(x), select m::Test1.b<Test1>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Borrow(Immutable)(select m::Test1.b<Test1>(x)), Borrow(Immutable)(select m::Test1.b<Test1>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test2() {
        {
          let x: Test2 = pack m::Test2([Number(1), Number(2), Number(3)]);
          {
            let y: Test2 = pack m::Test2([Number(1), Number(2), Number(3)]);
            if Eq<Test2>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(select m::Test2.a<Test2>(x), select m::Test2.a<Test2>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<u64>>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), Borrow(Immutable)(select m::Test2.a<Test2>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0)), Deref(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<u64>(vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(x)), 0), vector::borrow<u64>(Borrow(Immutable)(select m::Test2.a<Test2>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test3() {
        {
          let x: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2)));
          {
            let y: Test3 = pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2)));
            if Neq<Test3>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test3>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(select m::Test3.a<Test3>(x), select m::Test3.a<Test3>(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), Borrow(Immutable)(select m::Test3.a<Test3>(y))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(x)), 0), vector::borrow<Test1>(Borrow(Immutable)(select m::Test3.a<Test3>(y)), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test4() {
        {
          let x: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
          {
            let y: vector<Test1> = Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2), pack m::Test1(1, 2));
            if Eq<vector<Test1>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 0), vector::borrow<Test1>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(Deref(vector::borrow<Test1>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test1>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test1>(vector::borrow<Test1>(Borrow(Immutable)(x), 1), vector::borrow<Test1>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test5() {
        {
          let x: vector<Test2> = Vector<Test2>(pack m::Test2([Number(1), Number(2), Number(3)]), pack m::Test2([Number(1), Number(2), Number(3)]));
          {
            let y: vector<Test2> = Vector<Test2>(pack m::Test2([Number(1), Number(2), Number(3)]), pack m::Test2([Number(2), Number(2), Number(2)]), pack m::Test2([Number(1), Number(2), Number(3)]));
            if Neq<vector<Test2>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test2>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 0), vector::borrow<Test2>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(Deref(vector::borrow<Test2>(Borrow(Immutable)(x), 1)), Deref(vector::borrow<Test2>(Borrow(Immutable)(y), 1))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<Test2>(vector::borrow<Test2>(Borrow(Immutable)(x), 1), vector::borrow<Test2>(Borrow(Immutable)(y), 1)) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
    public fun test6() {
        {
          let x: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
          {
            let y: vector<Test3> = Vector<Test3>(pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))), pack m::Test3(Vector<Test1>(pack m::Test1(1, 2), pack m::Test1(1, 2))));
            if Neq<vector<Test3>>(x, y) {
              Tuple()
            } else {
              Abort(0)
            };
            if Neq<vector<Test3>>(Borrow(Immutable)(x), Borrow(Immutable)(y)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(Deref(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), Deref(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0), vector::borrow<Test3>(Borrow(Immutable)(y), 0)) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0)), select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0))) {
              Tuple()
            } else {
              Abort(0)
            };
            if Eq<vector<Test1>>(Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(x), 0))), Borrow(Immutable)(select m::Test3.a<Test3>(vector::borrow<Test3>(Borrow(Immutable)(y), 0)))) {
              Tuple()
            } else {
              Abort(0)
            };
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m


============ bytecode before second stackless bytecode pipeline ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
  0: $t1 := 1
  1: $t2 := 2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
  3: $t4 := 1
  4: $t5 := 2
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  6: $t7 := infer($t0)
  7: $t6 := ==($t7, $t3)
  8: if ($t6) goto 9 else goto 11
  9: label L0
 10: goto 14
 11: label L1
 12: $t8 := 0
 13: abort($t8)
 14: label L2
 15: $t10 := borrow_local($t0)
 16: $t11 := borrow_local($t3)
 17: $t9 := ==($t10, $t11)
 18: if ($t9) goto 19 else goto 21
 19: label L3
 20: goto 24
 21: label L4
 22: $t12 := 0
 23: abort($t12)
 24: label L5
 25: $t15 := borrow_local($t0)
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
 27: $t14 := read_ref($t16)
 28: $t18 := borrow_local($t3)
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
 30: $t17 := read_ref($t19)
 31: $t13 := ==($t14, $t17)
 32: if ($t13) goto 33 else goto 35
 33: label L6
 34: goto 38
 35: label L7
 36: $t20 := 0
 37: abort($t20)
 38: label L8
 39: $t23 := borrow_local($t0)
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
 41: $t25 := borrow_local($t3)
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
 43: $t21 := ==($t22, $t24)
 44: if ($t21) goto 45 else goto 47
 45: label L9
 46: goto 50
 47: label L10
 48: $t26 := 0
 49: abort($t26)
 50: label L11
 51: $t29 := borrow_local($t0)
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
 53: $t28 := read_ref($t30)
 54: $t32 := borrow_local($t3)
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
 56: $t31 := read_ref($t33)
 57: $t27 := ==($t28, $t31)
 58: if ($t27) goto 59 else goto 61
 59: label L12
 60: goto 64
 61: label L13
 62: $t34 := 0
 63: abort($t34)
 64: label L14
 65: $t37 := borrow_local($t0)
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
 67: $t39 := borrow_local($t3)
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
 69: $t35 := ==($t36, $t38)
 70: if ($t35) goto 71 else goto 73
 71: label L15
 72: goto 76
 73: label L16
 74: $t40 := 0
 75: abort($t40)
 76: label L17
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64>
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64
     var $t7: bool
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64
     var $t11: bool
     var $t12: vector<u64>
     var $t13: &0xc0ffee::m::Test2
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: bool
     var $t20: &vector<u64>
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2
     var $t24: u64
     var $t25: bool
     var $t26: u64
     var $t27: &u64
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: u64
     var $t32: &u64
     var $t33: &vector<u64>
     var $t34: &0xc0ffee::m::Test2
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: &u64
     var $t43: &vector<u64>
     var $t44: &0xc0ffee::m::Test2
     var $t45: u64
     var $t46: u64
  0: $t1 := ["1", "2", "3"]
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
  2: $t3 := ["1", "2", "3"]
  3: $t2 := pack 0xc0ffee::m::Test2($t3)
  4: $t5 := infer($t0)
  5: $t4 := ==($t5, $t2)
  6: if ($t4) goto 7 else goto 9
  7: label L0
  8: goto 12
  9: label L1
 10: $t6 := 0
 11: abort($t6)
 12: label L2
 13: $t8 := borrow_local($t0)
 14: $t9 := borrow_local($t2)
 15: $t7 := ==($t8, $t9)
 16: if ($t7) goto 17 else goto 19
 17: label L3
 18: goto 22
 19: label L4
 20: $t10 := 0
 21: abort($t10)
 22: label L5
 23: $t13 := borrow_local($t0)
 24: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t13)
 25: $t12 := read_ref($t14)
 26: $t16 := borrow_local($t2)
 27: $t17 := borrow_field<0xc0ffee::m::Test2>.a($t16)
 28: $t15 := read_ref($t17)
 29: $t11 := ==($t12, $t15)
 30: if ($t11) goto 31 else goto 33
 31: label L6
 32: goto 36
 33: label L7
 34: $t18 := 0
 35: abort($t18)
 36: label L8
 37: $t21 := borrow_local($t0)
 38: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t21)
 39: $t23 := borrow_local($t2)
 40: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t23)
 41: $t19 := ==($t20, $t22)
 42: if ($t19) goto 43 else goto 45
 43: label L9
 44: goto 48
 45: label L10
 46: $t24 := 0
 47: abort($t24)
 48: label L11
 49: $t29 := borrow_local($t0)
 50: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
 51: $t30 := 0
 52: $t27 := vector::borrow<u64>($t28, $t30)
 53: $t26 := read_ref($t27)
 54: $t34 := borrow_local($t2)
 55: $t33 := borrow_field<0xc0ffee::m::Test2>.a($t34)
 56: $t35 := 0
 57: $t32 := vector::borrow<u64>($t33, $t35)
 58: $t31 := read_ref($t32)
 59: $t25 := ==($t26, $t31)
 60: if ($t25) goto 61 else goto 63
 61: label L12
 62: goto 66
 63: label L13
 64: $t36 := 0
 65: abort($t36)
 66: label L14
 67: $t40 := borrow_local($t0)
 68: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
 69: $t41 := 0
 70: $t38 := vector::borrow<u64>($t39, $t41)
 71: $t44 := borrow_local($t2)
 72: $t43 := borrow_field<0xc0ffee::m::Test2>.a($t44)
 73: $t45 := 0
 74: $t42 := vector::borrow<u64>($t43, $t45)
 75: $t37 := ==($t38, $t42)
 76: if ($t37) goto 77 else goto 79
 77: label L15
 78: goto 82
 79: label L16
 80: $t46 := 0
 81: abort($t46)
 82: label L17
 83: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  3: $t1 := vector($t2)
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
  5: $t8 := 1
  6: $t9 := 2
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  8: $t11 := 1
  9: $t12 := 2
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
 11: $t6 := vector($t7, $t10)
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
 13: $t14 := infer($t0)
 14: $t13 := !=($t14, $t5)
 15: if ($t13) goto 16 else goto 18
 16: label L0
 17: goto 21
 18: label L1
 19: $t15 := 0
 20: abort($t15)
 21: label L2
 22: $t17 := borrow_local($t0)
 23: $t18 := borrow_local($t5)
 24: $t16 := !=($t17, $t18)
 25: if ($t16) goto 26 else goto 28
 26: label L3
 27: goto 31
 28: label L4
 29: $t19 := 0
 30: abort($t19)
 31: label L5
 32: $t22 := borrow_local($t0)
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
 34: $t21 := read_ref($t23)
 35: $t25 := borrow_local($t5)
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
 37: $t24 := read_ref($t26)
 38: $t20 := !=($t21, $t24)
 39: if ($t20) goto 40 else goto 42
 40: label L6
 41: goto 45
 42: label L7
 43: $t27 := 0
 44: abort($t27)
 45: label L8
 46: $t30 := borrow_local($t0)
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
 48: $t32 := borrow_local($t5)
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
 50: $t28 := !=($t29, $t31)
 51: if ($t28) goto 52 else goto 54
 52: label L9
 53: goto 57
 54: label L10
 55: $t33 := 0
 56: abort($t33)
 57: label L11
 58: $t38 := borrow_local($t0)
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
 60: $t39 := 0
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
 62: $t35 := read_ref($t36)
 63: $t43 := borrow_local($t5)
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
 65: $t44 := 0
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
 67: $t40 := read_ref($t41)
 68: $t34 := ==($t35, $t40)
 69: if ($t34) goto 70 else goto 72
 70: label L12
 71: goto 75
 72: label L13
 73: $t45 := 0
 74: abort($t45)
 75: label L14
 76: $t49 := borrow_local($t0)
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
 78: $t50 := 0
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
 80: $t53 := borrow_local($t5)
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 82: $t54 := 0
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
 84: $t46 := ==($t47, $t51)
 85: if ($t46) goto 86 else goto 88
 86: label L15
 87: goto 91
 88: label L16
 89: $t55 := 0
 90: abort($t55)
 91: label L17
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
  3: $t5 := 1
  4: $t6 := 2
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
  6: $t8 := 1
  7: $t9 := 2
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  9: $t0 := vector($t1, $t4, $t7)
 10: $t12 := 1
 11: $t13 := 2
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
 13: $t15 := 1
 14: $t16 := 2
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
 16: $t18 := 1
 17: $t19 := 2
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
 19: $t10 := vector($t11, $t14, $t17)
 20: $t21 := infer($t0)
 21: $t20 := ==($t21, $t10)
 22: if ($t20) goto 23 else goto 25
 23: label L0
 24: goto 28
 25: label L1
 26: $t22 := 0
 27: abort($t22)
 28: label L2
 29: $t24 := borrow_local($t0)
 30: $t25 := borrow_local($t10)
 31: $t23 := ==($t24, $t25)
 32: if ($t23) goto 33 else goto 35
 33: label L3
 34: goto 38
 35: label L4
 36: $t26 := 0
 37: abort($t26)
 38: label L5
 39: $t30 := borrow_local($t0)
 40: $t31 := 0
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
 42: $t28 := read_ref($t29)
 43: $t34 := borrow_local($t10)
 44: $t35 := 0
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
 46: $t32 := read_ref($t33)
 47: $t27 := ==($t28, $t32)
 48: if ($t27) goto 49 else goto 51
 49: label L6
 50: goto 54
 51: label L7
 52: $t36 := 0
 53: abort($t36)
 54: label L8
 55: $t39 := borrow_local($t0)
 56: $t40 := 0
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
 58: $t42 := borrow_local($t10)
 59: $t43 := 0
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
 61: $t37 := ==($t38, $t41)
 62: if ($t37) goto 63 else goto 65
 63: label L9
 64: goto 68
 65: label L10
 66: $t44 := 0
 67: abort($t44)
 68: label L11
 69: $t48 := borrow_local($t0)
 70: $t49 := 1
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
 72: $t46 := read_ref($t47)
 73: $t52 := borrow_local($t10)
 74: $t53 := 1
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
 76: $t50 := read_ref($t51)
 77: $t45 := ==($t46, $t50)
 78: if ($t45) goto 79 else goto 81
 79: label L12
 80: goto 84
 81: label L13
 82: $t54 := 0
 83: abort($t54)
 84: label L14
 85: $t57 := borrow_local($t0)
 86: $t58 := 1
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
 88: $t60 := borrow_local($t10)
 89: $t61 := 1
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
 91: $t55 := ==($t56, $t59)
 92: if ($t55) goto 93 else goto 95
 93: label L15
 94: goto 98
 95: label L16
 96: $t62 := 0
 97: abort($t62)
 98: label L17
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64>
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: 0xc0ffee::m::Test2
     var $t9: vector<u64>
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64>
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64
     var $t15: bool
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64
     var $t19: bool
     var $t20: 0xc0ffee::m::Test2
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2>
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2
     var $t25: &0xc0ffee::m::Test2
     var $t26: &vector<0xc0ffee::m::Test2>
     var $t27: u64
     var $t28: u64
     var $t29: bool
     var $t30: &0xc0ffee::m::Test2
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: u64
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: 0xc0ffee::m::Test2
     var $t39: &0xc0ffee::m::Test2
     var $t40: &vector<0xc0ffee::m::Test2>
     var $t41: u64
     var $t42: 0xc0ffee::m::Test2
     var $t43: &0xc0ffee::m::Test2
     var $t44: &vector<0xc0ffee::m::Test2>
     var $t45: u64
     var $t46: u64
     var $t47: bool
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: &0xc0ffee::m::Test2
     var $t52: &vector<0xc0ffee::m::Test2>
     var $t53: u64
     var $t54: u64
  0: $t2 := ["1", "2", "3"]
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
  2: $t4 := ["1", "2", "3"]
  3: $t3 := pack 0xc0ffee::m::Test2($t4)
  4: $t0 := vector($t1, $t3)
  5: $t7 := ["1", "2", "3"]
  6: $t6 := pack 0xc0ffee::m::Test2($t7)
  7: $t9 := ["2", "2", "2"]
  8: $t8 := pack 0xc0ffee::m::Test2($t9)
  9: $t11 := ["1", "2", "3"]
 10: $t10 := pack 0xc0ffee::m::Test2($t11)
 11: $t5 := vector($t6, $t8, $t10)
 12: $t13 := infer($t0)
 13: $t12 := !=($t13, $t5)
 14: if ($t12) goto 15 else goto 17
 15: label L0
 16: goto 20
 17: label L1
 18: $t14 := 0
 19: abort($t14)
 20: label L2
 21: $t16 := borrow_local($t0)
 22: $t17 := borrow_local($t5)
 23: $t15 := !=($t16, $t17)
 24: if ($t15) goto 25 else goto 27
 25: label L3
 26: goto 30
 27: label L4
 28: $t18 := 0
 29: abort($t18)
 30: label L5
 31: $t22 := borrow_local($t0)
 32: $t23 := 0
 33: $t21 := vector::borrow<0xc0ffee::m::Test2>($t22, $t23)
 34: $t20 := read_ref($t21)
 35: $t26 := borrow_local($t5)
 36: $t27 := 0
 37: $t25 := vector::borrow<0xc0ffee::m::Test2>($t26, $t27)
 38: $t24 := read_ref($t25)
 39: $t19 := ==($t20, $t24)
 40: if ($t19) goto 41 else goto 43
 41: label L6
 42: goto 46
 43: label L7
 44: $t28 := 0
 45: abort($t28)
 46: label L8
 47: $t31 := borrow_local($t0)
 48: $t32 := 0
 49: $t30 := vector::borrow<0xc0ffee::m::Test2>($t31, $t32)
 50: $t34 := borrow_local($t5)
 51: $t35 := 0
 52: $t33 := vector::borrow<0xc0ffee::m::Test2>($t34, $t35)
 53: $t29 := ==($t30, $t33)
 54: if ($t29) goto 55 else goto 57
 55: label L9
 56: goto 60
 57: label L10
 58: $t36 := 0
 59: abort($t36)
 60: label L11
 61: $t40 := borrow_local($t0)
 62: $t41 := 1
 63: $t39 := vector::borrow<0xc0ffee::m::Test2>($t40, $t41)
 64: $t38 := read_ref($t39)
 65: $t44 := borrow_local($t5)
 66: $t45 := 1
 67: $t43 := vector::borrow<0xc0ffee::m::Test2>($t44, $t45)
 68: $t42 := read_ref($t43)
 69: $t37 := !=($t38, $t42)
 70: if ($t37) goto 71 else goto 73
 71: label L12
 72: goto 76
 73: label L13
 74: $t46 := 0
 75: abort($t46)
 76: label L14
 77: $t49 := borrow_local($t0)
 78: $t50 := 1
 79: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
 80: $t52 := borrow_local($t5)
 81: $t53 := 1
 82: $t51 := vector::borrow<0xc0ffee::m::Test2>($t52, $t53)
 83: $t47 := !=($t48, $t51)
 84: if ($t47) goto 85 else goto 87
 85: label L15
 86: goto 90
 87: label L16
 88: $t54 := 0
 89: abort($t54)
 90: label L17
 91: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
  0: $t4 := 1
  1: $t5 := 2
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  3: $t7 := 1
  4: $t8 := 2
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
  6: $t2 := vector($t3, $t6)
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
  8: $t0 := vector($t1)
  9: $t13 := 1
 10: $t14 := 2
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
 12: $t16 := 1
 13: $t17 := 2
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
 15: $t11 := vector($t12, $t15)
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
 17: $t21 := 1
 18: $t22 := 2
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
 20: $t24 := 1
 21: $t25 := 2
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
 23: $t19 := vector($t20, $t23)
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
 25: $t9 := vector($t10, $t18)
 26: $t27 := infer($t0)
 27: $t26 := !=($t27, $t9)
 28: if ($t26) goto 29 else goto 31
 29: label L0
 30: goto 34
 31: label L1
 32: $t28 := 0
 33: abort($t28)
 34: label L2
 35: $t30 := borrow_local($t0)
 36: $t31 := borrow_local($t9)
 37: $t29 := !=($t30, $t31)
 38: if ($t29) goto 39 else goto 41
 39: label L3
 40: goto 44
 41: label L4
 42: $t32 := 0
 43: abort($t32)
 44: label L5
 45: $t36 := borrow_local($t0)
 46: $t37 := 0
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
 48: $t34 := read_ref($t35)
 49: $t40 := borrow_local($t9)
 50: $t41 := 0
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
 52: $t38 := read_ref($t39)
 53: $t33 := ==($t34, $t38)
 54: if ($t33) goto 55 else goto 57
 55: label L6
 56: goto 60
 57: label L7
 58: $t42 := 0
 59: abort($t42)
 60: label L8
 61: $t45 := borrow_local($t0)
 62: $t46 := 0
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
 64: $t48 := borrow_local($t9)
 65: $t49 := 0
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
 67: $t43 := ==($t44, $t47)
 68: if ($t43) goto 69 else goto 71
 69: label L9
 70: goto 74
 71: label L10
 72: $t50 := 0
 73: abort($t50)
 74: label L11
 75: $t54 := borrow_local($t0)
 76: $t55 := 0
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 79: $t52 := read_ref($t56)
 80: $t59 := borrow_local($t9)
 81: $t60 := 0
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
 84: $t57 := read_ref($t61)
 85: $t51 := ==($t52, $t57)
 86: if ($t51) goto 87 else goto 89
 87: label L12
 88: goto 92
 89: label L13
 90: $t62 := 0
 91: abort($t62)
 92: label L14
 93: $t66 := borrow_local($t0)
 94: $t67 := 0
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
 97: $t70 := borrow_local($t9)
 98: $t71 := 0
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
101: $t63 := ==($t64, $t68)
102: if ($t63) goto 103 else goto 105
103: label L15
104: goto 108
105: label L16
106: $t72 := 0
107: abort($t72)
108: label L17
109: return ()
}

============ after SplitCriticalEdgesProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
  0: $t1 := 1
  1: $t2 := 2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
  3: $t4 := 1
  4: $t5 := 2
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  6: $t7 := infer($t0)
  7: $t6 := ==($t7, $t3)
  8: if ($t6) goto 9 else goto 11
  9: label L0
 10: goto 14
 11: label L1
 12: $t8 := 0
 13: abort($t8)
 14: label L2
 15: $t10 := borrow_local($t0)
 16: $t11 := borrow_local($t3)
 17: $t9 := ==($t10, $t11)
 18: if ($t9) goto 19 else goto 21
 19: label L3
 20: goto 24
 21: label L4
 22: $t12 := 0
 23: abort($t12)
 24: label L5
 25: $t15 := borrow_local($t0)
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
 27: $t14 := read_ref($t16)
 28: $t18 := borrow_local($t3)
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
 30: $t17 := read_ref($t19)
 31: $t13 := ==($t14, $t17)
 32: if ($t13) goto 33 else goto 35
 33: label L6
 34: goto 38
 35: label L7
 36: $t20 := 0
 37: abort($t20)
 38: label L8
 39: $t23 := borrow_local($t0)
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
 41: $t25 := borrow_local($t3)
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
 43: $t21 := ==($t22, $t24)
 44: if ($t21) goto 45 else goto 47
 45: label L9
 46: goto 50
 47: label L10
 48: $t26 := 0
 49: abort($t26)
 50: label L11
 51: $t29 := borrow_local($t0)
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
 53: $t28 := read_ref($t30)
 54: $t32 := borrow_local($t3)
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
 56: $t31 := read_ref($t33)
 57: $t27 := ==($t28, $t31)
 58: if ($t27) goto 59 else goto 61
 59: label L12
 60: goto 64
 61: label L13
 62: $t34 := 0
 63: abort($t34)
 64: label L14
 65: $t37 := borrow_local($t0)
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
 67: $t39 := borrow_local($t3)
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
 69: $t35 := ==($t36, $t38)
 70: if ($t35) goto 71 else goto 73
 71: label L15
 72: goto 76
 73: label L16
 74: $t40 := 0
 75: abort($t40)
 76: label L17
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64>
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64
     var $t7: bool
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64
     var $t11: bool
     var $t12: vector<u64>
     var $t13: &0xc0ffee::m::Test2
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: bool
     var $t20: &vector<u64>
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2
     var $t24: u64
     var $t25: bool
     var $t26: u64
     var $t27: &u64
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: u64
     var $t32: &u64
     var $t33: &vector<u64>
     var $t34: &0xc0ffee::m::Test2
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: &u64
     var $t43: &vector<u64>
     var $t44: &0xc0ffee::m::Test2
     var $t45: u64
     var $t46: u64
  0: $t1 := ["1", "2", "3"]
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
  2: $t3 := ["1", "2", "3"]
  3: $t2 := pack 0xc0ffee::m::Test2($t3)
  4: $t5 := infer($t0)
  5: $t4 := ==($t5, $t2)
  6: if ($t4) goto 7 else goto 9
  7: label L0
  8: goto 12
  9: label L1
 10: $t6 := 0
 11: abort($t6)
 12: label L2
 13: $t8 := borrow_local($t0)
 14: $t9 := borrow_local($t2)
 15: $t7 := ==($t8, $t9)
 16: if ($t7) goto 17 else goto 19
 17: label L3
 18: goto 22
 19: label L4
 20: $t10 := 0
 21: abort($t10)
 22: label L5
 23: $t13 := borrow_local($t0)
 24: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t13)
 25: $t12 := read_ref($t14)
 26: $t16 := borrow_local($t2)
 27: $t17 := borrow_field<0xc0ffee::m::Test2>.a($t16)
 28: $t15 := read_ref($t17)
 29: $t11 := ==($t12, $t15)
 30: if ($t11) goto 31 else goto 33
 31: label L6
 32: goto 36
 33: label L7
 34: $t18 := 0
 35: abort($t18)
 36: label L8
 37: $t21 := borrow_local($t0)
 38: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t21)
 39: $t23 := borrow_local($t2)
 40: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t23)
 41: $t19 := ==($t20, $t22)
 42: if ($t19) goto 43 else goto 45
 43: label L9
 44: goto 48
 45: label L10
 46: $t24 := 0
 47: abort($t24)
 48: label L11
 49: $t29 := borrow_local($t0)
 50: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
 51: $t30 := 0
 52: $t27 := vector::borrow<u64>($t28, $t30)
 53: $t26 := read_ref($t27)
 54: $t34 := borrow_local($t2)
 55: $t33 := borrow_field<0xc0ffee::m::Test2>.a($t34)
 56: $t35 := 0
 57: $t32 := vector::borrow<u64>($t33, $t35)
 58: $t31 := read_ref($t32)
 59: $t25 := ==($t26, $t31)
 60: if ($t25) goto 61 else goto 63
 61: label L12
 62: goto 66
 63: label L13
 64: $t36 := 0
 65: abort($t36)
 66: label L14
 67: $t40 := borrow_local($t0)
 68: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
 69: $t41 := 0
 70: $t38 := vector::borrow<u64>($t39, $t41)
 71: $t44 := borrow_local($t2)
 72: $t43 := borrow_field<0xc0ffee::m::Test2>.a($t44)
 73: $t45 := 0
 74: $t42 := vector::borrow<u64>($t43, $t45)
 75: $t37 := ==($t38, $t42)
 76: if ($t37) goto 77 else goto 79
 77: label L15
 78: goto 82
 79: label L16
 80: $t46 := 0
 81: abort($t46)
 82: label L17
 83: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  3: $t1 := vector($t2)
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
  5: $t8 := 1
  6: $t9 := 2
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  8: $t11 := 1
  9: $t12 := 2
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
 11: $t6 := vector($t7, $t10)
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
 13: $t14 := infer($t0)
 14: $t13 := !=($t14, $t5)
 15: if ($t13) goto 16 else goto 18
 16: label L0
 17: goto 21
 18: label L1
 19: $t15 := 0
 20: abort($t15)
 21: label L2
 22: $t17 := borrow_local($t0)
 23: $t18 := borrow_local($t5)
 24: $t16 := !=($t17, $t18)
 25: if ($t16) goto 26 else goto 28
 26: label L3
 27: goto 31
 28: label L4
 29: $t19 := 0
 30: abort($t19)
 31: label L5
 32: $t22 := borrow_local($t0)
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
 34: $t21 := read_ref($t23)
 35: $t25 := borrow_local($t5)
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
 37: $t24 := read_ref($t26)
 38: $t20 := !=($t21, $t24)
 39: if ($t20) goto 40 else goto 42
 40: label L6
 41: goto 45
 42: label L7
 43: $t27 := 0
 44: abort($t27)
 45: label L8
 46: $t30 := borrow_local($t0)
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
 48: $t32 := borrow_local($t5)
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
 50: $t28 := !=($t29, $t31)
 51: if ($t28) goto 52 else goto 54
 52: label L9
 53: goto 57
 54: label L10
 55: $t33 := 0
 56: abort($t33)
 57: label L11
 58: $t38 := borrow_local($t0)
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
 60: $t39 := 0
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
 62: $t35 := read_ref($t36)
 63: $t43 := borrow_local($t5)
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
 65: $t44 := 0
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
 67: $t40 := read_ref($t41)
 68: $t34 := ==($t35, $t40)
 69: if ($t34) goto 70 else goto 72
 70: label L12
 71: goto 75
 72: label L13
 73: $t45 := 0
 74: abort($t45)
 75: label L14
 76: $t49 := borrow_local($t0)
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
 78: $t50 := 0
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
 80: $t53 := borrow_local($t5)
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 82: $t54 := 0
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
 84: $t46 := ==($t47, $t51)
 85: if ($t46) goto 86 else goto 88
 86: label L15
 87: goto 91
 88: label L16
 89: $t55 := 0
 90: abort($t55)
 91: label L17
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
  3: $t5 := 1
  4: $t6 := 2
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
  6: $t8 := 1
  7: $t9 := 2
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  9: $t0 := vector($t1, $t4, $t7)
 10: $t12 := 1
 11: $t13 := 2
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
 13: $t15 := 1
 14: $t16 := 2
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
 16: $t18 := 1
 17: $t19 := 2
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
 19: $t10 := vector($t11, $t14, $t17)
 20: $t21 := infer($t0)
 21: $t20 := ==($t21, $t10)
 22: if ($t20) goto 23 else goto 25
 23: label L0
 24: goto 28
 25: label L1
 26: $t22 := 0
 27: abort($t22)
 28: label L2
 29: $t24 := borrow_local($t0)
 30: $t25 := borrow_local($t10)
 31: $t23 := ==($t24, $t25)
 32: if ($t23) goto 33 else goto 35
 33: label L3
 34: goto 38
 35: label L4
 36: $t26 := 0
 37: abort($t26)
 38: label L5
 39: $t30 := borrow_local($t0)
 40: $t31 := 0
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
 42: $t28 := read_ref($t29)
 43: $t34 := borrow_local($t10)
 44: $t35 := 0
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
 46: $t32 := read_ref($t33)
 47: $t27 := ==($t28, $t32)
 48: if ($t27) goto 49 else goto 51
 49: label L6
 50: goto 54
 51: label L7
 52: $t36 := 0
 53: abort($t36)
 54: label L8
 55: $t39 := borrow_local($t0)
 56: $t40 := 0
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
 58: $t42 := borrow_local($t10)
 59: $t43 := 0
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
 61: $t37 := ==($t38, $t41)
 62: if ($t37) goto 63 else goto 65
 63: label L9
 64: goto 68
 65: label L10
 66: $t44 := 0
 67: abort($t44)
 68: label L11
 69: $t48 := borrow_local($t0)
 70: $t49 := 1
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
 72: $t46 := read_ref($t47)
 73: $t52 := borrow_local($t10)
 74: $t53 := 1
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
 76: $t50 := read_ref($t51)
 77: $t45 := ==($t46, $t50)
 78: if ($t45) goto 79 else goto 81
 79: label L12
 80: goto 84
 81: label L13
 82: $t54 := 0
 83: abort($t54)
 84: label L14
 85: $t57 := borrow_local($t0)
 86: $t58 := 1
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
 88: $t60 := borrow_local($t10)
 89: $t61 := 1
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
 91: $t55 := ==($t56, $t59)
 92: if ($t55) goto 93 else goto 95
 93: label L15
 94: goto 98
 95: label L16
 96: $t62 := 0
 97: abort($t62)
 98: label L17
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64>
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: 0xc0ffee::m::Test2
     var $t9: vector<u64>
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64>
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64
     var $t15: bool
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64
     var $t19: bool
     var $t20: 0xc0ffee::m::Test2
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2>
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2
     var $t25: &0xc0ffee::m::Test2
     var $t26: &vector<0xc0ffee::m::Test2>
     var $t27: u64
     var $t28: u64
     var $t29: bool
     var $t30: &0xc0ffee::m::Test2
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: u64
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: 0xc0ffee::m::Test2
     var $t39: &0xc0ffee::m::Test2
     var $t40: &vector<0xc0ffee::m::Test2>
     var $t41: u64
     var $t42: 0xc0ffee::m::Test2
     var $t43: &0xc0ffee::m::Test2
     var $t44: &vector<0xc0ffee::m::Test2>
     var $t45: u64
     var $t46: u64
     var $t47: bool
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: &0xc0ffee::m::Test2
     var $t52: &vector<0xc0ffee::m::Test2>
     var $t53: u64
     var $t54: u64
  0: $t2 := ["1", "2", "3"]
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
  2: $t4 := ["1", "2", "3"]
  3: $t3 := pack 0xc0ffee::m::Test2($t4)
  4: $t0 := vector($t1, $t3)
  5: $t7 := ["1", "2", "3"]
  6: $t6 := pack 0xc0ffee::m::Test2($t7)
  7: $t9 := ["2", "2", "2"]
  8: $t8 := pack 0xc0ffee::m::Test2($t9)
  9: $t11 := ["1", "2", "3"]
 10: $t10 := pack 0xc0ffee::m::Test2($t11)
 11: $t5 := vector($t6, $t8, $t10)
 12: $t13 := infer($t0)
 13: $t12 := !=($t13, $t5)
 14: if ($t12) goto 15 else goto 17
 15: label L0
 16: goto 20
 17: label L1
 18: $t14 := 0
 19: abort($t14)
 20: label L2
 21: $t16 := borrow_local($t0)
 22: $t17 := borrow_local($t5)
 23: $t15 := !=($t16, $t17)
 24: if ($t15) goto 25 else goto 27
 25: label L3
 26: goto 30
 27: label L4
 28: $t18 := 0
 29: abort($t18)
 30: label L5
 31: $t22 := borrow_local($t0)
 32: $t23 := 0
 33: $t21 := vector::borrow<0xc0ffee::m::Test2>($t22, $t23)
 34: $t20 := read_ref($t21)
 35: $t26 := borrow_local($t5)
 36: $t27 := 0
 37: $t25 := vector::borrow<0xc0ffee::m::Test2>($t26, $t27)
 38: $t24 := read_ref($t25)
 39: $t19 := ==($t20, $t24)
 40: if ($t19) goto 41 else goto 43
 41: label L6
 42: goto 46
 43: label L7
 44: $t28 := 0
 45: abort($t28)
 46: label L8
 47: $t31 := borrow_local($t0)
 48: $t32 := 0
 49: $t30 := vector::borrow<0xc0ffee::m::Test2>($t31, $t32)
 50: $t34 := borrow_local($t5)
 51: $t35 := 0
 52: $t33 := vector::borrow<0xc0ffee::m::Test2>($t34, $t35)
 53: $t29 := ==($t30, $t33)
 54: if ($t29) goto 55 else goto 57
 55: label L9
 56: goto 60
 57: label L10
 58: $t36 := 0
 59: abort($t36)
 60: label L11
 61: $t40 := borrow_local($t0)
 62: $t41 := 1
 63: $t39 := vector::borrow<0xc0ffee::m::Test2>($t40, $t41)
 64: $t38 := read_ref($t39)
 65: $t44 := borrow_local($t5)
 66: $t45 := 1
 67: $t43 := vector::borrow<0xc0ffee::m::Test2>($t44, $t45)
 68: $t42 := read_ref($t43)
 69: $t37 := !=($t38, $t42)
 70: if ($t37) goto 71 else goto 73
 71: label L12
 72: goto 76
 73: label L13
 74: $t46 := 0
 75: abort($t46)
 76: label L14
 77: $t49 := borrow_local($t0)
 78: $t50 := 1
 79: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
 80: $t52 := borrow_local($t5)
 81: $t53 := 1
 82: $t51 := vector::borrow<0xc0ffee::m::Test2>($t52, $t53)
 83: $t47 := !=($t48, $t51)
 84: if ($t47) goto 85 else goto 87
 85: label L15
 86: goto 90
 87: label L16
 88: $t54 := 0
 89: abort($t54)
 90: label L17
 91: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
  0: $t4 := 1
  1: $t5 := 2
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  3: $t7 := 1
  4: $t8 := 2
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
  6: $t2 := vector($t3, $t6)
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
  8: $t0 := vector($t1)
  9: $t13 := 1
 10: $t14 := 2
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
 12: $t16 := 1
 13: $t17 := 2
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
 15: $t11 := vector($t12, $t15)
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
 17: $t21 := 1
 18: $t22 := 2
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
 20: $t24 := 1
 21: $t25 := 2
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
 23: $t19 := vector($t20, $t23)
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
 25: $t9 := vector($t10, $t18)
 26: $t27 := infer($t0)
 27: $t26 := !=($t27, $t9)
 28: if ($t26) goto 29 else goto 31
 29: label L0
 30: goto 34
 31: label L1
 32: $t28 := 0
 33: abort($t28)
 34: label L2
 35: $t30 := borrow_local($t0)
 36: $t31 := borrow_local($t9)
 37: $t29 := !=($t30, $t31)
 38: if ($t29) goto 39 else goto 41
 39: label L3
 40: goto 44
 41: label L4
 42: $t32 := 0
 43: abort($t32)
 44: label L5
 45: $t36 := borrow_local($t0)
 46: $t37 := 0
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
 48: $t34 := read_ref($t35)
 49: $t40 := borrow_local($t9)
 50: $t41 := 0
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
 52: $t38 := read_ref($t39)
 53: $t33 := ==($t34, $t38)
 54: if ($t33) goto 55 else goto 57
 55: label L6
 56: goto 60
 57: label L7
 58: $t42 := 0
 59: abort($t42)
 60: label L8
 61: $t45 := borrow_local($t0)
 62: $t46 := 0
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
 64: $t48 := borrow_local($t9)
 65: $t49 := 0
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
 67: $t43 := ==($t44, $t47)
 68: if ($t43) goto 69 else goto 71
 69: label L9
 70: goto 74
 71: label L10
 72: $t50 := 0
 73: abort($t50)
 74: label L11
 75: $t54 := borrow_local($t0)
 76: $t55 := 0
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 79: $t52 := read_ref($t56)
 80: $t59 := borrow_local($t9)
 81: $t60 := 0
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
 84: $t57 := read_ref($t61)
 85: $t51 := ==($t52, $t57)
 86: if ($t51) goto 87 else goto 89
 87: label L12
 88: goto 92
 89: label L13
 90: $t62 := 0
 91: abort($t62)
 92: label L14
 93: $t66 := borrow_local($t0)
 94: $t67 := 0
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
 97: $t70 := borrow_local($t9)
 98: $t71 := 0
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
101: $t63 := ==($t64, $t68)
102: if ($t63) goto 103 else goto 105
103: label L15
104: goto 108
105: label L16
106: $t72 := 0
107: abort($t72)
108: label L17
109: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
     # live vars:
  0: $t1 := 1
     # live vars: $t1
  1: $t2 := 2
     # live vars: $t1, $t2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
     # live vars: $t0
  3: $t4 := 1
     # live vars: $t0, $t4
  4: $t5 := 2
     # live vars: $t0, $t4, $t5
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t3
  6: $t7 := infer($t0)
     # live vars: $t0, $t3, $t7
  7: $t6 := ==($t7, $t3)
     # live vars: $t0, $t3, $t6
  8: if ($t6) goto 9 else goto 11
     # live vars: $t0, $t3
  9: label L0
     # live vars: $t0, $t3
 10: goto 14
     # live vars: $t0, $t3
 11: label L1
     # live vars:
 12: $t8 := 0
     # live vars: $t8
 13: abort($t8)
     # live vars: $t0, $t3
 14: label L2
     # live vars: $t0, $t3
 15: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 16: $t11 := borrow_local($t3)
     # live vars: $t0, $t3, $t10, $t11
 17: $t9 := ==($t10, $t11)
     # live vars: $t0, $t3, $t9
 18: if ($t9) goto 19 else goto 21
     # live vars: $t0, $t3
 19: label L3
     # live vars: $t0, $t3
 20: goto 24
     # live vars: $t0, $t3
 21: label L4
     # live vars:
 22: $t12 := 0
     # live vars: $t12
 23: abort($t12)
     # live vars: $t0, $t3
 24: label L5
     # live vars: $t0, $t3
 25: $t15 := borrow_local($t0)
     # live vars: $t0, $t3, $t15
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
     # live vars: $t0, $t3, $t16
 27: $t14 := read_ref($t16)
     # live vars: $t0, $t3, $t14
 28: $t18 := borrow_local($t3)
     # live vars: $t0, $t3, $t14, $t18
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
     # live vars: $t0, $t3, $t14, $t19
 30: $t17 := read_ref($t19)
     # live vars: $t0, $t3, $t14, $t17
 31: $t13 := ==($t14, $t17)
     # live vars: $t0, $t3, $t13
 32: if ($t13) goto 33 else goto 35
     # live vars: $t0, $t3
 33: label L6
     # live vars: $t0, $t3
 34: goto 38
     # live vars: $t0, $t3
 35: label L7
     # live vars:
 36: $t20 := 0
     # live vars: $t20
 37: abort($t20)
     # live vars: $t0, $t3
 38: label L8
     # live vars: $t0, $t3
 39: $t23 := borrow_local($t0)
     # live vars: $t0, $t3, $t23
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
     # live vars: $t0, $t3, $t22
 41: $t25 := borrow_local($t3)
     # live vars: $t0, $t3, $t22, $t25
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
     # live vars: $t0, $t3, $t22, $t24
 43: $t21 := ==($t22, $t24)
     # live vars: $t0, $t3, $t21
 44: if ($t21) goto 45 else goto 47
     # live vars: $t0, $t3
 45: label L9
     # live vars: $t0, $t3
 46: goto 50
     # live vars: $t0, $t3
 47: label L10
     # live vars:
 48: $t26 := 0
     # live vars: $t26
 49: abort($t26)
     # live vars: $t0, $t3
 50: label L11
     # live vars: $t0, $t3
 51: $t29 := borrow_local($t0)
     # live vars: $t0, $t3, $t29
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
     # live vars: $t0, $t3, $t30
 53: $t28 := read_ref($t30)
     # live vars: $t0, $t3, $t28
 54: $t32 := borrow_local($t3)
     # live vars: $t0, $t3, $t28, $t32
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
     # live vars: $t0, $t3, $t28, $t33
 56: $t31 := read_ref($t33)
     # live vars: $t0, $t3, $t28, $t31
 57: $t27 := ==($t28, $t31)
     # live vars: $t0, $t3, $t27
 58: if ($t27) goto 59 else goto 61
     # live vars: $t0, $t3
 59: label L12
     # live vars: $t0, $t3
 60: goto 64
     # live vars: $t0, $t3
 61: label L13
     # live vars:
 62: $t34 := 0
     # live vars: $t34
 63: abort($t34)
     # live vars: $t0, $t3
 64: label L14
     # live vars: $t0, $t3
 65: $t37 := borrow_local($t0)
     # live vars: $t3, $t37
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
     # live vars: $t3, $t36
 67: $t39 := borrow_local($t3)
     # live vars: $t36, $t39
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
     # live vars: $t36, $t38
 69: $t35 := ==($t36, $t38)
     # live vars: $t35
 70: if ($t35) goto 71 else goto 73
     # live vars:
 71: label L15
     # live vars:
 72: goto 76
     # live vars:
 73: label L16
     # live vars:
 74: $t40 := 0
     # live vars: $t40
 75: abort($t40)
     # live vars:
 76: label L17
     # live vars:
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64>
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64
     var $t7: bool
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64
     var $t11: bool
     var $t12: vector<u64>
     var $t13: &0xc0ffee::m::Test2
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: bool
     var $t20: &vector<u64>
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2
     var $t24: u64
     var $t25: bool
     var $t26: u64
     var $t27: &u64
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: u64
     var $t32: &u64
     var $t33: &vector<u64>
     var $t34: &0xc0ffee::m::Test2
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: &u64
     var $t43: &vector<u64>
     var $t44: &0xc0ffee::m::Test2
     var $t45: u64
     var $t46: u64
     # live vars:
  0: $t1 := ["1", "2", "3"]
     # live vars: $t1
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
     # live vars: $t0
  2: $t3 := ["1", "2", "3"]
     # live vars: $t0, $t3
  3: $t2 := pack 0xc0ffee::m::Test2($t3)
     # live vars: $t0, $t2
  4: $t5 := infer($t0)
     # live vars: $t0, $t2, $t5
  5: $t4 := ==($t5, $t2)
     # live vars: $t0, $t2, $t4
  6: if ($t4) goto 7 else goto 9
     # live vars: $t0, $t2
  7: label L0
     # live vars: $t0, $t2
  8: goto 12
     # live vars: $t0, $t2
  9: label L1
     # live vars:
 10: $t6 := 0
     # live vars: $t6
 11: abort($t6)
     # live vars: $t0, $t2
 12: label L2
     # live vars: $t0, $t2
 13: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
 14: $t9 := borrow_local($t2)
     # live vars: $t0, $t2, $t8, $t9
 15: $t7 := ==($t8, $t9)
     # live vars: $t0, $t2, $t7
 16: if ($t7) goto 17 else goto 19
     # live vars: $t0, $t2
 17: label L3
     # live vars: $t0, $t2
 18: goto 22
     # live vars: $t0, $t2
 19: label L4
     # live vars:
 20: $t10 := 0
     # live vars: $t10
 21: abort($t10)
     # live vars: $t0, $t2
 22: label L5
     # live vars: $t0, $t2
 23: $t13 := borrow_local($t0)
     # live vars: $t0, $t2, $t13
 24: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t13)
     # live vars: $t0, $t2, $t14
 25: $t12 := read_ref($t14)
     # live vars: $t0, $t2, $t12
 26: $t16 := borrow_local($t2)
     # live vars: $t0, $t2, $t12, $t16
 27: $t17 := borrow_field<0xc0ffee::m::Test2>.a($t16)
     # live vars: $t0, $t2, $t12, $t17
 28: $t15 := read_ref($t17)
     # live vars: $t0, $t2, $t12, $t15
 29: $t11 := ==($t12, $t15)
     # live vars: $t0, $t2, $t11
 30: if ($t11) goto 31 else goto 33
     # live vars: $t0, $t2
 31: label L6
     # live vars: $t0, $t2
 32: goto 36
     # live vars: $t0, $t2
 33: label L7
     # live vars:
 34: $t18 := 0
     # live vars: $t18
 35: abort($t18)
     # live vars: $t0, $t2
 36: label L8
     # live vars: $t0, $t2
 37: $t21 := borrow_local($t0)
     # live vars: $t0, $t2, $t21
 38: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t21)
     # live vars: $t0, $t2, $t20
 39: $t23 := borrow_local($t2)
     # live vars: $t0, $t2, $t20, $t23
 40: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t23)
     # live vars: $t0, $t2, $t20, $t22
 41: $t19 := ==($t20, $t22)
     # live vars: $t0, $t2, $t19
 42: if ($t19) goto 43 else goto 45
     # live vars: $t0, $t2
 43: label L9
     # live vars: $t0, $t2
 44: goto 48
     # live vars: $t0, $t2
 45: label L10
     # live vars:
 46: $t24 := 0
     # live vars: $t24
 47: abort($t24)
     # live vars: $t0, $t2
 48: label L11
     # live vars: $t0, $t2
 49: $t29 := borrow_local($t0)
     # live vars: $t0, $t2, $t29
 50: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
     # live vars: $t0, $t2, $t28
 51: $t30 := 0
     # live vars: $t0, $t2, $t28, $t30
 52: $t27 := vector::borrow<u64>($t28, $t30)
     # live vars: $t0, $t2, $t27
 53: $t26 := read_ref($t27)
     # live vars: $t0, $t2, $t26
 54: $t34 := borrow_local($t2)
     # live vars: $t0, $t2, $t26, $t34
 55: $t33 := borrow_field<0xc0ffee::m::Test2>.a($t34)
     # live vars: $t0, $t2, $t26, $t33
 56: $t35 := 0
     # live vars: $t0, $t2, $t26, $t33, $t35
 57: $t32 := vector::borrow<u64>($t33, $t35)
     # live vars: $t0, $t2, $t26, $t32
 58: $t31 := read_ref($t32)
     # live vars: $t0, $t2, $t26, $t31
 59: $t25 := ==($t26, $t31)
     # live vars: $t0, $t2, $t25
 60: if ($t25) goto 61 else goto 63
     # live vars: $t0, $t2
 61: label L12
     # live vars: $t0, $t2
 62: goto 66
     # live vars: $t0, $t2
 63: label L13
     # live vars:
 64: $t36 := 0
     # live vars: $t36
 65: abort($t36)
     # live vars: $t0, $t2
 66: label L14
     # live vars: $t0, $t2
 67: $t40 := borrow_local($t0)
     # live vars: $t2, $t40
 68: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
     # live vars: $t2, $t39
 69: $t41 := 0
     # live vars: $t2, $t39, $t41
 70: $t38 := vector::borrow<u64>($t39, $t41)
     # live vars: $t2, $t38
 71: $t44 := borrow_local($t2)
     # live vars: $t38, $t44
 72: $t43 := borrow_field<0xc0ffee::m::Test2>.a($t44)
     # live vars: $t38, $t43
 73: $t45 := 0
     # live vars: $t38, $t43, $t45
 74: $t42 := vector::borrow<u64>($t43, $t45)
     # live vars: $t38, $t42
 75: $t37 := ==($t38, $t42)
     # live vars: $t37
 76: if ($t37) goto 77 else goto 79
     # live vars:
 77: label L15
     # live vars:
 78: goto 82
     # live vars:
 79: label L16
     # live vars:
 80: $t46 := 0
     # live vars: $t46
 81: abort($t46)
     # live vars:
 82: label L17
     # live vars:
 83: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
     # live vars:
  0: $t3 := 1
     # live vars: $t3
  1: $t4 := 2
     # live vars: $t3, $t4
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t2
  3: $t1 := vector($t2)
     # live vars: $t1
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
     # live vars: $t0
  5: $t8 := 1
     # live vars: $t0, $t8
  6: $t9 := 2
     # live vars: $t0, $t8, $t9
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t0, $t7
  8: $t11 := 1
     # live vars: $t0, $t7, $t11
  9: $t12 := 2
     # live vars: $t0, $t7, $t11, $t12
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
     # live vars: $t0, $t7, $t10
 11: $t6 := vector($t7, $t10)
     # live vars: $t0, $t6
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
     # live vars: $t0, $t5
 13: $t14 := infer($t0)
     # live vars: $t0, $t5, $t14
 14: $t13 := !=($t14, $t5)
     # live vars: $t0, $t5, $t13
 15: if ($t13) goto 16 else goto 18
     # live vars: $t0, $t5
 16: label L0
     # live vars: $t0, $t5
 17: goto 21
     # live vars: $t0, $t5
 18: label L1
     # live vars:
 19: $t15 := 0
     # live vars: $t15
 20: abort($t15)
     # live vars: $t0, $t5
 21: label L2
     # live vars: $t0, $t5
 22: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 23: $t18 := borrow_local($t5)
     # live vars: $t0, $t5, $t17, $t18
 24: $t16 := !=($t17, $t18)
     # live vars: $t0, $t5, $t16
 25: if ($t16) goto 26 else goto 28
     # live vars: $t0, $t5
 26: label L3
     # live vars: $t0, $t5
 27: goto 31
     # live vars: $t0, $t5
 28: label L4
     # live vars:
 29: $t19 := 0
     # live vars: $t19
 30: abort($t19)
     # live vars: $t0, $t5
 31: label L5
     # live vars: $t0, $t5
 32: $t22 := borrow_local($t0)
     # live vars: $t0, $t5, $t22
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
     # live vars: $t0, $t5, $t23
 34: $t21 := read_ref($t23)
     # live vars: $t0, $t5, $t21
 35: $t25 := borrow_local($t5)
     # live vars: $t0, $t5, $t21, $t25
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
     # live vars: $t0, $t5, $t21, $t26
 37: $t24 := read_ref($t26)
     # live vars: $t0, $t5, $t21, $t24
 38: $t20 := !=($t21, $t24)
     # live vars: $t0, $t5, $t20
 39: if ($t20) goto 40 else goto 42
     # live vars: $t0, $t5
 40: label L6
     # live vars: $t0, $t5
 41: goto 45
     # live vars: $t0, $t5
 42: label L7
     # live vars:
 43: $t27 := 0
     # live vars: $t27
 44: abort($t27)
     # live vars: $t0, $t5
 45: label L8
     # live vars: $t0, $t5
 46: $t30 := borrow_local($t0)
     # live vars: $t0, $t5, $t30
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
     # live vars: $t0, $t5, $t29
 48: $t32 := borrow_local($t5)
     # live vars: $t0, $t5, $t29, $t32
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
     # live vars: $t0, $t5, $t29, $t31
 50: $t28 := !=($t29, $t31)
     # live vars: $t0, $t5, $t28
 51: if ($t28) goto 52 else goto 54
     # live vars: $t0, $t5
 52: label L9
     # live vars: $t0, $t5
 53: goto 57
     # live vars: $t0, $t5
 54: label L10
     # live vars:
 55: $t33 := 0
     # live vars: $t33
 56: abort($t33)
     # live vars: $t0, $t5
 57: label L11
     # live vars: $t0, $t5
 58: $t38 := borrow_local($t0)
     # live vars: $t0, $t5, $t38
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
     # live vars: $t0, $t5, $t37
 60: $t39 := 0
     # live vars: $t0, $t5, $t37, $t39
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
     # live vars: $t0, $t5, $t36
 62: $t35 := read_ref($t36)
     # live vars: $t0, $t5, $t35
 63: $t43 := borrow_local($t5)
     # live vars: $t0, $t5, $t35, $t43
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
     # live vars: $t0, $t5, $t35, $t42
 65: $t44 := 0
     # live vars: $t0, $t5, $t35, $t42, $t44
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
     # live vars: $t0, $t5, $t35, $t41
 67: $t40 := read_ref($t41)
     # live vars: $t0, $t5, $t35, $t40
 68: $t34 := ==($t35, $t40)
     # live vars: $t0, $t5, $t34
 69: if ($t34) goto 70 else goto 72
     # live vars: $t0, $t5
 70: label L12
     # live vars: $t0, $t5
 71: goto 75
     # live vars: $t0, $t5
 72: label L13
     # live vars:
 73: $t45 := 0
     # live vars: $t45
 74: abort($t45)
     # live vars: $t0, $t5
 75: label L14
     # live vars: $t0, $t5
 76: $t49 := borrow_local($t0)
     # live vars: $t5, $t49
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
     # live vars: $t5, $t48
 78: $t50 := 0
     # live vars: $t5, $t48, $t50
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
     # live vars: $t5, $t47
 80: $t53 := borrow_local($t5)
     # live vars: $t47, $t53
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t47, $t52
 82: $t54 := 0
     # live vars: $t47, $t52, $t54
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
     # live vars: $t47, $t51
 84: $t46 := ==($t47, $t51)
     # live vars: $t46
 85: if ($t46) goto 86 else goto 88
     # live vars:
 86: label L15
     # live vars:
 87: goto 91
     # live vars:
 88: label L16
     # live vars:
 89: $t55 := 0
     # live vars: $t55
 90: abort($t55)
     # live vars:
 91: label L17
     # live vars:
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t3 := 2
     # live vars: $t2, $t3
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1
  3: $t5 := 1
     # live vars: $t1, $t5
  4: $t6 := 2
     # live vars: $t1, $t5, $t6
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
     # live vars: $t1, $t4
  6: $t8 := 1
     # live vars: $t1, $t4, $t8
  7: $t9 := 2
     # live vars: $t1, $t4, $t8, $t9
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t1, $t4, $t7
  9: $t0 := vector($t1, $t4, $t7)
     # live vars: $t0
 10: $t12 := 1
     # live vars: $t0, $t12
 11: $t13 := 2
     # live vars: $t0, $t12, $t13
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
     # live vars: $t0, $t11
 13: $t15 := 1
     # live vars: $t0, $t11, $t15
 14: $t16 := 2
     # live vars: $t0, $t11, $t15, $t16
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
     # live vars: $t0, $t11, $t14
 16: $t18 := 1
     # live vars: $t0, $t11, $t14, $t18
 17: $t19 := 2
     # live vars: $t0, $t11, $t14, $t18, $t19
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
     # live vars: $t0, $t11, $t14, $t17
 19: $t10 := vector($t11, $t14, $t17)
     # live vars: $t0, $t10
 20: $t21 := infer($t0)
     # live vars: $t0, $t10, $t21
 21: $t20 := ==($t21, $t10)
     # live vars: $t0, $t10, $t20
 22: if ($t20) goto 23 else goto 25
     # live vars: $t0, $t10
 23: label L0
     # live vars: $t0, $t10
 24: goto 28
     # live vars: $t0, $t10
 25: label L1
     # live vars:
 26: $t22 := 0
     # live vars: $t22
 27: abort($t22)
     # live vars: $t0, $t10
 28: label L2
     # live vars: $t0, $t10
 29: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 30: $t25 := borrow_local($t10)
     # live vars: $t0, $t10, $t24, $t25
 31: $t23 := ==($t24, $t25)
     # live vars: $t0, $t10, $t23
 32: if ($t23) goto 33 else goto 35
     # live vars: $t0, $t10
 33: label L3
     # live vars: $t0, $t10
 34: goto 38
     # live vars: $t0, $t10
 35: label L4
     # live vars:
 36: $t26 := 0
     # live vars: $t26
 37: abort($t26)
     # live vars: $t0, $t10
 38: label L5
     # live vars: $t0, $t10
 39: $t30 := borrow_local($t0)
     # live vars: $t0, $t10, $t30
 40: $t31 := 0
     # live vars: $t0, $t10, $t30, $t31
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
     # live vars: $t0, $t10, $t29
 42: $t28 := read_ref($t29)
     # live vars: $t0, $t10, $t28
 43: $t34 := borrow_local($t10)
     # live vars: $t0, $t10, $t28, $t34
 44: $t35 := 0
     # live vars: $t0, $t10, $t28, $t34, $t35
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
     # live vars: $t0, $t10, $t28, $t33
 46: $t32 := read_ref($t33)
     # live vars: $t0, $t10, $t28, $t32
 47: $t27 := ==($t28, $t32)
     # live vars: $t0, $t10, $t27
 48: if ($t27) goto 49 else goto 51
     # live vars: $t0, $t10
 49: label L6
     # live vars: $t0, $t10
 50: goto 54
     # live vars: $t0, $t10
 51: label L7
     # live vars:
 52: $t36 := 0
     # live vars: $t36
 53: abort($t36)
     # live vars: $t0, $t10
 54: label L8
     # live vars: $t0, $t10
 55: $t39 := borrow_local($t0)
     # live vars: $t0, $t10, $t39
 56: $t40 := 0
     # live vars: $t0, $t10, $t39, $t40
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
     # live vars: $t0, $t10, $t38
 58: $t42 := borrow_local($t10)
     # live vars: $t0, $t10, $t38, $t42
 59: $t43 := 0
     # live vars: $t0, $t10, $t38, $t42, $t43
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
     # live vars: $t0, $t10, $t38, $t41
 61: $t37 := ==($t38, $t41)
     # live vars: $t0, $t10, $t37
 62: if ($t37) goto 63 else goto 65
     # live vars: $t0, $t10
 63: label L9
     # live vars: $t0, $t10
 64: goto 68
     # live vars: $t0, $t10
 65: label L10
     # live vars:
 66: $t44 := 0
     # live vars: $t44
 67: abort($t44)
     # live vars: $t0, $t10
 68: label L11
     # live vars: $t0, $t10
 69: $t48 := borrow_local($t0)
     # live vars: $t0, $t10, $t48
 70: $t49 := 1
     # live vars: $t0, $t10, $t48, $t49
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
     # live vars: $t0, $t10, $t47
 72: $t46 := read_ref($t47)
     # live vars: $t0, $t10, $t46
 73: $t52 := borrow_local($t10)
     # live vars: $t0, $t10, $t46, $t52
 74: $t53 := 1
     # live vars: $t0, $t10, $t46, $t52, $t53
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
     # live vars: $t0, $t10, $t46, $t51
 76: $t50 := read_ref($t51)
     # live vars: $t0, $t10, $t46, $t50
 77: $t45 := ==($t46, $t50)
     # live vars: $t0, $t10, $t45
 78: if ($t45) goto 79 else goto 81
     # live vars: $t0, $t10
 79: label L12
     # live vars: $t0, $t10
 80: goto 84
     # live vars: $t0, $t10
 81: label L13
     # live vars:
 82: $t54 := 0
     # live vars: $t54
 83: abort($t54)
     # live vars: $t0, $t10
 84: label L14
     # live vars: $t0, $t10
 85: $t57 := borrow_local($t0)
     # live vars: $t10, $t57
 86: $t58 := 1
     # live vars: $t10, $t57, $t58
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
     # live vars: $t10, $t56
 88: $t60 := borrow_local($t10)
     # live vars: $t56, $t60
 89: $t61 := 1
     # live vars: $t56, $t60, $t61
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
     # live vars: $t56, $t59
 91: $t55 := ==($t56, $t59)
     # live vars: $t55
 92: if ($t55) goto 93 else goto 95
     # live vars:
 93: label L15
     # live vars:
 94: goto 98
     # live vars:
 95: label L16
     # live vars:
 96: $t62 := 0
     # live vars: $t62
 97: abort($t62)
     # live vars:
 98: label L17
     # live vars:
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64>
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: 0xc0ffee::m::Test2
     var $t9: vector<u64>
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64>
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64
     var $t15: bool
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64
     var $t19: bool
     var $t20: 0xc0ffee::m::Test2
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2>
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2
     var $t25: &0xc0ffee::m::Test2
     var $t26: &vector<0xc0ffee::m::Test2>
     var $t27: u64
     var $t28: u64
     var $t29: bool
     var $t30: &0xc0ffee::m::Test2
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: u64
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: 0xc0ffee::m::Test2
     var $t39: &0xc0ffee::m::Test2
     var $t40: &vector<0xc0ffee::m::Test2>
     var $t41: u64
     var $t42: 0xc0ffee::m::Test2
     var $t43: &0xc0ffee::m::Test2
     var $t44: &vector<0xc0ffee::m::Test2>
     var $t45: u64
     var $t46: u64
     var $t47: bool
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: &0xc0ffee::m::Test2
     var $t52: &vector<0xc0ffee::m::Test2>
     var $t53: u64
     var $t54: u64
     # live vars:
  0: $t2 := ["1", "2", "3"]
     # live vars: $t2
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t1
  2: $t4 := ["1", "2", "3"]
     # live vars: $t1, $t4
  3: $t3 := pack 0xc0ffee::m::Test2($t4)
     # live vars: $t1, $t3
  4: $t0 := vector($t1, $t3)
     # live vars: $t0
  5: $t7 := ["1", "2", "3"]
     # live vars: $t0, $t7
  6: $t6 := pack 0xc0ffee::m::Test2($t7)
     # live vars: $t0, $t6
  7: $t9 := ["2", "2", "2"]
     # live vars: $t0, $t6, $t9
  8: $t8 := pack 0xc0ffee::m::Test2($t9)
     # live vars: $t0, $t6, $t8
  9: $t11 := ["1", "2", "3"]
     # live vars: $t0, $t6, $t8, $t11
 10: $t10 := pack 0xc0ffee::m::Test2($t11)
     # live vars: $t0, $t6, $t8, $t10
 11: $t5 := vector($t6, $t8, $t10)
     # live vars: $t0, $t5
 12: $t13 := infer($t0)
     # live vars: $t0, $t5, $t13
 13: $t12 := !=($t13, $t5)
     # live vars: $t0, $t5, $t12
 14: if ($t12) goto 15 else goto 17
     # live vars: $t0, $t5
 15: label L0
     # live vars: $t0, $t5
 16: goto 20
     # live vars: $t0, $t5
 17: label L1
     # live vars:
 18: $t14 := 0
     # live vars: $t14
 19: abort($t14)
     # live vars: $t0, $t5
 20: label L2
     # live vars: $t0, $t5
 21: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 22: $t17 := borrow_local($t5)
     # live vars: $t0, $t5, $t16, $t17
 23: $t15 := !=($t16, $t17)
     # live vars: $t0, $t5, $t15
 24: if ($t15) goto 25 else goto 27
     # live vars: $t0, $t5
 25: label L3
     # live vars: $t0, $t5
 26: goto 30
     # live vars: $t0, $t5
 27: label L4
     # live vars:
 28: $t18 := 0
     # live vars: $t18
 29: abort($t18)
     # live vars: $t0, $t5
 30: label L5
     # live vars: $t0, $t5
 31: $t22 := borrow_local($t0)
     # live vars: $t0, $t5, $t22
 32: $t23 := 0
     # live vars: $t0, $t5, $t22, $t23
 33: $t21 := vector::borrow<0xc0ffee::m::Test2>($t22, $t23)
     # live vars: $t0, $t5, $t21
 34: $t20 := read_ref($t21)
     # live vars: $t0, $t5, $t20
 35: $t26 := borrow_local($t5)
     # live vars: $t0, $t5, $t20, $t26
 36: $t27 := 0
     # live vars: $t0, $t5, $t20, $t26, $t27
 37: $t25 := vector::borrow<0xc0ffee::m::Test2>($t26, $t27)
     # live vars: $t0, $t5, $t20, $t25
 38: $t24 := read_ref($t25)
     # live vars: $t0, $t5, $t20, $t24
 39: $t19 := ==($t20, $t24)
     # live vars: $t0, $t5, $t19
 40: if ($t19) goto 41 else goto 43
     # live vars: $t0, $t5
 41: label L6
     # live vars: $t0, $t5
 42: goto 46
     # live vars: $t0, $t5
 43: label L7
     # live vars:
 44: $t28 := 0
     # live vars: $t28
 45: abort($t28)
     # live vars: $t0, $t5
 46: label L8
     # live vars: $t0, $t5
 47: $t31 := borrow_local($t0)
     # live vars: $t0, $t5, $t31
 48: $t32 := 0
     # live vars: $t0, $t5, $t31, $t32
 49: $t30 := vector::borrow<0xc0ffee::m::Test2>($t31, $t32)
     # live vars: $t0, $t5, $t30
 50: $t34 := borrow_local($t5)
     # live vars: $t0, $t5, $t30, $t34
 51: $t35 := 0
     # live vars: $t0, $t5, $t30, $t34, $t35
 52: $t33 := vector::borrow<0xc0ffee::m::Test2>($t34, $t35)
     # live vars: $t0, $t5, $t30, $t33
 53: $t29 := ==($t30, $t33)
     # live vars: $t0, $t5, $t29
 54: if ($t29) goto 55 else goto 57
     # live vars: $t0, $t5
 55: label L9
     # live vars: $t0, $t5
 56: goto 60
     # live vars: $t0, $t5
 57: label L10
     # live vars:
 58: $t36 := 0
     # live vars: $t36
 59: abort($t36)
     # live vars: $t0, $t5
 60: label L11
     # live vars: $t0, $t5
 61: $t40 := borrow_local($t0)
     # live vars: $t0, $t5, $t40
 62: $t41 := 1
     # live vars: $t0, $t5, $t40, $t41
 63: $t39 := vector::borrow<0xc0ffee::m::Test2>($t40, $t41)
     # live vars: $t0, $t5, $t39
 64: $t38 := read_ref($t39)
     # live vars: $t0, $t5, $t38
 65: $t44 := borrow_local($t5)
     # live vars: $t0, $t5, $t38, $t44
 66: $t45 := 1
     # live vars: $t0, $t5, $t38, $t44, $t45
 67: $t43 := vector::borrow<0xc0ffee::m::Test2>($t44, $t45)
     # live vars: $t0, $t5, $t38, $t43
 68: $t42 := read_ref($t43)
     # live vars: $t0, $t5, $t38, $t42
 69: $t37 := !=($t38, $t42)
     # live vars: $t0, $t5, $t37
 70: if ($t37) goto 71 else goto 73
     # live vars: $t0, $t5
 71: label L12
     # live vars: $t0, $t5
 72: goto 76
     # live vars: $t0, $t5
 73: label L13
     # live vars:
 74: $t46 := 0
     # live vars: $t46
 75: abort($t46)
     # live vars: $t0, $t5
 76: label L14
     # live vars: $t0, $t5
 77: $t49 := borrow_local($t0)
     # live vars: $t5, $t49
 78: $t50 := 1
     # live vars: $t5, $t49, $t50
 79: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
     # live vars: $t5, $t48
 80: $t52 := borrow_local($t5)
     # live vars: $t48, $t52
 81: $t53 := 1
     # live vars: $t48, $t52, $t53
 82: $t51 := vector::borrow<0xc0ffee::m::Test2>($t52, $t53)
     # live vars: $t48, $t51
 83: $t47 := !=($t48, $t51)
     # live vars: $t47
 84: if ($t47) goto 85 else goto 87
     # live vars:
 85: label L15
     # live vars:
 86: goto 90
     # live vars:
 87: label L16
     # live vars:
 88: $t54 := 0
     # live vars: $t54
 89: abort($t54)
     # live vars:
 90: label L17
     # live vars:
 91: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
     # live vars:
  0: $t4 := 1
     # live vars: $t4
  1: $t5 := 2
     # live vars: $t4, $t5
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t3
  3: $t7 := 1
     # live vars: $t3, $t7
  4: $t8 := 2
     # live vars: $t3, $t7, $t8
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
     # live vars: $t3, $t6
  6: $t2 := vector($t3, $t6)
     # live vars: $t2
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t1
  8: $t0 := vector($t1)
     # live vars: $t0
  9: $t13 := 1
     # live vars: $t0, $t13
 10: $t14 := 2
     # live vars: $t0, $t13, $t14
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
     # live vars: $t0, $t12
 12: $t16 := 1
     # live vars: $t0, $t12, $t16
 13: $t17 := 2
     # live vars: $t0, $t12, $t16, $t17
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
     # live vars: $t0, $t12, $t15
 15: $t11 := vector($t12, $t15)
     # live vars: $t0, $t11
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
     # live vars: $t0, $t10
 17: $t21 := 1
     # live vars: $t0, $t10, $t21
 18: $t22 := 2
     # live vars: $t0, $t10, $t21, $t22
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
     # live vars: $t0, $t10, $t20
 20: $t24 := 1
     # live vars: $t0, $t10, $t20, $t24
 21: $t25 := 2
     # live vars: $t0, $t10, $t20, $t24, $t25
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
     # live vars: $t0, $t10, $t20, $t23
 23: $t19 := vector($t20, $t23)
     # live vars: $t0, $t10, $t19
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
     # live vars: $t0, $t10, $t18
 25: $t9 := vector($t10, $t18)
     # live vars: $t0, $t9
 26: $t27 := infer($t0)
     # live vars: $t0, $t9, $t27
 27: $t26 := !=($t27, $t9)
     # live vars: $t0, $t9, $t26
 28: if ($t26) goto 29 else goto 31
     # live vars: $t0, $t9
 29: label L0
     # live vars: $t0, $t9
 30: goto 34
     # live vars: $t0, $t9
 31: label L1
     # live vars:
 32: $t28 := 0
     # live vars: $t28
 33: abort($t28)
     # live vars: $t0, $t9
 34: label L2
     # live vars: $t0, $t9
 35: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 36: $t31 := borrow_local($t9)
     # live vars: $t0, $t9, $t30, $t31
 37: $t29 := !=($t30, $t31)
     # live vars: $t0, $t9, $t29
 38: if ($t29) goto 39 else goto 41
     # live vars: $t0, $t9
 39: label L3
     # live vars: $t0, $t9
 40: goto 44
     # live vars: $t0, $t9
 41: label L4
     # live vars:
 42: $t32 := 0
     # live vars: $t32
 43: abort($t32)
     # live vars: $t0, $t9
 44: label L5
     # live vars: $t0, $t9
 45: $t36 := borrow_local($t0)
     # live vars: $t0, $t9, $t36
 46: $t37 := 0
     # live vars: $t0, $t9, $t36, $t37
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
     # live vars: $t0, $t9, $t35
 48: $t34 := read_ref($t35)
     # live vars: $t0, $t9, $t34
 49: $t40 := borrow_local($t9)
     # live vars: $t0, $t9, $t34, $t40
 50: $t41 := 0
     # live vars: $t0, $t9, $t34, $t40, $t41
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
     # live vars: $t0, $t9, $t34, $t39
 52: $t38 := read_ref($t39)
     # live vars: $t0, $t9, $t34, $t38
 53: $t33 := ==($t34, $t38)
     # live vars: $t0, $t9, $t33
 54: if ($t33) goto 55 else goto 57
     # live vars: $t0, $t9
 55: label L6
     # live vars: $t0, $t9
 56: goto 60
     # live vars: $t0, $t9
 57: label L7
     # live vars:
 58: $t42 := 0
     # live vars: $t42
 59: abort($t42)
     # live vars: $t0, $t9
 60: label L8
     # live vars: $t0, $t9
 61: $t45 := borrow_local($t0)
     # live vars: $t0, $t9, $t45
 62: $t46 := 0
     # live vars: $t0, $t9, $t45, $t46
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
     # live vars: $t0, $t9, $t44
 64: $t48 := borrow_local($t9)
     # live vars: $t0, $t9, $t44, $t48
 65: $t49 := 0
     # live vars: $t0, $t9, $t44, $t48, $t49
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
     # live vars: $t0, $t9, $t44, $t47
 67: $t43 := ==($t44, $t47)
     # live vars: $t0, $t9, $t43
 68: if ($t43) goto 69 else goto 71
     # live vars: $t0, $t9
 69: label L9
     # live vars: $t0, $t9
 70: goto 74
     # live vars: $t0, $t9
 71: label L10
     # live vars:
 72: $t50 := 0
     # live vars: $t50
 73: abort($t50)
     # live vars: $t0, $t9
 74: label L11
     # live vars: $t0, $t9
 75: $t54 := borrow_local($t0)
     # live vars: $t0, $t9, $t54
 76: $t55 := 0
     # live vars: $t0, $t9, $t54, $t55
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
     # live vars: $t0, $t9, $t53
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t0, $t9, $t56
 79: $t52 := read_ref($t56)
     # live vars: $t0, $t9, $t52
 80: $t59 := borrow_local($t9)
     # live vars: $t0, $t9, $t52, $t59
 81: $t60 := 0
     # live vars: $t0, $t9, $t52, $t59, $t60
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
     # live vars: $t0, $t9, $t52, $t58
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
     # live vars: $t0, $t9, $t52, $t61
 84: $t57 := read_ref($t61)
     # live vars: $t0, $t9, $t52, $t57
 85: $t51 := ==($t52, $t57)
     # live vars: $t0, $t9, $t51
 86: if ($t51) goto 87 else goto 89
     # live vars: $t0, $t9
 87: label L12
     # live vars: $t0, $t9
 88: goto 92
     # live vars: $t0, $t9
 89: label L13
     # live vars:
 90: $t62 := 0
     # live vars: $t62
 91: abort($t62)
     # live vars: $t0, $t9
 92: label L14
     # live vars: $t0, $t9
 93: $t66 := borrow_local($t0)
     # live vars: $t9, $t66
 94: $t67 := 0
     # live vars: $t9, $t66, $t67
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
     # live vars: $t9, $t65
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
     # live vars: $t9, $t64
 97: $t70 := borrow_local($t9)
     # live vars: $t64, $t70
 98: $t71 := 0
     # live vars: $t64, $t70, $t71
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
     # live vars: $t64, $t69
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
     # live vars: $t64, $t68
101: $t63 := ==($t64, $t68)
     # live vars: $t63
102: if ($t63) goto 103 else goto 105
     # live vars:
103: label L15
     # live vars:
104: goto 108
     # live vars:
105: label L16
     # live vars:
106: $t72 := 0
     # live vars: $t72
107: abort($t72)
     # live vars:
108: label L17
     # live vars:
109: return ()
}

============ after ReferenceSafetyProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
     # live vars:
     # refs: []
     #
  0: $t1 := 1
     # live vars: $t1
     # refs: []
     #
  1: $t2 := 2
     # live vars: $t1, $t2
     # refs: []
     #
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
     # live vars: $t0
     # refs: []
     #
  3: $t4 := 1
     # live vars: $t0, $t4
     # refs: []
     #
  4: $t5 := 2
     # live vars: $t0, $t4, $t5
     # refs: []
     #
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t3
     # refs: []
     #
  6: $t7 := infer($t0)
     # live vars: $t0, $t3, $t7
     # refs: []
     #
  7: $t6 := ==($t7, $t3)
     # live vars: $t0, $t3, $t6
     # refs: []
     #
  8: if ($t6) goto 9 else goto 11
     # live vars: $t0, $t3
     # refs: []
     #
  9: label L0
     # live vars: $t0, $t3
     # refs: []
     #
 10: goto 14
     # live vars: $t0, $t3
     # refs: []
     #
 11: label L1
     # live vars:
     # refs: []
     #
 12: $t8 := 0
     # live vars: $t8
     # refs: []
     #
 13: abort($t8)
     # live vars: $t0, $t3
     # refs: []
     #
 14: label L2
     # live vars: $t0, $t3
     # refs: []
     #
 15: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
     # refs: [$t10 => #10]
     # #10
     #   <no edges>
     # #root
     #   => #10 via [local `x`] at line 22
     #
 16: $t11 := borrow_local($t3)
     # live vars: $t0, $t3, $t10, $t11
     # refs: [$t10 => #10, $t11 => #11]
     # #10
     #   <no edges>
     # #11
     #   <no edges>
     # #root
     #   => #10 via [local `x`] at line 22
     #   => #11 via [local `y`] at line 22
     #
 17: $t9 := ==($t10, $t11)
     # live vars: $t0, $t3, $t9
     # refs: []
     #
 18: if ($t9) goto 19 else goto 21
     # live vars: $t0, $t3
     # refs: []
     #
 19: label L3
     # live vars: $t0, $t3
     # refs: []
     #
 20: goto 24
     # live vars: $t0, $t3
     # refs: []
     #
 21: label L4
     # live vars:
     # refs: []
     #
 22: $t12 := 0
     # live vars: $t12
     # refs: []
     #
 23: abort($t12)
     # live vars: $t0, $t3
     # refs: []
     #
 24: label L5
     # live vars: $t0, $t3
     # refs: []
     #
 25: $t15 := borrow_local($t0)
     # live vars: $t0, $t3, $t15
     # refs: [$t15 => #15]
     # #15
     #   <no edges>
     # #root
     #   => #15 via [local `x`] at line 24
     #
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
     # live vars: $t0, $t3, $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => #16 via [local `x`, field `a`] at line 24
     #
 27: $t14 := read_ref($t16)
     # live vars: $t0, $t3, $t14
     # refs: []
     #
 28: $t18 := borrow_local($t3)
     # live vars: $t0, $t3, $t14, $t18
     # refs: [$t18 => #18]
     # #18
     #   <no edges>
     # #root
     #   => #18 via [local `y`] at line 24
     #
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
     # live vars: $t0, $t3, $t14, $t19
     # refs: [$t19 => #19]
     # #19
     #   <no edges>
     # #root
     #   => #19 via [local `y`, field `a`] at line 24
     #
 30: $t17 := read_ref($t19)
     # live vars: $t0, $t3, $t14, $t17
     # refs: []
     #
 31: $t13 := ==($t14, $t17)
     # live vars: $t0, $t3, $t13
     # refs: []
     #
 32: if ($t13) goto 33 else goto 35
     # live vars: $t0, $t3
     # refs: []
     #
 33: label L6
     # live vars: $t0, $t3
     # refs: []
     #
 34: goto 38
     # live vars: $t0, $t3
     # refs: []
     #
 35: label L7
     # live vars:
     # refs: []
     #
 36: $t20 := 0
     # live vars: $t20
     # refs: []
     #
 37: abort($t20)
     # live vars: $t0, $t3
     # refs: []
     #
 38: label L8
     # live vars: $t0, $t3
     # refs: []
     #
 39: $t23 := borrow_local($t0)
     # live vars: $t0, $t3, $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => #23 via [local `x`] at line 25
     #
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
     # live vars: $t0, $t3, $t22
     # refs: [$t22 => #22]
     # #22
     #   <no edges>
     # #root
     #   => #22 via [local `x`, field `a`] at line 25
     #
 41: $t25 := borrow_local($t3)
     # live vars: $t0, $t3, $t22, $t25
     # refs: [$t22 => #22, $t25 => #25]
     # #22
     #   <no edges>
     # #25
     #   <no edges>
     # #root
     #   => #22 via [local `x`, field `a`] at line 25
     #   => #25 via [local `y`] at line 25
     #
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
     # live vars: $t0, $t3, $t22, $t24
     # refs: [$t22 => #22, $t24 => #24]
     # #22
     #   <no edges>
     # #24
     #   <no edges>
     # #root
     #   => #22 via [local `x`, field `a`] at line 25
     #   => #24 via [local `y`, field `a`] at line 25
     #
 43: $t21 := ==($t22, $t24)
     # live vars: $t0, $t3, $t21
     # refs: []
     #
 44: if ($t21) goto 45 else goto 47
     # live vars: $t0, $t3
     # refs: []
     #
 45: label L9
     # live vars: $t0, $t3
     # refs: []
     #
 46: goto 50
     # live vars: $t0, $t3
     # refs: []
     #
 47: label L10
     # live vars:
     # refs: []
     #
 48: $t26 := 0
     # live vars: $t26
     # refs: []
     #
 49: abort($t26)
     # live vars: $t0, $t3
     # refs: []
     #
 50: label L11
     # live vars: $t0, $t3
     # refs: []
     #
 51: $t29 := borrow_local($t0)
     # live vars: $t0, $t3, $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   => #29 via [local `x`] at line 27
     #
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
     # live vars: $t0, $t3, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`, field `b`] at line 27
     #
 53: $t28 := read_ref($t30)
     # live vars: $t0, $t3, $t28
     # refs: []
     #
 54: $t32 := borrow_local($t3)
     # live vars: $t0, $t3, $t28, $t32
     # refs: [$t32 => #32]
     # #32
     #   <no edges>
     # #root
     #   => #32 via [local `y`] at line 27
     #
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
     # live vars: $t0, $t3, $t28, $t33
     # refs: [$t33 => #33]
     # #33
     #   <no edges>
     # #root
     #   => #33 via [local `y`, field `b`] at line 27
     #
 56: $t31 := read_ref($t33)
     # live vars: $t0, $t3, $t28, $t31
     # refs: []
     #
 57: $t27 := ==($t28, $t31)
     # live vars: $t0, $t3, $t27
     # refs: []
     #
 58: if ($t27) goto 59 else goto 61
     # live vars: $t0, $t3
     # refs: []
     #
 59: label L12
     # live vars: $t0, $t3
     # refs: []
     #
 60: goto 64
     # live vars: $t0, $t3
     # refs: []
     #
 61: label L13
     # live vars:
     # refs: []
     #
 62: $t34 := 0
     # live vars: $t34
     # refs: []
     #
 63: abort($t34)
     # live vars: $t0, $t3
     # refs: []
     #
 64: label L14
     # live vars: $t0, $t3
     # refs: []
     #
 65: $t37 := borrow_local($t0)
     # live vars: $t3, $t37
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`] at line 28
     #
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
     # live vars: $t3, $t36
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   => #36 via [local `x`, field `b`] at line 28
     #
 67: $t39 := borrow_local($t3)
     # live vars: $t36, $t39
     # refs: [$t36 => #36, $t39 => #39]
     # #36
     #   <no edges>
     # #39
     #   <no edges>
     # #root
     #   => #36 via [local `x`, field `b`] at line 28
     #   => #39 via [local `y`] at line 28
     #
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
     # live vars: $t36, $t38
     # refs: [$t36 => #36, $t38 => #38]
     # #36
     #   <no edges>
     # #38
     #   <no edges>
     # #root
     #   => #36 via [local `x`, field `b`] at line 28
     #   => #38 via [local `y`, field `b`] at line 28
     #
 69: $t35 := ==($t36, $t38)
     # live vars: $t35
     # refs: []
     #
 70: if ($t35) goto 71 else goto 73
     # live vars:
     # refs: []
     #
 71: label L15
     # live vars:
     # refs: []
     #
 72: goto 76
     # live vars:
     # refs: []
     #
 73: label L16
     # live vars:
     # refs: []
     #
 74: $t40 := 0
     # live vars: $t40
     # refs: []
     #
 75: abort($t40)
     # live vars:
     # refs: []
     #
 76: label L17
     # live vars:
     # refs: []
     #
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64>
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64
     var $t7: bool
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64
     var $t11: bool
     var $t12: vector<u64>
     var $t13: &0xc0ffee::m::Test2
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: bool
     var $t20: &vector<u64>
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2
     var $t24: u64
     var $t25: bool
     var $t26: u64
     var $t27: &u64
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: u64
     var $t32: &u64
     var $t33: &vector<u64>
     var $t34: &0xc0ffee::m::Test2
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: &u64
     var $t43: &vector<u64>
     var $t44: &0xc0ffee::m::Test2
     var $t45: u64
     var $t46: u64
     # live vars:
     # refs: []
     #
  0: $t1 := ["1", "2", "3"]
     # live vars: $t1
     # refs: []
     #
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
     # live vars: $t0
     # refs: []
     #
  2: $t3 := ["1", "2", "3"]
     # live vars: $t0, $t3
     # refs: []
     #
  3: $t2 := pack 0xc0ffee::m::Test2($t3)
     # live vars: $t0, $t2
     # refs: []
     #
  4: $t5 := infer($t0)
     # live vars: $t0, $t2, $t5
     # refs: []
     #
  5: $t4 := ==($t5, $t2)
     # live vars: $t0, $t2, $t4
     # refs: []
     #
  6: if ($t4) goto 7 else goto 9
     # live vars: $t0, $t2
     # refs: []
     #
  7: label L0
     # live vars: $t0, $t2
     # refs: []
     #
  8: goto 12
     # live vars: $t0, $t2
     # refs: []
     #
  9: label L1
     # live vars:
     # refs: []
     #
 10: $t6 := 0
     # live vars: $t6
     # refs: []
     #
 11: abort($t6)
     # live vars: $t0, $t2
     # refs: []
     #
 12: label L2
     # live vars: $t0, $t2
     # refs: []
     #
 13: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
     # refs: [$t8 => #8]
     # #8
     #   <no edges>
     # #root
     #   => #8 via [local `x`] at line 36
     #
 14: $t9 := borrow_local($t2)
     # live vars: $t0, $t2, $t8, $t9
     # refs: [$t8 => #8, $t9 => #9]
     # #8
     #   <no edges>
     # #9
     #   <no edges>
     # #root
     #   => #8 via [local `x`] at line 36
     #   => #9 via [local `y`] at line 36
     #
 15: $t7 := ==($t8, $t9)
     # live vars: $t0, $t2, $t7
     # refs: []
     #
 16: if ($t7) goto 17 else goto 19
     # live vars: $t0, $t2
     # refs: []
     #
 17: label L3
     # live vars: $t0, $t2
     # refs: []
     #
 18: goto 22
     # live vars: $t0, $t2
     # refs: []
     #
 19: label L4
     # live vars:
     # refs: []
     #
 20: $t10 := 0
     # live vars: $t10
     # refs: []
     #
 21: abort($t10)
     # live vars: $t0, $t2
     # refs: []
     #
 22: label L5
     # live vars: $t0, $t2
     # refs: []
     #
 23: $t13 := borrow_local($t0)
     # live vars: $t0, $t2, $t13
     # refs: [$t13 => #13]
     # #13
     #   <no edges>
     # #root
     #   => #13 via [local `x`] at line 38
     #
 24: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t13)
     # live vars: $t0, $t2, $t14
     # refs: [$t14 => #14]
     # #14
     #   <no edges>
     # #root
     #   => #14 via [local `x`, field `a`] at line 38
     #
 25: $t12 := read_ref($t14)
     # live vars: $t0, $t2, $t12
     # refs: []
     #
 26: $t16 := borrow_local($t2)
     # live vars: $t0, $t2, $t12, $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => #16 via [local `y`] at line 38
     #
 27: $t17 := borrow_field<0xc0ffee::m::Test2>.a($t16)
     # live vars: $t0, $t2, $t12, $t17
     # refs: [$t17 => #17]
     # #17
     #   <no edges>
     # #root
     #   => #17 via [local `y`, field `a`] at line 38
     #
 28: $t15 := read_ref($t17)
     # live vars: $t0, $t2, $t12, $t15
     # refs: []
     #
 29: $t11 := ==($t12, $t15)
     # live vars: $t0, $t2, $t11
     # refs: []
     #
 30: if ($t11) goto 31 else goto 33
     # live vars: $t0, $t2
     # refs: []
     #
 31: label L6
     # live vars: $t0, $t2
     # refs: []
     #
 32: goto 36
     # live vars: $t0, $t2
     # refs: []
     #
 33: label L7
     # live vars:
     # refs: []
     #
 34: $t18 := 0
     # live vars: $t18
     # refs: []
     #
 35: abort($t18)
     # live vars: $t0, $t2
     # refs: []
     #
 36: label L8
     # live vars: $t0, $t2
     # refs: []
     #
 37: $t21 := borrow_local($t0)
     # live vars: $t0, $t2, $t21
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => #21 via [local `x`] at line 39
     #
 38: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t21)
     # live vars: $t0, $t2, $t20
     # refs: [$t20 => #20]
     # #20
     #   <no edges>
     # #root
     #   => #20 via [local `x`, field `a`] at line 39
     #
 39: $t23 := borrow_local($t2)
     # live vars: $t0, $t2, $t20, $t23
     # refs: [$t20 => #20, $t23 => #23]
     # #20
     #   <no edges>
     # #23
     #   <no edges>
     # #root
     #   => #20 via [local `x`, field `a`] at line 39
     #   => #23 via [local `y`] at line 39
     #
 40: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t23)
     # live vars: $t0, $t2, $t20, $t22
     # refs: [$t20 => #20, $t22 => #22]
     # #20
     #   <no edges>
     # #22
     #   <no edges>
     # #root
     #   => #20 via [local `x`, field `a`] at line 39
     #   => #22 via [local `y`, field `a`] at line 39
     #
 41: $t19 := ==($t20, $t22)
     # live vars: $t0, $t2, $t19
     # refs: []
     #
 42: if ($t19) goto 43 else goto 45
     # live vars: $t0, $t2
     # refs: []
     #
 43: label L9
     # live vars: $t0, $t2
     # refs: []
     #
 44: goto 48
     # live vars: $t0, $t2
     # refs: []
     #
 45: label L10
     # live vars:
     # refs: []
     #
 46: $t24 := 0
     # live vars: $t24
     # refs: []
     #
 47: abort($t24)
     # live vars: $t0, $t2
     # refs: []
     #
 48: label L11
     # live vars: $t0, $t2
     # refs: []
     #
 49: $t29 := borrow_local($t0)
     # live vars: $t0, $t2, $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   => #29 via [local `x`] at line 41
     #
 50: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
     # live vars: $t0, $t2, $t28
     # refs: [$t28 => #28]
     # #28
     #   <no edges>
     # #root
     #   => #28 via [local `x`, field `a`] at line 41
     #
 51: $t30 := 0
     # live vars: $t0, $t2, $t28, $t30
     # refs: [$t28 => #28]
     # #28
     #   <no edges>
     # #root
     #   => #28 via [local `x`, field `a`] at line 41
     #
 52: $t27 := vector::borrow<u64>($t28, $t30)
     # live vars: $t0, $t2, $t27
     # refs: [$t27 => #27]
     # #27
     #   <no edges>
     # #root
     #   -> #27 via [local `x`, field `a`] at line 41
     #
 53: $t26 := read_ref($t27)
     # live vars: $t0, $t2, $t26
     # refs: []
     #
 54: $t34 := borrow_local($t2)
     # live vars: $t0, $t2, $t26, $t34
     # refs: [$t34 => #34]
     # #34
     #   <no edges>
     # #root
     #   => #34 via [local `y`] at line 41
     #
 55: $t33 := borrow_field<0xc0ffee::m::Test2>.a($t34)
     # live vars: $t0, $t2, $t26, $t33
     # refs: [$t33 => #33]
     # #33
     #   <no edges>
     # #root
     #   => #33 via [local `y`, field `a`] at line 41
     #
 56: $t35 := 0
     # live vars: $t0, $t2, $t26, $t33, $t35
     # refs: [$t33 => #33]
     # #33
     #   <no edges>
     # #root
     #   => #33 via [local `y`, field `a`] at line 41
     #
 57: $t32 := vector::borrow<u64>($t33, $t35)
     # live vars: $t0, $t2, $t26, $t32
     # refs: [$t32 => #32]
     # #32
     #   <no edges>
     # #root
     #   -> #32 via [local `y`, field `a`] at line 41
     #
 58: $t31 := read_ref($t32)
     # live vars: $t0, $t2, $t26, $t31
     # refs: []
     #
 59: $t25 := ==($t26, $t31)
     # live vars: $t0, $t2, $t25
     # refs: []
     #
 60: if ($t25) goto 61 else goto 63
     # live vars: $t0, $t2
     # refs: []
     #
 61: label L12
     # live vars: $t0, $t2
     # refs: []
     #
 62: goto 66
     # live vars: $t0, $t2
     # refs: []
     #
 63: label L13
     # live vars:
     # refs: []
     #
 64: $t36 := 0
     # live vars: $t36
     # refs: []
     #
 65: abort($t36)
     # live vars: $t0, $t2
     # refs: []
     #
 66: label L14
     # live vars: $t0, $t2
     # refs: []
     #
 67: $t40 := borrow_local($t0)
     # live vars: $t2, $t40
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `x`] at line 42
     #
 68: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
     # live vars: $t2, $t39
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `x`, field `a`] at line 42
     #
 69: $t41 := 0
     # live vars: $t2, $t39, $t41
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `x`, field `a`] at line 42
     #
 70: $t38 := vector::borrow<u64>($t39, $t41)
     # live vars: $t2, $t38
     # refs: [$t38 => #38]
     # #38
     #   <no edges>
     # #root
     #   -> #38 via [local `x`, field `a`] at line 42
     #
 71: $t44 := borrow_local($t2)
     # live vars: $t38, $t44
     # refs: [$t38 => #38, $t44 => #44]
     # #38
     #   <no edges>
     # #44
     #   <no edges>
     # #root
     #   -> #38 via [local `x`, field `a`] at line 42
     #   => #44 via [local `y`] at line 42
     #
 72: $t43 := borrow_field<0xc0ffee::m::Test2>.a($t44)
     # live vars: $t38, $t43
     # refs: [$t38 => #38, $t43 => #43]
     # #38
     #   <no edges>
     # #43
     #   <no edges>
     # #root
     #   -> #38 via [local `x`, field `a`] at line 42
     #   => #43 via [local `y`, field `a`] at line 42
     #
 73: $t45 := 0
     # live vars: $t38, $t43, $t45
     # refs: [$t38 => #38, $t43 => #43]
     # #38
     #   <no edges>
     # #43
     #   <no edges>
     # #root
     #   -> #38 via [local `x`, field `a`] at line 42
     #   => #43 via [local `y`, field `a`] at line 42
     #
 74: $t42 := vector::borrow<u64>($t43, $t45)
     # live vars: $t38, $t42
     # refs: [$t38 => #38, $t42 => #42]
     # #38
     #   <no edges>
     # #42
     #   <no edges>
     # #root
     #   -> #38 via [local `x`, field `a`] at line 42
     #   -> #42 via [local `y`, field `a`] at line 42
     #
 75: $t37 := ==($t38, $t42)
     # live vars: $t37
     # refs: []
     #
 76: if ($t37) goto 77 else goto 79
     # live vars:
     # refs: []
     #
 77: label L15
     # live vars:
     # refs: []
     #
 78: goto 82
     # live vars:
     # refs: []
     #
 79: label L16
     # live vars:
     # refs: []
     #
 80: $t46 := 0
     # live vars: $t46
     # refs: []
     #
 81: abort($t46)
     # live vars:
     # refs: []
     #
 82: label L17
     # live vars:
     # refs: []
     #
 83: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
     # live vars:
     # refs: []
     #
  0: $t3 := 1
     # live vars: $t3
     # refs: []
     #
  1: $t4 := 2
     # live vars: $t3, $t4
     # refs: []
     #
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t2
     # refs: []
     #
  3: $t1 := vector($t2)
     # live vars: $t1
     # refs: []
     #
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
     # live vars: $t0
     # refs: []
     #
  5: $t8 := 1
     # live vars: $t0, $t8
     # refs: []
     #
  6: $t9 := 2
     # live vars: $t0, $t8, $t9
     # refs: []
     #
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t0, $t7
     # refs: []
     #
  8: $t11 := 1
     # live vars: $t0, $t7, $t11
     # refs: []
     #
  9: $t12 := 2
     # live vars: $t0, $t7, $t11, $t12
     # refs: []
     #
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
     # live vars: $t0, $t7, $t10
     # refs: []
     #
 11: $t6 := vector($t7, $t10)
     # live vars: $t0, $t6
     # refs: []
     #
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
     # live vars: $t0, $t5
     # refs: []
     #
 13: $t14 := infer($t0)
     # live vars: $t0, $t5, $t14
     # refs: []
     #
 14: $t13 := !=($t14, $t5)
     # live vars: $t0, $t5, $t13
     # refs: []
     #
 15: if ($t13) goto 16 else goto 18
     # live vars: $t0, $t5
     # refs: []
     #
 16: label L0
     # live vars: $t0, $t5
     # refs: []
     #
 17: goto 21
     # live vars: $t0, $t5
     # refs: []
     #
 18: label L1
     # live vars:
     # refs: []
     #
 19: $t15 := 0
     # live vars: $t15
     # refs: []
     #
 20: abort($t15)
     # live vars: $t0, $t5
     # refs: []
     #
 21: label L2
     # live vars: $t0, $t5
     # refs: []
     #
 22: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
     # refs: [$t17 => #17]
     # #17
     #   <no edges>
     # #root
     #   => #17 via [local `x`] at line 50
     #
 23: $t18 := borrow_local($t5)
     # live vars: $t0, $t5, $t17, $t18
     # refs: [$t17 => #17, $t18 => #18]
     # #17
     #   <no edges>
     # #18
     #   <no edges>
     # #root
     #   => #17 via [local `x`] at line 50
     #   => #18 via [local `y`] at line 50
     #
 24: $t16 := !=($t17, $t18)
     # live vars: $t0, $t5, $t16
     # refs: []
     #
 25: if ($t16) goto 26 else goto 28
     # live vars: $t0, $t5
     # refs: []
     #
 26: label L3
     # live vars: $t0, $t5
     # refs: []
     #
 27: goto 31
     # live vars: $t0, $t5
     # refs: []
     #
 28: label L4
     # live vars:
     # refs: []
     #
 29: $t19 := 0
     # live vars: $t19
     # refs: []
     #
 30: abort($t19)
     # live vars: $t0, $t5
     # refs: []
     #
 31: label L5
     # live vars: $t0, $t5
     # refs: []
     #
 32: $t22 := borrow_local($t0)
     # live vars: $t0, $t5, $t22
     # refs: [$t22 => #22]
     # #22
     #   <no edges>
     # #root
     #   => #22 via [local `x`] at line 52
     #
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
     # live vars: $t0, $t5, $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => #23 via [local `x`, field `a`] at line 52
     #
 34: $t21 := read_ref($t23)
     # live vars: $t0, $t5, $t21
     # refs: []
     #
 35: $t25 := borrow_local($t5)
     # live vars: $t0, $t5, $t21, $t25
     # refs: [$t25 => #25]
     # #25
     #   <no edges>
     # #root
     #   => #25 via [local `y`] at line 52
     #
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
     # live vars: $t0, $t5, $t21, $t26
     # refs: [$t26 => #26]
     # #26
     #   <no edges>
     # #root
     #   => #26 via [local `y`, field `a`] at line 52
     #
 37: $t24 := read_ref($t26)
     # live vars: $t0, $t5, $t21, $t24
     # refs: []
     #
 38: $t20 := !=($t21, $t24)
     # live vars: $t0, $t5, $t20
     # refs: []
     #
 39: if ($t20) goto 40 else goto 42
     # live vars: $t0, $t5
     # refs: []
     #
 40: label L6
     # live vars: $t0, $t5
     # refs: []
     #
 41: goto 45
     # live vars: $t0, $t5
     # refs: []
     #
 42: label L7
     # live vars:
     # refs: []
     #
 43: $t27 := 0
     # live vars: $t27
     # refs: []
     #
 44: abort($t27)
     # live vars: $t0, $t5
     # refs: []
     #
 45: label L8
     # live vars: $t0, $t5
     # refs: []
     #
 46: $t30 := borrow_local($t0)
     # live vars: $t0, $t5, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 53
     #
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
     # live vars: $t0, $t5, $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   => #29 via [local `x`, field `a`] at line 53
     #
 48: $t32 := borrow_local($t5)
     # live vars: $t0, $t5, $t29, $t32
     # refs: [$t29 => #29, $t32 => #32]
     # #29
     #   <no edges>
     # #32
     #   <no edges>
     # #root
     #   => #29 via [local `x`, field `a`] at line 53
     #   => #32 via [local `y`] at line 53
     #
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
     # live vars: $t0, $t5, $t29, $t31
     # refs: [$t29 => #29, $t31 => #31]
     # #29
     #   <no edges>
     # #31
     #   <no edges>
     # #root
     #   => #29 via [local `x`, field `a`] at line 53
     #   => #31 via [local `y`, field `a`] at line 53
     #
 50: $t28 := !=($t29, $t31)
     # live vars: $t0, $t5, $t28
     # refs: []
     #
 51: if ($t28) goto 52 else goto 54
     # live vars: $t0, $t5
     # refs: []
     #
 52: label L9
     # live vars: $t0, $t5
     # refs: []
     #
 53: goto 57
     # live vars: $t0, $t5
     # refs: []
     #
 54: label L10
     # live vars:
     # refs: []
     #
 55: $t33 := 0
     # live vars: $t33
     # refs: []
     #
 56: abort($t33)
     # live vars: $t0, $t5
     # refs: []
     #
 57: label L11
     # live vars: $t0, $t5
     # refs: []
     #
 58: $t38 := borrow_local($t0)
     # live vars: $t0, $t5, $t38
     # refs: [$t38 => #38]
     # #38
     #   <no edges>
     # #root
     #   => #38 via [local `x`] at line 55
     #
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
     # live vars: $t0, $t5, $t37
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`, field `a`] at line 55
     #
 60: $t39 := 0
     # live vars: $t0, $t5, $t37, $t39
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`, field `a`] at line 55
     #
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
     # live vars: $t0, $t5, $t36
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   -> #36 via [local `x`, field `a`] at line 55
     #
 62: $t35 := read_ref($t36)
     # live vars: $t0, $t5, $t35
     # refs: []
     #
 63: $t43 := borrow_local($t5)
     # live vars: $t0, $t5, $t35, $t43
     # refs: [$t43 => #43]
     # #43
     #   <no edges>
     # #root
     #   => #43 via [local `y`] at line 55
     #
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
     # live vars: $t0, $t5, $t35, $t42
     # refs: [$t42 => #42]
     # #42
     #   <no edges>
     # #root
     #   => #42 via [local `y`, field `a`] at line 55
     #
 65: $t44 := 0
     # live vars: $t0, $t5, $t35, $t42, $t44
     # refs: [$t42 => #42]
     # #42
     #   <no edges>
     # #root
     #   => #42 via [local `y`, field `a`] at line 55
     #
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
     # live vars: $t0, $t5, $t35, $t41
     # refs: [$t41 => #41]
     # #41
     #   <no edges>
     # #root
     #   -> #41 via [local `y`, field `a`] at line 55
     #
 67: $t40 := read_ref($t41)
     # live vars: $t0, $t5, $t35, $t40
     # refs: []
     #
 68: $t34 := ==($t35, $t40)
     # live vars: $t0, $t5, $t34
     # refs: []
     #
 69: if ($t34) goto 70 else goto 72
     # live vars: $t0, $t5
     # refs: []
     #
 70: label L12
     # live vars: $t0, $t5
     # refs: []
     #
 71: goto 75
     # live vars: $t0, $t5
     # refs: []
     #
 72: label L13
     # live vars:
     # refs: []
     #
 73: $t45 := 0
     # live vars: $t45
     # refs: []
     #
 74: abort($t45)
     # live vars: $t0, $t5
     # refs: []
     #
 75: label L14
     # live vars: $t0, $t5
     # refs: []
     #
 76: $t49 := borrow_local($t0)
     # live vars: $t5, $t49
     # refs: [$t49 => #49]
     # #49
     #   <no edges>
     # #root
     #   => #49 via [local `x`] at line 56
     #
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
     # live vars: $t5, $t48
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`, field `a`] at line 56
     #
 78: $t50 := 0
     # live vars: $t5, $t48, $t50
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`, field `a`] at line 56
     #
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
     # live vars: $t5, $t47
     # refs: [$t47 => #47]
     # #47
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #
 80: $t53 := borrow_local($t5)
     # live vars: $t47, $t53
     # refs: [$t47 => #47, $t53 => #53]
     # #47
     #   <no edges>
     # #53
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   => #53 via [local `y`] at line 56
     #
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t47, $t52
     # refs: [$t47 => #47, $t52 => #52]
     # #47
     #   <no edges>
     # #52
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   => #52 via [local `y`, field `a`] at line 56
     #
 82: $t54 := 0
     # live vars: $t47, $t52, $t54
     # refs: [$t47 => #47, $t52 => #52]
     # #47
     #   <no edges>
     # #52
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   => #52 via [local `y`, field `a`] at line 56
     #
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
     # live vars: $t47, $t51
     # refs: [$t47 => #47, $t51 => #51]
     # #47
     #   <no edges>
     # #51
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   -> #51 via [local `y`, field `a`] at line 56
     #
 84: $t46 := ==($t47, $t51)
     # live vars: $t46
     # refs: []
     #
 85: if ($t46) goto 86 else goto 88
     # live vars:
     # refs: []
     #
 86: label L15
     # live vars:
     # refs: []
     #
 87: goto 91
     # live vars:
     # refs: []
     #
 88: label L16
     # live vars:
     # refs: []
     #
 89: $t55 := 0
     # live vars: $t55
     # refs: []
     #
 90: abort($t55)
     # live vars:
     # refs: []
     #
 91: label L17
     # live vars:
     # refs: []
     #
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
     # live vars:
     # refs: []
     #
  0: $t2 := 1
     # live vars: $t2
     # refs: []
     #
  1: $t3 := 2
     # live vars: $t2, $t3
     # refs: []
     #
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1
     # refs: []
     #
  3: $t5 := 1
     # live vars: $t1, $t5
     # refs: []
     #
  4: $t6 := 2
     # live vars: $t1, $t5, $t6
     # refs: []
     #
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
     # live vars: $t1, $t4
     # refs: []
     #
  6: $t8 := 1
     # live vars: $t1, $t4, $t8
     # refs: []
     #
  7: $t9 := 2
     # live vars: $t1, $t4, $t8, $t9
     # refs: []
     #
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t1, $t4, $t7
     # refs: []
     #
  9: $t0 := vector($t1, $t4, $t7)
     # live vars: $t0
     # refs: []
     #
 10: $t12 := 1
     # live vars: $t0, $t12
     # refs: []
     #
 11: $t13 := 2
     # live vars: $t0, $t12, $t13
     # refs: []
     #
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
     # live vars: $t0, $t11
     # refs: []
     #
 13: $t15 := 1
     # live vars: $t0, $t11, $t15
     # refs: []
     #
 14: $t16 := 2
     # live vars: $t0, $t11, $t15, $t16
     # refs: []
     #
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
     # live vars: $t0, $t11, $t14
     # refs: []
     #
 16: $t18 := 1
     # live vars: $t0, $t11, $t14, $t18
     # refs: []
     #
 17: $t19 := 2
     # live vars: $t0, $t11, $t14, $t18, $t19
     # refs: []
     #
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
     # live vars: $t0, $t11, $t14, $t17
     # refs: []
     #
 19: $t10 := vector($t11, $t14, $t17)
     # live vars: $t0, $t10
     # refs: []
     #
 20: $t21 := infer($t0)
     # live vars: $t0, $t10, $t21
     # refs: []
     #
 21: $t20 := ==($t21, $t10)
     # live vars: $t0, $t10, $t20
     # refs: []
     #
 22: if ($t20) goto 23 else goto 25
     # live vars: $t0, $t10
     # refs: []
     #
 23: label L0
     # live vars: $t0, $t10
     # refs: []
     #
 24: goto 28
     # live vars: $t0, $t10
     # refs: []
     #
 25: label L1
     # live vars:
     # refs: []
     #
 26: $t22 := 0
     # live vars: $t22
     # refs: []
     #
 27: abort($t22)
     # live vars: $t0, $t10
     # refs: []
     #
 28: label L2
     # live vars: $t0, $t10
     # refs: []
     #
 29: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
     # refs: [$t24 => #24]
     # #24
     #   <no edges>
     # #root
     #   => #24 via [local `x`] at line 65
     #
 30: $t25 := borrow_local($t10)
     # live vars: $t0, $t10, $t24, $t25
     # refs: [$t24 => #24, $t25 => #25]
     # #24
     #   <no edges>
     # #25
     #   <no edges>
     # #root
     #   => #24 via [local `x`] at line 65
     #   => #25 via [local `y`] at line 65
     #
 31: $t23 := ==($t24, $t25)
     # live vars: $t0, $t10, $t23
     # refs: []
     #
 32: if ($t23) goto 33 else goto 35
     # live vars: $t0, $t10
     # refs: []
     #
 33: label L3
     # live vars: $t0, $t10
     # refs: []
     #
 34: goto 38
     # live vars: $t0, $t10
     # refs: []
     #
 35: label L4
     # live vars:
     # refs: []
     #
 36: $t26 := 0
     # live vars: $t26
     # refs: []
     #
 37: abort($t26)
     # live vars: $t0, $t10
     # refs: []
     #
 38: label L5
     # live vars: $t0, $t10
     # refs: []
     #
 39: $t30 := borrow_local($t0)
     # live vars: $t0, $t10, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 67
     #
 40: $t31 := 0
     # live vars: $t0, $t10, $t30, $t31
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 67
     #
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
     # live vars: $t0, $t10, $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   -> #29 via [local `x`] at line 67
     #
 42: $t28 := read_ref($t29)
     # live vars: $t0, $t10, $t28
     # refs: []
     #
 43: $t34 := borrow_local($t10)
     # live vars: $t0, $t10, $t28, $t34
     # refs: [$t34 => #34]
     # #34
     #   <no edges>
     # #root
     #   => #34 via [local `y`] at line 67
     #
 44: $t35 := 0
     # live vars: $t0, $t10, $t28, $t34, $t35
     # refs: [$t34 => #34]
     # #34
     #   <no edges>
     # #root
     #   => #34 via [local `y`] at line 67
     #
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
     # live vars: $t0, $t10, $t28, $t33
     # refs: [$t33 => #33]
     # #33
     #   <no edges>
     # #root
     #   -> #33 via [local `y`] at line 67
     #
 46: $t32 := read_ref($t33)
     # live vars: $t0, $t10, $t28, $t32
     # refs: []
     #
 47: $t27 := ==($t28, $t32)
     # live vars: $t0, $t10, $t27
     # refs: []
     #
 48: if ($t27) goto 49 else goto 51
     # live vars: $t0, $t10
     # refs: []
     #
 49: label L6
     # live vars: $t0, $t10
     # refs: []
     #
 50: goto 54
     # live vars: $t0, $t10
     # refs: []
     #
 51: label L7
     # live vars:
     # refs: []
     #
 52: $t36 := 0
     # live vars: $t36
     # refs: []
     #
 53: abort($t36)
     # live vars: $t0, $t10
     # refs: []
     #
 54: label L8
     # live vars: $t0, $t10
     # refs: []
     #
 55: $t39 := borrow_local($t0)
     # live vars: $t0, $t10, $t39
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `x`] at line 68
     #
 56: $t40 := 0
     # live vars: $t0, $t10, $t39, $t40
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `x`] at line 68
     #
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
     # live vars: $t0, $t10, $t38
     # refs: [$t38 => #38]
     # #38
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #
 58: $t42 := borrow_local($t10)
     # live vars: $t0, $t10, $t38, $t42
     # refs: [$t38 => #38, $t42 => #42]
     # #38
     #   <no edges>
     # #42
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #   => #42 via [local `y`] at line 68
     #
 59: $t43 := 0
     # live vars: $t0, $t10, $t38, $t42, $t43
     # refs: [$t38 => #38, $t42 => #42]
     # #38
     #   <no edges>
     # #42
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #   => #42 via [local `y`] at line 68
     #
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
     # live vars: $t0, $t10, $t38, $t41
     # refs: [$t38 => #38, $t41 => #41]
     # #38
     #   <no edges>
     # #41
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #   -> #41 via [local `y`] at line 68
     #
 61: $t37 := ==($t38, $t41)
     # live vars: $t0, $t10, $t37
     # refs: []
     #
 62: if ($t37) goto 63 else goto 65
     # live vars: $t0, $t10
     # refs: []
     #
 63: label L9
     # live vars: $t0, $t10
     # refs: []
     #
 64: goto 68
     # live vars: $t0, $t10
     # refs: []
     #
 65: label L10
     # live vars:
     # refs: []
     #
 66: $t44 := 0
     # live vars: $t44
     # refs: []
     #
 67: abort($t44)
     # live vars: $t0, $t10
     # refs: []
     #
 68: label L11
     # live vars: $t0, $t10
     # refs: []
     #
 69: $t48 := borrow_local($t0)
     # live vars: $t0, $t10, $t48
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`] at line 70
     #
 70: $t49 := 1
     # live vars: $t0, $t10, $t48, $t49
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`] at line 70
     #
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
     # live vars: $t0, $t10, $t47
     # refs: [$t47 => #47]
     # #47
     #   <no edges>
     # #root
     #   -> #47 via [local `x`] at line 70
     #
 72: $t46 := read_ref($t47)
     # live vars: $t0, $t10, $t46
     # refs: []
     #
 73: $t52 := borrow_local($t10)
     # live vars: $t0, $t10, $t46, $t52
     # refs: [$t52 => #52]
     # #52
     #   <no edges>
     # #root
     #   => #52 via [local `y`] at line 70
     #
 74: $t53 := 1
     # live vars: $t0, $t10, $t46, $t52, $t53
     # refs: [$t52 => #52]
     # #52
     #   <no edges>
     # #root
     #   => #52 via [local `y`] at line 70
     #
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
     # live vars: $t0, $t10, $t46, $t51
     # refs: [$t51 => #51]
     # #51
     #   <no edges>
     # #root
     #   -> #51 via [local `y`] at line 70
     #
 76: $t50 := read_ref($t51)
     # live vars: $t0, $t10, $t46, $t50
     # refs: []
     #
 77: $t45 := ==($t46, $t50)
     # live vars: $t0, $t10, $t45
     # refs: []
     #
 78: if ($t45) goto 79 else goto 81
     # live vars: $t0, $t10
     # refs: []
     #
 79: label L12
     # live vars: $t0, $t10
     # refs: []
     #
 80: goto 84
     # live vars: $t0, $t10
     # refs: []
     #
 81: label L13
     # live vars:
     # refs: []
     #
 82: $t54 := 0
     # live vars: $t54
     # refs: []
     #
 83: abort($t54)
     # live vars: $t0, $t10
     # refs: []
     #
 84: label L14
     # live vars: $t0, $t10
     # refs: []
     #
 85: $t57 := borrow_local($t0)
     # live vars: $t10, $t57
     # refs: [$t57 => #57]
     # #57
     #   <no edges>
     # #root
     #   => #57 via [local `x`] at line 71
     #
 86: $t58 := 1
     # live vars: $t10, $t57, $t58
     # refs: [$t57 => #57]
     # #57
     #   <no edges>
     # #root
     #   => #57 via [local `x`] at line 71
     #
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
     # live vars: $t10, $t56
     # refs: [$t56 => #56]
     # #56
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #
 88: $t60 := borrow_local($t10)
     # live vars: $t56, $t60
     # refs: [$t56 => #56, $t60 => #60]
     # #56
     #   <no edges>
     # #60
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #   => #60 via [local `y`] at line 71
     #
 89: $t61 := 1
     # live vars: $t56, $t60, $t61
     # refs: [$t56 => #56, $t60 => #60]
     # #56
     #   <no edges>
     # #60
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #   => #60 via [local `y`] at line 71
     #
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
     # live vars: $t56, $t59
     # refs: [$t56 => #56, $t59 => #59]
     # #56
     #   <no edges>
     # #59
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #   -> #59 via [local `y`] at line 71
     #
 91: $t55 := ==($t56, $t59)
     # live vars: $t55
     # refs: []
     #
 92: if ($t55) goto 93 else goto 95
     # live vars:
     # refs: []
     #
 93: label L15
     # live vars:
     # refs: []
     #
 94: goto 98
     # live vars:
     # refs: []
     #
 95: label L16
     # live vars:
     # refs: []
     #
 96: $t62 := 0
     # live vars: $t62
     # refs: []
     #
 97: abort($t62)
     # live vars:
     # refs: []
     #
 98: label L17
     # live vars:
     # refs: []
     #
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64>
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: 0xc0ffee::m::Test2
     var $t9: vector<u64>
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64>
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64
     var $t15: bool
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64
     var $t19: bool
     var $t20: 0xc0ffee::m::Test2
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2>
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2
     var $t25: &0xc0ffee::m::Test2
     var $t26: &vector<0xc0ffee::m::Test2>
     var $t27: u64
     var $t28: u64
     var $t29: bool
     var $t30: &0xc0ffee::m::Test2
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: u64
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: 0xc0ffee::m::Test2
     var $t39: &0xc0ffee::m::Test2
     var $t40: &vector<0xc0ffee::m::Test2>
     var $t41: u64
     var $t42: 0xc0ffee::m::Test2
     var $t43: &0xc0ffee::m::Test2
     var $t44: &vector<0xc0ffee::m::Test2>
     var $t45: u64
     var $t46: u64
     var $t47: bool
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: &0xc0ffee::m::Test2
     var $t52: &vector<0xc0ffee::m::Test2>
     var $t53: u64
     var $t54: u64
     # live vars:
     # refs: []
     #
  0: $t2 := ["1", "2", "3"]
     # live vars: $t2
     # refs: []
     #
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t1
     # refs: []
     #
  2: $t4 := ["1", "2", "3"]
     # live vars: $t1, $t4
     # refs: []
     #
  3: $t3 := pack 0xc0ffee::m::Test2($t4)
     # live vars: $t1, $t3
     # refs: []
     #
  4: $t0 := vector($t1, $t3)
     # live vars: $t0
     # refs: []
     #
  5: $t7 := ["1", "2", "3"]
     # live vars: $t0, $t7
     # refs: []
     #
  6: $t6 := pack 0xc0ffee::m::Test2($t7)
     # live vars: $t0, $t6
     # refs: []
     #
  7: $t9 := ["2", "2", "2"]
     # live vars: $t0, $t6, $t9
     # refs: []
     #
  8: $t8 := pack 0xc0ffee::m::Test2($t9)
     # live vars: $t0, $t6, $t8
     # refs: []
     #
  9: $t11 := ["1", "2", "3"]
     # live vars: $t0, $t6, $t8, $t11
     # refs: []
     #
 10: $t10 := pack 0xc0ffee::m::Test2($t11)
     # live vars: $t0, $t6, $t8, $t10
     # refs: []
     #
 11: $t5 := vector($t6, $t8, $t10)
     # live vars: $t0, $t5
     # refs: []
     #
 12: $t13 := infer($t0)
     # live vars: $t0, $t5, $t13
     # refs: []
     #
 13: $t12 := !=($t13, $t5)
     # live vars: $t0, $t5, $t12
     # refs: []
     #
 14: if ($t12) goto 15 else goto 17
     # live vars: $t0, $t5
     # refs: []
     #
 15: label L0
     # live vars: $t0, $t5
     # refs: []
     #
 16: goto 20
     # live vars: $t0, $t5
     # refs: []
     #
 17: label L1
     # live vars:
     # refs: []
     #
 18: $t14 := 0
     # live vars: $t14
     # refs: []
     #
 19: abort($t14)
     # live vars: $t0, $t5
     # refs: []
     #
 20: label L2
     # live vars: $t0, $t5
     # refs: []
     #
 21: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => #16 via [local `x`] at line 80
     #
 22: $t17 := borrow_local($t5)
     # live vars: $t0, $t5, $t16, $t17
     # refs: [$t16 => #16, $t17 => #17]
     # #16
     #   <no edges>
     # #17
     #   <no edges>
     # #root
     #   => #16 via [local `x`] at line 80
     #   => #17 via [local `y`] at line 80
     #
 23: $t15 := !=($t16, $t17)
     # live vars: $t0, $t5, $t15
     # refs: []
     #
 24: if ($t15) goto 25 else goto 27
     # live vars: $t0, $t5
     # refs: []
     #
 25: label L3
     # live vars: $t0, $t5
     # refs: []
     #
 26: goto 30
     # live vars: $t0, $t5
     # refs: []
     #
 27: label L4
     # live vars:
     # refs: []
     #
 28: $t18 := 0
     # live vars: $t18
     # refs: []
     #
 29: abort($t18)
     # live vars: $t0, $t5
     # refs: []
     #
 30: label L5
     # live vars: $t0, $t5
     # refs: []
     #
 31: $t22 := borrow_local($t0)
     # live vars: $t0, $t5, $t22
     # refs: [$t22 => #22]
     # #22
     #   <no edges>
     # #root
     #   => #22 via [local `x`] at line 82
     #
 32: $t23 := 0
     # live vars: $t0, $t5, $t22, $t23
     # refs: [$t22 => #22]
     # #22
     #   <no edges>
     # #root
     #   => #22 via [local `x`] at line 82
     #
 33: $t21 := vector::borrow<0xc0ffee::m::Test2>($t22, $t23)
     # live vars: $t0, $t5, $t21
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   -> #21 via [local `x`] at line 82
     #
 34: $t20 := read_ref($t21)
     # live vars: $t0, $t5, $t20
     # refs: []
     #
 35: $t26 := borrow_local($t5)
     # live vars: $t0, $t5, $t20, $t26
     # refs: [$t26 => #26]
     # #26
     #   <no edges>
     # #root
     #   => #26 via [local `y`] at line 82
     #
 36: $t27 := 0
     # live vars: $t0, $t5, $t20, $t26, $t27
     # refs: [$t26 => #26]
     # #26
     #   <no edges>
     # #root
     #   => #26 via [local `y`] at line 82
     #
 37: $t25 := vector::borrow<0xc0ffee::m::Test2>($t26, $t27)
     # live vars: $t0, $t5, $t20, $t25
     # refs: [$t25 => #25]
     # #25
     #   <no edges>
     # #root
     #   -> #25 via [local `y`] at line 82
     #
 38: $t24 := read_ref($t25)
     # live vars: $t0, $t5, $t20, $t24
     # refs: []
     #
 39: $t19 := ==($t20, $t24)
     # live vars: $t0, $t5, $t19
     # refs: []
     #
 40: if ($t19) goto 41 else goto 43
     # live vars: $t0, $t5
     # refs: []
     #
 41: label L6
     # live vars: $t0, $t5
     # refs: []
     #
 42: goto 46
     # live vars: $t0, $t5
     # refs: []
     #
 43: label L7
     # live vars:
     # refs: []
     #
 44: $t28 := 0
     # live vars: $t28
     # refs: []
     #
 45: abort($t28)
     # live vars: $t0, $t5
     # refs: []
     #
 46: label L8
     # live vars: $t0, $t5
     # refs: []
     #
 47: $t31 := borrow_local($t0)
     # live vars: $t0, $t5, $t31
     # refs: [$t31 => #31]
     # #31
     #   <no edges>
     # #root
     #   => #31 via [local `x`] at line 83
     #
 48: $t32 := 0
     # live vars: $t0, $t5, $t31, $t32
     # refs: [$t31 => #31]
     # #31
     #   <no edges>
     # #root
     #   => #31 via [local `x`] at line 83
     #
 49: $t30 := vector::borrow<0xc0ffee::m::Test2>($t31, $t32)
     # live vars: $t0, $t5, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   -> #30 via [local `x`] at line 83
     #
 50: $t34 := borrow_local($t5)
     # live vars: $t0, $t5, $t30, $t34
     # refs: [$t30 => #30, $t34 => #34]
     # #30
     #   <no edges>
     # #34
     #   <no edges>
     # #root
     #   -> #30 via [local `x`] at line 83
     #   => #34 via [local `y`] at line 83
     #
 51: $t35 := 0
     # live vars: $t0, $t5, $t30, $t34, $t35
     # refs: [$t30 => #30, $t34 => #34]
     # #30
     #   <no edges>
     # #34
     #   <no edges>
     # #root
     #   -> #30 via [local `x`] at line 83
     #   => #34 via [local `y`] at line 83
     #
 52: $t33 := vector::borrow<0xc0ffee::m::Test2>($t34, $t35)
     # live vars: $t0, $t5, $t30, $t33
     # refs: [$t30 => #30, $t33 => #33]
     # #30
     #   <no edges>
     # #33
     #   <no edges>
     # #root
     #   -> #30 via [local `x`] at line 83
     #   -> #33 via [local `y`] at line 83
     #
 53: $t29 := ==($t30, $t33)
     # live vars: $t0, $t5, $t29
     # refs: []
     #
 54: if ($t29) goto 55 else goto 57
     # live vars: $t0, $t5
     # refs: []
     #
 55: label L9
     # live vars: $t0, $t5
     # refs: []
     #
 56: goto 60
     # live vars: $t0, $t5
     # refs: []
     #
 57: label L10
     # live vars:
     # refs: []
     #
 58: $t36 := 0
     # live vars: $t36
     # refs: []
     #
 59: abort($t36)
     # live vars: $t0, $t5
     # refs: []
     #
 60: label L11
     # live vars: $t0, $t5
     # refs: []
     #
 61: $t40 := borrow_local($t0)
     # live vars: $t0, $t5, $t40
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `x`] at line 85
     #
 62: $t41 := 1
     # live vars: $t0, $t5, $t40, $t41
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `x`] at line 85
     #
 63: $t39 := vector::borrow<0xc0ffee::m::Test2>($t40, $t41)
     # live vars: $t0, $t5, $t39
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   -> #39 via [local `x`] at line 85
     #
 64: $t38 := read_ref($t39)
     # live vars: $t0, $t5, $t38
     # refs: []
     #
 65: $t44 := borrow_local($t5)
     # live vars: $t0, $t5, $t38, $t44
     # refs: [$t44 => #44]
     # #44
     #   <no edges>
     # #root
     #   => #44 via [local `y`] at line 85
     #
 66: $t45 := 1
     # live vars: $t0, $t5, $t38, $t44, $t45
     # refs: [$t44 => #44]
     # #44
     #   <no edges>
     # #root
     #   => #44 via [local `y`] at line 85
     #
 67: $t43 := vector::borrow<0xc0ffee::m::Test2>($t44, $t45)
     # live vars: $t0, $t5, $t38, $t43
     # refs: [$t43 => #43]
     # #43
     #   <no edges>
     # #root
     #   -> #43 via [local `y`] at line 85
     #
 68: $t42 := read_ref($t43)
     # live vars: $t0, $t5, $t38, $t42
     # refs: []
     #
 69: $t37 := !=($t38, $t42)
     # live vars: $t0, $t5, $t37
     # refs: []
     #
 70: if ($t37) goto 71 else goto 73
     # live vars: $t0, $t5
     # refs: []
     #
 71: label L12
     # live vars: $t0, $t5
     # refs: []
     #
 72: goto 76
     # live vars: $t0, $t5
     # refs: []
     #
 73: label L13
     # live vars:
     # refs: []
     #
 74: $t46 := 0
     # live vars: $t46
     # refs: []
     #
 75: abort($t46)
     # live vars: $t0, $t5
     # refs: []
     #
 76: label L14
     # live vars: $t0, $t5
     # refs: []
     #
 77: $t49 := borrow_local($t0)
     # live vars: $t5, $t49
     # refs: [$t49 => #49]
     # #49
     #   <no edges>
     # #root
     #   => #49 via [local `x`] at line 86
     #
 78: $t50 := 1
     # live vars: $t5, $t49, $t50
     # refs: [$t49 => #49]
     # #49
     #   <no edges>
     # #root
     #   => #49 via [local `x`] at line 86
     #
 79: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
     # live vars: $t5, $t48
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   -> #48 via [local `x`] at line 86
     #
 80: $t52 := borrow_local($t5)
     # live vars: $t48, $t52
     # refs: [$t48 => #48, $t52 => #52]
     # #48
     #   <no edges>
     # #52
     #   <no edges>
     # #root
     #   -> #48 via [local `x`] at line 86
     #   => #52 via [local `y`] at line 86
     #
 81: $t53 := 1
     # live vars: $t48, $t52, $t53
     # refs: [$t48 => #48, $t52 => #52]
     # #48
     #   <no edges>
     # #52
     #   <no edges>
     # #root
     #   -> #48 via [local `x`] at line 86
     #   => #52 via [local `y`] at line 86
     #
 82: $t51 := vector::borrow<0xc0ffee::m::Test2>($t52, $t53)
     # live vars: $t48, $t51
     # refs: [$t48 => #48, $t51 => #51]
     # #48
     #   <no edges>
     # #51
     #   <no edges>
     # #root
     #   -> #48 via [local `x`] at line 86
     #   -> #51 via [local `y`] at line 86
     #
 83: $t47 := !=($t48, $t51)
     # live vars: $t47
     # refs: []
     #
 84: if ($t47) goto 85 else goto 87
     # live vars:
     # refs: []
     #
 85: label L15
     # live vars:
     # refs: []
     #
 86: goto 90
     # live vars:
     # refs: []
     #
 87: label L16
     # live vars:
     # refs: []
     #
 88: $t54 := 0
     # live vars: $t54
     # refs: []
     #
 89: abort($t54)
     # live vars:
     # refs: []
     #
 90: label L17
     # live vars:
     # refs: []
     #
 91: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
     # live vars:
     # refs: []
     #
  0: $t4 := 1
     # live vars: $t4
     # refs: []
     #
  1: $t5 := 2
     # live vars: $t4, $t5
     # refs: []
     #
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t3
     # refs: []
     #
  3: $t7 := 1
     # live vars: $t3, $t7
     # refs: []
     #
  4: $t8 := 2
     # live vars: $t3, $t7, $t8
     # refs: []
     #
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
     # live vars: $t3, $t6
     # refs: []
     #
  6: $t2 := vector($t3, $t6)
     # live vars: $t2
     # refs: []
     #
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t1
     # refs: []
     #
  8: $t0 := vector($t1)
     # live vars: $t0
     # refs: []
     #
  9: $t13 := 1
     # live vars: $t0, $t13
     # refs: []
     #
 10: $t14 := 2
     # live vars: $t0, $t13, $t14
     # refs: []
     #
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
     # live vars: $t0, $t12
     # refs: []
     #
 12: $t16 := 1
     # live vars: $t0, $t12, $t16
     # refs: []
     #
 13: $t17 := 2
     # live vars: $t0, $t12, $t16, $t17
     # refs: []
     #
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
     # live vars: $t0, $t12, $t15
     # refs: []
     #
 15: $t11 := vector($t12, $t15)
     # live vars: $t0, $t11
     # refs: []
     #
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
     # live vars: $t0, $t10
     # refs: []
     #
 17: $t21 := 1
     # live vars: $t0, $t10, $t21
     # refs: []
     #
 18: $t22 := 2
     # live vars: $t0, $t10, $t21, $t22
     # refs: []
     #
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
     # live vars: $t0, $t10, $t20
     # refs: []
     #
 20: $t24 := 1
     # live vars: $t0, $t10, $t20, $t24
     # refs: []
     #
 21: $t25 := 2
     # live vars: $t0, $t10, $t20, $t24, $t25
     # refs: []
     #
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
     # live vars: $t0, $t10, $t20, $t23
     # refs: []
     #
 23: $t19 := vector($t20, $t23)
     # live vars: $t0, $t10, $t19
     # refs: []
     #
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
     # live vars: $t0, $t10, $t18
     # refs: []
     #
 25: $t9 := vector($t10, $t18)
     # live vars: $t0, $t9
     # refs: []
     #
 26: $t27 := infer($t0)
     # live vars: $t0, $t9, $t27
     # refs: []
     #
 27: $t26 := !=($t27, $t9)
     # live vars: $t0, $t9, $t26
     # refs: []
     #
 28: if ($t26) goto 29 else goto 31
     # live vars: $t0, $t9
     # refs: []
     #
 29: label L0
     # live vars: $t0, $t9
     # refs: []
     #
 30: goto 34
     # live vars: $t0, $t9
     # refs: []
     #
 31: label L1
     # live vars:
     # refs: []
     #
 32: $t28 := 0
     # live vars: $t28
     # refs: []
     #
 33: abort($t28)
     # live vars: $t0, $t9
     # refs: []
     #
 34: label L2
     # live vars: $t0, $t9
     # refs: []
     #
 35: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 94
     #
 36: $t31 := borrow_local($t9)
     # live vars: $t0, $t9, $t30, $t31
     # refs: [$t30 => #30, $t31 => #31]
     # #30
     #   <no edges>
     # #31
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 94
     #   => #31 via [local `y`] at line 94
     #
 37: $t29 := !=($t30, $t31)
     # live vars: $t0, $t9, $t29
     # refs: []
     #
 38: if ($t29) goto 39 else goto 41
     # live vars: $t0, $t9
     # refs: []
     #
 39: label L3
     # live vars: $t0, $t9
     # refs: []
     #
 40: goto 44
     # live vars: $t0, $t9
     # refs: []
     #
 41: label L4
     # live vars:
     # refs: []
     #
 42: $t32 := 0
     # live vars: $t32
     # refs: []
     #
 43: abort($t32)
     # live vars: $t0, $t9
     # refs: []
     #
 44: label L5
     # live vars: $t0, $t9
     # refs: []
     #
 45: $t36 := borrow_local($t0)
     # live vars: $t0, $t9, $t36
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   => #36 via [local `x`] at line 96
     #
 46: $t37 := 0
     # live vars: $t0, $t9, $t36, $t37
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   => #36 via [local `x`] at line 96
     #
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
     # live vars: $t0, $t9, $t35
     # refs: [$t35 => #35]
     # #35
     #   <no edges>
     # #root
     #   -> #35 via [local `x`] at line 96
     #
 48: $t34 := read_ref($t35)
     # live vars: $t0, $t9, $t34
     # refs: []
     #
 49: $t40 := borrow_local($t9)
     # live vars: $t0, $t9, $t34, $t40
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `y`] at line 96
     #
 50: $t41 := 0
     # live vars: $t0, $t9, $t34, $t40, $t41
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `y`] at line 96
     #
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
     # live vars: $t0, $t9, $t34, $t39
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   -> #39 via [local `y`] at line 96
     #
 52: $t38 := read_ref($t39)
     # live vars: $t0, $t9, $t34, $t38
     # refs: []
     #
 53: $t33 := ==($t34, $t38)
     # live vars: $t0, $t9, $t33
     # refs: []
     #
 54: if ($t33) goto 55 else goto 57
     # live vars: $t0, $t9
     # refs: []
     #
 55: label L6
     # live vars: $t0, $t9
     # refs: []
     #
 56: goto 60
     # live vars: $t0, $t9
     # refs: []
     #
 57: label L7
     # live vars:
     # refs: []
     #
 58: $t42 := 0
     # live vars: $t42
     # refs: []
     #
 59: abort($t42)
     # live vars: $t0, $t9
     # refs: []
     #
 60: label L8
     # live vars: $t0, $t9
     # refs: []
     #
 61: $t45 := borrow_local($t0)
     # live vars: $t0, $t9, $t45
     # refs: [$t45 => #45]
     # #45
     #   <no edges>
     # #root
     #   => #45 via [local `x`] at line 97
     #
 62: $t46 := 0
     # live vars: $t0, $t9, $t45, $t46
     # refs: [$t45 => #45]
     # #45
     #   <no edges>
     # #root
     #   => #45 via [local `x`] at line 97
     #
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
     # live vars: $t0, $t9, $t44
     # refs: [$t44 => #44]
     # #44
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #
 64: $t48 := borrow_local($t9)
     # live vars: $t0, $t9, $t44, $t48
     # refs: [$t44 => #44, $t48 => #48]
     # #44
     #   <no edges>
     # #48
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #   => #48 via [local `y`] at line 97
     #
 65: $t49 := 0
     # live vars: $t0, $t9, $t44, $t48, $t49
     # refs: [$t44 => #44, $t48 => #48]
     # #44
     #   <no edges>
     # #48
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #   => #48 via [local `y`] at line 97
     #
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
     # live vars: $t0, $t9, $t44, $t47
     # refs: [$t44 => #44, $t47 => #47]
     # #44
     #   <no edges>
     # #47
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #   -> #47 via [local `y`] at line 97
     #
 67: $t43 := ==($t44, $t47)
     # live vars: $t0, $t9, $t43
     # refs: []
     #
 68: if ($t43) goto 69 else goto 71
     # live vars: $t0, $t9
     # refs: []
     #
 69: label L9
     # live vars: $t0, $t9
     # refs: []
     #
 70: goto 74
     # live vars: $t0, $t9
     # refs: []
     #
 71: label L10
     # live vars:
     # refs: []
     #
 72: $t50 := 0
     # live vars: $t50
     # refs: []
     #
 73: abort($t50)
     # live vars: $t0, $t9
     # refs: []
     #
 74: label L11
     # live vars: $t0, $t9
     # refs: []
     #
 75: $t54 := borrow_local($t0)
     # live vars: $t0, $t9, $t54
     # refs: [$t54 => #54]
     # #54
     #   <no edges>
     # #root
     #   => #54 via [local `x`] at line 99
     #
 76: $t55 := 0
     # live vars: $t0, $t9, $t54, $t55
     # refs: [$t54 => #54]
     # #54
     #   <no edges>
     # #root
     #   => #54 via [local `x`] at line 99
     #
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
     # live vars: $t0, $t9, $t53
     # refs: [$t53 => #53]
     # #53
     #   <no edges>
     # #root
     #   -> #53 via [local `x`] at line 99
     #
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t0, $t9, $t56
     # refs: [$t56 => #56]
     # #56
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 99
     #
 79: $t52 := read_ref($t56)
     # live vars: $t0, $t9, $t52
     # refs: []
     #
 80: $t59 := borrow_local($t9)
     # live vars: $t0, $t9, $t52, $t59
     # refs: [$t59 => #59]
     # #59
     #   <no edges>
     # #root
     #   => #59 via [local `y`] at line 99
     #
 81: $t60 := 0
     # live vars: $t0, $t9, $t52, $t59, $t60
     # refs: [$t59 => #59]
     # #59
     #   <no edges>
     # #root
     #   => #59 via [local `y`] at line 99
     #
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
     # live vars: $t0, $t9, $t52, $t58
     # refs: [$t58 => #58]
     # #58
     #   <no edges>
     # #root
     #   -> #58 via [local `y`] at line 99
     #
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
     # live vars: $t0, $t9, $t52, $t61
     # refs: [$t61 => #61]
     # #61
     #   <no edges>
     # #root
     #   -> #61 via [local `y`] at line 99
     #
 84: $t57 := read_ref($t61)
     # live vars: $t0, $t9, $t52, $t57
     # refs: []
     #
 85: $t51 := ==($t52, $t57)
     # live vars: $t0, $t9, $t51
     # refs: []
     #
 86: if ($t51) goto 87 else goto 89
     # live vars: $t0, $t9
     # refs: []
     #
 87: label L12
     # live vars: $t0, $t9
     # refs: []
     #
 88: goto 92
     # live vars: $t0, $t9
     # refs: []
     #
 89: label L13
     # live vars:
     # refs: []
     #
 90: $t62 := 0
     # live vars: $t62
     # refs: []
     #
 91: abort($t62)
     # live vars: $t0, $t9
     # refs: []
     #
 92: label L14
     # live vars: $t0, $t9
     # refs: []
     #
 93: $t66 := borrow_local($t0)
     # live vars: $t9, $t66
     # refs: [$t66 => #66]
     # #66
     #   <no edges>
     # #root
     #   => #66 via [local `x`] at line 100
     #
 94: $t67 := 0
     # live vars: $t9, $t66, $t67
     # refs: [$t66 => #66]
     # #66
     #   <no edges>
     # #root
     #   => #66 via [local `x`] at line 100
     #
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
     # live vars: $t9, $t65
     # refs: [$t65 => #65]
     # #65
     #   <no edges>
     # #root
     #   -> #65 via [local `x`] at line 100
     #
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
     # live vars: $t9, $t64
     # refs: [$t64 => #64]
     # #64
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #
 97: $t70 := borrow_local($t9)
     # live vars: $t64, $t70
     # refs: [$t64 => #64, $t70 => #70]
     # #64
     #   <no edges>
     # #70
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   => #70 via [local `y`] at line 100
     #
 98: $t71 := 0
     # live vars: $t64, $t70, $t71
     # refs: [$t64 => #64, $t70 => #70]
     # #64
     #   <no edges>
     # #70
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   => #70 via [local `y`] at line 100
     #
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
     # live vars: $t64, $t69
     # refs: [$t64 => #64, $t69 => #69]
     # #64
     #   <no edges>
     # #69
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   -> #69 via [local `y`] at line 100
     #
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
     # live vars: $t64, $t68
     # refs: [$t64 => #64, $t68 => #68]
     # #64
     #   <no edges>
     # #68
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   -> #68 via [local `y`] at line 100
     #
101: $t63 := ==($t64, $t68)
     # live vars: $t63
     # refs: []
     #
102: if ($t63) goto 103 else goto 105
     # live vars:
     # refs: []
     #
103: label L15
     # live vars:
     # refs: []
     #
104: goto 108
     # live vars:
     # refs: []
     #
105: label L16
     # live vars:
     # refs: []
     #
106: $t72 := 0
     # live vars: $t72
     # refs: []
     #
107: abort($t72)
     # live vars:
     # refs: []
     #
108: label L17
     # live vars:
     # refs: []
     #
109: return ()
}

============ after AbortAnalysisProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t1 := 1
     # abort state: {returns,aborts}
     # live vars: $t1
     # refs: []
     #
  1: $t2 := 2
     # abort state: {returns,aborts}
     # live vars: $t1, $t2
     # refs: []
     #
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
  3: $t4 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t4
     # refs: []
     #
  4: $t5 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t4, $t5
     # refs: []
     #
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
  6: $t7 := infer($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t7
     # refs: []
     #
  7: $t6 := ==($t7, $t3)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t6
     # refs: []
     #
  8: if ($t6) goto 9 else goto 11
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
  9: label L0
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 10: goto 14
     # abort state: {aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 11: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 12: $t8 := 0
     # abort state: {aborts}
     # live vars: $t8
     # refs: []
     #
 13: abort($t8)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 14: label L2
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 15: $t10 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t10
     # refs: [$t10 => #10]
     # #10
     #   <no edges>
     # #root
     #   => #10 via [local `x`] at line 22
     #
 16: $t11 := borrow_local($t3)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t10, $t11
     # refs: [$t10 => #10, $t11 => #11]
     # #10
     #   <no edges>
     # #11
     #   <no edges>
     # #root
     #   => #10 via [local `x`] at line 22
     #   => #11 via [local `y`] at line 22
     #
 17: $t9 := ==($t10, $t11)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t9
     # refs: []
     #
 18: if ($t9) goto 19 else goto 21
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 19: label L3
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 20: goto 24
     # abort state: {aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 21: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 22: $t12 := 0
     # abort state: {aborts}
     # live vars: $t12
     # refs: []
     #
 23: abort($t12)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 24: label L5
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 25: $t15 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t15
     # refs: [$t15 => #15]
     # #15
     #   <no edges>
     # #root
     #   => #15 via [local `x`] at line 24
     #
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => #16 via [local `x`, field `a`] at line 24
     #
 27: $t14 := read_ref($t16)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t14
     # refs: []
     #
 28: $t18 := borrow_local($t3)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t14, $t18
     # refs: [$t18 => #18]
     # #18
     #   <no edges>
     # #root
     #   => #18 via [local `y`] at line 24
     #
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t14, $t19
     # refs: [$t19 => #19]
     # #19
     #   <no edges>
     # #root
     #   => #19 via [local `y`, field `a`] at line 24
     #
 30: $t17 := read_ref($t19)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t14, $t17
     # refs: []
     #
 31: $t13 := ==($t14, $t17)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t13
     # refs: []
     #
 32: if ($t13) goto 33 else goto 35
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 33: label L6
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 34: goto 38
     # abort state: {aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 35: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 36: $t20 := 0
     # abort state: {aborts}
     # live vars: $t20
     # refs: []
     #
 37: abort($t20)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 38: label L8
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 39: $t23 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => #23 via [local `x`] at line 25
     #
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t22
     # refs: [$t22 => #22]
     # #22
     #   <no edges>
     # #root
     #   => #22 via [local `x`, field `a`] at line 25
     #
 41: $t25 := borrow_local($t3)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t22, $t25
     # refs: [$t22 => #22, $t25 => #25]
     # #22
     #   <no edges>
     # #25
     #   <no edges>
     # #root
     #   => #22 via [local `x`, field `a`] at line 25
     #   => #25 via [local `y`] at line 25
     #
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t22, $t24
     # refs: [$t22 => #22, $t24 => #24]
     # #22
     #   <no edges>
     # #24
     #   <no edges>
     # #root
     #   => #22 via [local `x`, field `a`] at line 25
     #   => #24 via [local `y`, field `a`] at line 25
     #
 43: $t21 := ==($t22, $t24)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t21
     # refs: []
     #
 44: if ($t21) goto 45 else goto 47
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 45: label L9
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 46: goto 50
     # abort state: {aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 47: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 48: $t26 := 0
     # abort state: {aborts}
     # live vars: $t26
     # refs: []
     #
 49: abort($t26)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 50: label L11
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 51: $t29 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   => #29 via [local `x`] at line 27
     #
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`, field `b`] at line 27
     #
 53: $t28 := read_ref($t30)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t28
     # refs: []
     #
 54: $t32 := borrow_local($t3)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t28, $t32
     # refs: [$t32 => #32]
     # #32
     #   <no edges>
     # #root
     #   => #32 via [local `y`] at line 27
     #
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t28, $t33
     # refs: [$t33 => #33]
     # #33
     #   <no edges>
     # #root
     #   => #33 via [local `y`, field `b`] at line 27
     #
 56: $t31 := read_ref($t33)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t28, $t31
     # refs: []
     #
 57: $t27 := ==($t28, $t31)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3, $t27
     # refs: []
     #
 58: if ($t27) goto 59 else goto 61
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 59: label L12
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 60: goto 64
     # abort state: {aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 61: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 62: $t34 := 0
     # abort state: {aborts}
     # live vars: $t34
     # refs: []
     #
 63: abort($t34)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 64: label L14
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
 65: $t37 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t3, $t37
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`] at line 28
     #
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
     # abort state: {returns,aborts}
     # live vars: $t3, $t36
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   => #36 via [local `x`, field `b`] at line 28
     #
 67: $t39 := borrow_local($t3)
     # abort state: {returns,aborts}
     # live vars: $t36, $t39
     # refs: [$t36 => #36, $t39 => #39]
     # #36
     #   <no edges>
     # #39
     #   <no edges>
     # #root
     #   => #36 via [local `x`, field `b`] at line 28
     #   => #39 via [local `y`] at line 28
     #
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
     # abort state: {returns,aborts}
     # live vars: $t36, $t38
     # refs: [$t36 => #36, $t38 => #38]
     # #36
     #   <no edges>
     # #38
     #   <no edges>
     # #root
     #   => #36 via [local `x`, field `b`] at line 28
     #   => #38 via [local `y`, field `b`] at line 28
     #
 69: $t35 := ==($t36, $t38)
     # abort state: {returns,aborts}
     # live vars: $t35
     # refs: []
     #
 70: if ($t35) goto 71 else goto 73
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 71: label L15
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 72: goto 76
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 73: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 74: $t40 := 0
     # abort state: {aborts}
     # live vars: $t40
     # refs: []
     #
 75: abort($t40)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 76: label L17
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64>
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64
     var $t7: bool
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64
     var $t11: bool
     var $t12: vector<u64>
     var $t13: &0xc0ffee::m::Test2
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: bool
     var $t20: &vector<u64>
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2
     var $t24: u64
     var $t25: bool
     var $t26: u64
     var $t27: &u64
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: u64
     var $t32: &u64
     var $t33: &vector<u64>
     var $t34: &0xc0ffee::m::Test2
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: &u64
     var $t43: &vector<u64>
     var $t44: &0xc0ffee::m::Test2
     var $t45: u64
     var $t46: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t1 := ["1", "2", "3"]
     # abort state: {returns,aborts}
     # live vars: $t1
     # refs: []
     #
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
  2: $t3 := ["1", "2", "3"]
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: []
     #
  3: $t2 := pack 0xc0ffee::m::Test2($t3)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
  4: $t5 := infer($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t5
     # refs: []
     #
  5: $t4 := ==($t5, $t2)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t4
     # refs: []
     #
  6: if ($t4) goto 7 else goto 9
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
  7: label L0
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
  8: goto 12
     # abort state: {aborts}
     # live vars: $t0, $t2
     # refs: []
     #
  9: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 10: $t6 := 0
     # abort state: {aborts}
     # live vars: $t6
     # refs: []
     #
 11: abort($t6)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 12: label L2
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 13: $t8 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t8
     # refs: [$t8 => #8]
     # #8
     #   <no edges>
     # #root
     #   => #8 via [local `x`] at line 36
     #
 14: $t9 := borrow_local($t2)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t8, $t9
     # refs: [$t8 => #8, $t9 => #9]
     # #8
     #   <no edges>
     # #9
     #   <no edges>
     # #root
     #   => #8 via [local `x`] at line 36
     #   => #9 via [local `y`] at line 36
     #
 15: $t7 := ==($t8, $t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t7
     # refs: []
     #
 16: if ($t7) goto 17 else goto 19
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 17: label L3
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 18: goto 22
     # abort state: {aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 19: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 20: $t10 := 0
     # abort state: {aborts}
     # live vars: $t10
     # refs: []
     #
 21: abort($t10)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 22: label L5
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 23: $t13 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t13
     # refs: [$t13 => #13]
     # #13
     #   <no edges>
     # #root
     #   => #13 via [local `x`] at line 38
     #
 24: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t13)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t14
     # refs: [$t14 => #14]
     # #14
     #   <no edges>
     # #root
     #   => #14 via [local `x`, field `a`] at line 38
     #
 25: $t12 := read_ref($t14)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t12
     # refs: []
     #
 26: $t16 := borrow_local($t2)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t12, $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => #16 via [local `y`] at line 38
     #
 27: $t17 := borrow_field<0xc0ffee::m::Test2>.a($t16)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t12, $t17
     # refs: [$t17 => #17]
     # #17
     #   <no edges>
     # #root
     #   => #17 via [local `y`, field `a`] at line 38
     #
 28: $t15 := read_ref($t17)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t12, $t15
     # refs: []
     #
 29: $t11 := ==($t12, $t15)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t11
     # refs: []
     #
 30: if ($t11) goto 31 else goto 33
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 31: label L6
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 32: goto 36
     # abort state: {aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 33: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 34: $t18 := 0
     # abort state: {aborts}
     # live vars: $t18
     # refs: []
     #
 35: abort($t18)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 36: label L8
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 37: $t21 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t21
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => #21 via [local `x`] at line 39
     #
 38: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t21)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t20
     # refs: [$t20 => #20]
     # #20
     #   <no edges>
     # #root
     #   => #20 via [local `x`, field `a`] at line 39
     #
 39: $t23 := borrow_local($t2)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t20, $t23
     # refs: [$t20 => #20, $t23 => #23]
     # #20
     #   <no edges>
     # #23
     #   <no edges>
     # #root
     #   => #20 via [local `x`, field `a`] at line 39
     #   => #23 via [local `y`] at line 39
     #
 40: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t23)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t20, $t22
     # refs: [$t20 => #20, $t22 => #22]
     # #20
     #   <no edges>
     # #22
     #   <no edges>
     # #root
     #   => #20 via [local `x`, field `a`] at line 39
     #   => #22 via [local `y`, field `a`] at line 39
     #
 41: $t19 := ==($t20, $t22)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t19
     # refs: []
     #
 42: if ($t19) goto 43 else goto 45
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 43: label L9
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 44: goto 48
     # abort state: {aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 45: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 46: $t24 := 0
     # abort state: {aborts}
     # live vars: $t24
     # refs: []
     #
 47: abort($t24)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 48: label L11
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 49: $t29 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   => #29 via [local `x`] at line 41
     #
 50: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t28
     # refs: [$t28 => #28]
     # #28
     #   <no edges>
     # #root
     #   => #28 via [local `x`, field `a`] at line 41
     #
 51: $t30 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t28, $t30
     # refs: [$t28 => #28]
     # #28
     #   <no edges>
     # #root
     #   => #28 via [local `x`, field `a`] at line 41
     #
 52: $t27 := vector::borrow<u64>($t28, $t30)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t27
     # refs: [$t27 => #27]
     # #27
     #   <no edges>
     # #root
     #   -> #27 via [local `x`, field `a`] at line 41
     #
 53: $t26 := read_ref($t27)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t26
     # refs: []
     #
 54: $t34 := borrow_local($t2)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t26, $t34
     # refs: [$t34 => #34]
     # #34
     #   <no edges>
     # #root
     #   => #34 via [local `y`] at line 41
     #
 55: $t33 := borrow_field<0xc0ffee::m::Test2>.a($t34)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t26, $t33
     # refs: [$t33 => #33]
     # #33
     #   <no edges>
     # #root
     #   => #33 via [local `y`, field `a`] at line 41
     #
 56: $t35 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t26, $t33, $t35
     # refs: [$t33 => #33]
     # #33
     #   <no edges>
     # #root
     #   => #33 via [local `y`, field `a`] at line 41
     #
 57: $t32 := vector::borrow<u64>($t33, $t35)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t26, $t32
     # refs: [$t32 => #32]
     # #32
     #   <no edges>
     # #root
     #   -> #32 via [local `y`, field `a`] at line 41
     #
 58: $t31 := read_ref($t32)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t26, $t31
     # refs: []
     #
 59: $t25 := ==($t26, $t31)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t25
     # refs: []
     #
 60: if ($t25) goto 61 else goto 63
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 61: label L12
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 62: goto 66
     # abort state: {aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 63: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 64: $t36 := 0
     # abort state: {aborts}
     # live vars: $t36
     # refs: []
     #
 65: abort($t36)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 66: label L14
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 67: $t40 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t2, $t40
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `x`] at line 42
     #
 68: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
     # abort state: {returns,aborts}
     # live vars: $t2, $t39
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `x`, field `a`] at line 42
     #
 69: $t41 := 0
     # abort state: {returns,aborts}
     # live vars: $t2, $t39, $t41
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `x`, field `a`] at line 42
     #
 70: $t38 := vector::borrow<u64>($t39, $t41)
     # abort state: {returns,aborts}
     # live vars: $t2, $t38
     # refs: [$t38 => #38]
     # #38
     #   <no edges>
     # #root
     #   -> #38 via [local `x`, field `a`] at line 42
     #
 71: $t44 := borrow_local($t2)
     # abort state: {returns,aborts}
     # live vars: $t38, $t44
     # refs: [$t38 => #38, $t44 => #44]
     # #38
     #   <no edges>
     # #44
     #   <no edges>
     # #root
     #   -> #38 via [local `x`, field `a`] at line 42
     #   => #44 via [local `y`] at line 42
     #
 72: $t43 := borrow_field<0xc0ffee::m::Test2>.a($t44)
     # abort state: {returns,aborts}
     # live vars: $t38, $t43
     # refs: [$t38 => #38, $t43 => #43]
     # #38
     #   <no edges>
     # #43
     #   <no edges>
     # #root
     #   -> #38 via [local `x`, field `a`] at line 42
     #   => #43 via [local `y`, field `a`] at line 42
     #
 73: $t45 := 0
     # abort state: {returns,aborts}
     # live vars: $t38, $t43, $t45
     # refs: [$t38 => #38, $t43 => #43]
     # #38
     #   <no edges>
     # #43
     #   <no edges>
     # #root
     #   -> #38 via [local `x`, field `a`] at line 42
     #   => #43 via [local `y`, field `a`] at line 42
     #
 74: $t42 := vector::borrow<u64>($t43, $t45)
     # abort state: {returns,aborts}
     # live vars: $t38, $t42
     # refs: [$t38 => #38, $t42 => #42]
     # #38
     #   <no edges>
     # #42
     #   <no edges>
     # #root
     #   -> #38 via [local `x`, field `a`] at line 42
     #   -> #42 via [local `y`, field `a`] at line 42
     #
 75: $t37 := ==($t38, $t42)
     # abort state: {returns,aborts}
     # live vars: $t37
     # refs: []
     #
 76: if ($t37) goto 77 else goto 79
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 77: label L15
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 78: goto 82
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 79: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 80: $t46 := 0
     # abort state: {aborts}
     # live vars: $t46
     # refs: []
     #
 81: abort($t46)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 82: label L17
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 83: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t3 := 1
     # abort state: {returns,aborts}
     # live vars: $t3
     # refs: []
     #
  1: $t4 := 2
     # abort state: {returns,aborts}
     # live vars: $t3, $t4
     # refs: []
     #
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # abort state: {returns,aborts}
     # live vars: $t2
     # refs: []
     #
  3: $t1 := vector($t2)
     # abort state: {returns,aborts}
     # live vars: $t1
     # refs: []
     #
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
  5: $t8 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t8
     # refs: []
     #
  6: $t9 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t8, $t9
     # refs: []
     #
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t7
     # refs: []
     #
  8: $t11 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t7, $t11
     # refs: []
     #
  9: $t12 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t7, $t11, $t12
     # refs: []
     #
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
     # abort state: {returns,aborts}
     # live vars: $t0, $t7, $t10
     # refs: []
     #
 11: $t6 := vector($t7, $t10)
     # abort state: {returns,aborts}
     # live vars: $t0, $t6
     # refs: []
     #
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 13: $t14 := infer($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t14
     # refs: []
     #
 14: $t13 := !=($t14, $t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t13
     # refs: []
     #
 15: if ($t13) goto 16 else goto 18
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 16: label L0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 17: goto 21
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 18: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 19: $t15 := 0
     # abort state: {aborts}
     # live vars: $t15
     # refs: []
     #
 20: abort($t15)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 21: label L2
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 22: $t17 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t17
     # refs: [$t17 => #17]
     # #17
     #   <no edges>
     # #root
     #   => #17 via [local `x`] at line 50
     #
 23: $t18 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t17, $t18
     # refs: [$t17 => #17, $t18 => #18]
     # #17
     #   <no edges>
     # #18
     #   <no edges>
     # #root
     #   => #17 via [local `x`] at line 50
     #   => #18 via [local `y`] at line 50
     #
 24: $t16 := !=($t17, $t18)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t16
     # refs: []
     #
 25: if ($t16) goto 26 else goto 28
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 26: label L3
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 27: goto 31
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 28: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 29: $t19 := 0
     # abort state: {aborts}
     # live vars: $t19
     # refs: []
     #
 30: abort($t19)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 31: label L5
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 32: $t22 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t22
     # refs: [$t22 => #22]
     # #22
     #   <no edges>
     # #root
     #   => #22 via [local `x`] at line 52
     #
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => #23 via [local `x`, field `a`] at line 52
     #
 34: $t21 := read_ref($t23)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t21
     # refs: []
     #
 35: $t25 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t21, $t25
     # refs: [$t25 => #25]
     # #25
     #   <no edges>
     # #root
     #   => #25 via [local `y`] at line 52
     #
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t21, $t26
     # refs: [$t26 => #26]
     # #26
     #   <no edges>
     # #root
     #   => #26 via [local `y`, field `a`] at line 52
     #
 37: $t24 := read_ref($t26)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t21, $t24
     # refs: []
     #
 38: $t20 := !=($t21, $t24)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t20
     # refs: []
     #
 39: if ($t20) goto 40 else goto 42
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 40: label L6
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 41: goto 45
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 42: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 43: $t27 := 0
     # abort state: {aborts}
     # live vars: $t27
     # refs: []
     #
 44: abort($t27)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 45: label L8
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 46: $t30 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 53
     #
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   => #29 via [local `x`, field `a`] at line 53
     #
 48: $t32 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t29, $t32
     # refs: [$t29 => #29, $t32 => #32]
     # #29
     #   <no edges>
     # #32
     #   <no edges>
     # #root
     #   => #29 via [local `x`, field `a`] at line 53
     #   => #32 via [local `y`] at line 53
     #
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t29, $t31
     # refs: [$t29 => #29, $t31 => #31]
     # #29
     #   <no edges>
     # #31
     #   <no edges>
     # #root
     #   => #29 via [local `x`, field `a`] at line 53
     #   => #31 via [local `y`, field `a`] at line 53
     #
 50: $t28 := !=($t29, $t31)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t28
     # refs: []
     #
 51: if ($t28) goto 52 else goto 54
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 52: label L9
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 53: goto 57
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 54: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 55: $t33 := 0
     # abort state: {aborts}
     # live vars: $t33
     # refs: []
     #
 56: abort($t33)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 57: label L11
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 58: $t38 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t38
     # refs: [$t38 => #38]
     # #38
     #   <no edges>
     # #root
     #   => #38 via [local `x`] at line 55
     #
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t37
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`, field `a`] at line 55
     #
 60: $t39 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t37, $t39
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [local `x`, field `a`] at line 55
     #
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t36
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   -> #36 via [local `x`, field `a`] at line 55
     #
 62: $t35 := read_ref($t36)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t35
     # refs: []
     #
 63: $t43 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t35, $t43
     # refs: [$t43 => #43]
     # #43
     #   <no edges>
     # #root
     #   => #43 via [local `y`] at line 55
     #
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t35, $t42
     # refs: [$t42 => #42]
     # #42
     #   <no edges>
     # #root
     #   => #42 via [local `y`, field `a`] at line 55
     #
 65: $t44 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t35, $t42, $t44
     # refs: [$t42 => #42]
     # #42
     #   <no edges>
     # #root
     #   => #42 via [local `y`, field `a`] at line 55
     #
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t35, $t41
     # refs: [$t41 => #41]
     # #41
     #   <no edges>
     # #root
     #   -> #41 via [local `y`, field `a`] at line 55
     #
 67: $t40 := read_ref($t41)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t35, $t40
     # refs: []
     #
 68: $t34 := ==($t35, $t40)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t34
     # refs: []
     #
 69: if ($t34) goto 70 else goto 72
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 70: label L12
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 71: goto 75
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 72: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 73: $t45 := 0
     # abort state: {aborts}
     # live vars: $t45
     # refs: []
     #
 74: abort($t45)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 75: label L14
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 76: $t49 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t5, $t49
     # refs: [$t49 => #49]
     # #49
     #   <no edges>
     # #root
     #   => #49 via [local `x`] at line 56
     #
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
     # abort state: {returns,aborts}
     # live vars: $t5, $t48
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`, field `a`] at line 56
     #
 78: $t50 := 0
     # abort state: {returns,aborts}
     # live vars: $t5, $t48, $t50
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`, field `a`] at line 56
     #
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
     # abort state: {returns,aborts}
     # live vars: $t5, $t47
     # refs: [$t47 => #47]
     # #47
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #
 80: $t53 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t47, $t53
     # refs: [$t47 => #47, $t53 => #53]
     # #47
     #   <no edges>
     # #53
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   => #53 via [local `y`] at line 56
     #
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # abort state: {returns,aborts}
     # live vars: $t47, $t52
     # refs: [$t47 => #47, $t52 => #52]
     # #47
     #   <no edges>
     # #52
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   => #52 via [local `y`, field `a`] at line 56
     #
 82: $t54 := 0
     # abort state: {returns,aborts}
     # live vars: $t47, $t52, $t54
     # refs: [$t47 => #47, $t52 => #52]
     # #47
     #   <no edges>
     # #52
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   => #52 via [local `y`, field `a`] at line 56
     #
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
     # abort state: {returns,aborts}
     # live vars: $t47, $t51
     # refs: [$t47 => #47, $t51 => #51]
     # #47
     #   <no edges>
     # #51
     #   <no edges>
     # #root
     #   -> #47 via [local `x`, field `a`] at line 56
     #   -> #51 via [local `y`, field `a`] at line 56
     #
 84: $t46 := ==($t47, $t51)
     # abort state: {returns,aborts}
     # live vars: $t46
     # refs: []
     #
 85: if ($t46) goto 86 else goto 88
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 86: label L15
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 87: goto 91
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 88: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 89: $t55 := 0
     # abort state: {aborts}
     # live vars: $t55
     # refs: []
     #
 90: abort($t55)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 91: label L17
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t2 := 1
     # abort state: {returns,aborts}
     # live vars: $t2
     # refs: []
     #
  1: $t3 := 2
     # abort state: {returns,aborts}
     # live vars: $t2, $t3
     # refs: []
     #
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # abort state: {returns,aborts}
     # live vars: $t1
     # refs: []
     #
  3: $t5 := 1
     # abort state: {returns,aborts}
     # live vars: $t1, $t5
     # refs: []
     #
  4: $t6 := 2
     # abort state: {returns,aborts}
     # live vars: $t1, $t5, $t6
     # refs: []
     #
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
     # abort state: {returns,aborts}
     # live vars: $t1, $t4
     # refs: []
     #
  6: $t8 := 1
     # abort state: {returns,aborts}
     # live vars: $t1, $t4, $t8
     # refs: []
     #
  7: $t9 := 2
     # abort state: {returns,aborts}
     # live vars: $t1, $t4, $t8, $t9
     # refs: []
     #
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # abort state: {returns,aborts}
     # live vars: $t1, $t4, $t7
     # refs: []
     #
  9: $t0 := vector($t1, $t4, $t7)
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
 10: $t12 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t12
     # refs: []
     #
 11: $t13 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t13
     # refs: []
     #
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 13: $t15 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t15
     # refs: []
     #
 14: $t16 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t15, $t16
     # refs: []
     #
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t14
     # refs: []
     #
 16: $t18 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t14, $t18
     # refs: []
     #
 17: $t19 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t14, $t18, $t19
     # refs: []
     #
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11, $t14, $t17
     # refs: []
     #
 19: $t10 := vector($t11, $t14, $t17)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 20: $t21 := infer($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t21
     # refs: []
     #
 21: $t20 := ==($t21, $t10)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t20
     # refs: []
     #
 22: if ($t20) goto 23 else goto 25
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 23: label L0
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 24: goto 28
     # abort state: {aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 25: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 26: $t22 := 0
     # abort state: {aborts}
     # live vars: $t22
     # refs: []
     #
 27: abort($t22)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 28: label L2
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 29: $t24 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t24
     # refs: [$t24 => #24]
     # #24
     #   <no edges>
     # #root
     #   => #24 via [local `x`] at line 65
     #
 30: $t25 := borrow_local($t10)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t24, $t25
     # refs: [$t24 => #24, $t25 => #25]
     # #24
     #   <no edges>
     # #25
     #   <no edges>
     # #root
     #   => #24 via [local `x`] at line 65
     #   => #25 via [local `y`] at line 65
     #
 31: $t23 := ==($t24, $t25)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t23
     # refs: []
     #
 32: if ($t23) goto 33 else goto 35
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 33: label L3
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 34: goto 38
     # abort state: {aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 35: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 36: $t26 := 0
     # abort state: {aborts}
     # live vars: $t26
     # refs: []
     #
 37: abort($t26)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 38: label L5
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 39: $t30 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 67
     #
 40: $t31 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t30, $t31
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 67
     #
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   -> #29 via [local `x`] at line 67
     #
 42: $t28 := read_ref($t29)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t28
     # refs: []
     #
 43: $t34 := borrow_local($t10)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t28, $t34
     # refs: [$t34 => #34]
     # #34
     #   <no edges>
     # #root
     #   => #34 via [local `y`] at line 67
     #
 44: $t35 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t28, $t34, $t35
     # refs: [$t34 => #34]
     # #34
     #   <no edges>
     # #root
     #   => #34 via [local `y`] at line 67
     #
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t28, $t33
     # refs: [$t33 => #33]
     # #33
     #   <no edges>
     # #root
     #   -> #33 via [local `y`] at line 67
     #
 46: $t32 := read_ref($t33)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t28, $t32
     # refs: []
     #
 47: $t27 := ==($t28, $t32)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t27
     # refs: []
     #
 48: if ($t27) goto 49 else goto 51
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 49: label L6
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 50: goto 54
     # abort state: {aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 51: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 52: $t36 := 0
     # abort state: {aborts}
     # live vars: $t36
     # refs: []
     #
 53: abort($t36)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 54: label L8
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 55: $t39 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t39
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `x`] at line 68
     #
 56: $t40 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t39, $t40
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   => #39 via [local `x`] at line 68
     #
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t38
     # refs: [$t38 => #38]
     # #38
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #
 58: $t42 := borrow_local($t10)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t38, $t42
     # refs: [$t38 => #38, $t42 => #42]
     # #38
     #   <no edges>
     # #42
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #   => #42 via [local `y`] at line 68
     #
 59: $t43 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t38, $t42, $t43
     # refs: [$t38 => #38, $t42 => #42]
     # #38
     #   <no edges>
     # #42
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #   => #42 via [local `y`] at line 68
     #
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t38, $t41
     # refs: [$t38 => #38, $t41 => #41]
     # #38
     #   <no edges>
     # #41
     #   <no edges>
     # #root
     #   -> #38 via [local `x`] at line 68
     #   -> #41 via [local `y`] at line 68
     #
 61: $t37 := ==($t38, $t41)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t37
     # refs: []
     #
 62: if ($t37) goto 63 else goto 65
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 63: label L9
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 64: goto 68
     # abort state: {aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 65: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 66: $t44 := 0
     # abort state: {aborts}
     # live vars: $t44
     # refs: []
     #
 67: abort($t44)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 68: label L11
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 69: $t48 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t48
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`] at line 70
     #
 70: $t49 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t48, $t49
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   => #48 via [local `x`] at line 70
     #
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t47
     # refs: [$t47 => #47]
     # #47
     #   <no edges>
     # #root
     #   -> #47 via [local `x`] at line 70
     #
 72: $t46 := read_ref($t47)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t46
     # refs: []
     #
 73: $t52 := borrow_local($t10)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t46, $t52
     # refs: [$t52 => #52]
     # #52
     #   <no edges>
     # #root
     #   => #52 via [local `y`] at line 70
     #
 74: $t53 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t46, $t52, $t53
     # refs: [$t52 => #52]
     # #52
     #   <no edges>
     # #root
     #   => #52 via [local `y`] at line 70
     #
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t46, $t51
     # refs: [$t51 => #51]
     # #51
     #   <no edges>
     # #root
     #   -> #51 via [local `y`] at line 70
     #
 76: $t50 := read_ref($t51)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t46, $t50
     # refs: []
     #
 77: $t45 := ==($t46, $t50)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t45
     # refs: []
     #
 78: if ($t45) goto 79 else goto 81
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 79: label L12
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 80: goto 84
     # abort state: {aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 81: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 82: $t54 := 0
     # abort state: {aborts}
     # live vars: $t54
     # refs: []
     #
 83: abort($t54)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 84: label L14
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 85: $t57 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t10, $t57
     # refs: [$t57 => #57]
     # #57
     #   <no edges>
     # #root
     #   => #57 via [local `x`] at line 71
     #
 86: $t58 := 1
     # abort state: {returns,aborts}
     # live vars: $t10, $t57, $t58
     # refs: [$t57 => #57]
     # #57
     #   <no edges>
     # #root
     #   => #57 via [local `x`] at line 71
     #
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
     # abort state: {returns,aborts}
     # live vars: $t10, $t56
     # refs: [$t56 => #56]
     # #56
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #
 88: $t60 := borrow_local($t10)
     # abort state: {returns,aborts}
     # live vars: $t56, $t60
     # refs: [$t56 => #56, $t60 => #60]
     # #56
     #   <no edges>
     # #60
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #   => #60 via [local `y`] at line 71
     #
 89: $t61 := 1
     # abort state: {returns,aborts}
     # live vars: $t56, $t60, $t61
     # refs: [$t56 => #56, $t60 => #60]
     # #56
     #   <no edges>
     # #60
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #   => #60 via [local `y`] at line 71
     #
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
     # abort state: {returns,aborts}
     # live vars: $t56, $t59
     # refs: [$t56 => #56, $t59 => #59]
     # #56
     #   <no edges>
     # #59
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 71
     #   -> #59 via [local `y`] at line 71
     #
 91: $t55 := ==($t56, $t59)
     # abort state: {returns,aborts}
     # live vars: $t55
     # refs: []
     #
 92: if ($t55) goto 93 else goto 95
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 93: label L15
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 94: goto 98
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 95: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 96: $t62 := 0
     # abort state: {aborts}
     # live vars: $t62
     # refs: []
     #
 97: abort($t62)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 98: label L17
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64>
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: 0xc0ffee::m::Test2
     var $t9: vector<u64>
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64>
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64
     var $t15: bool
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64
     var $t19: bool
     var $t20: 0xc0ffee::m::Test2
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2>
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2
     var $t25: &0xc0ffee::m::Test2
     var $t26: &vector<0xc0ffee::m::Test2>
     var $t27: u64
     var $t28: u64
     var $t29: bool
     var $t30: &0xc0ffee::m::Test2
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: u64
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: 0xc0ffee::m::Test2
     var $t39: &0xc0ffee::m::Test2
     var $t40: &vector<0xc0ffee::m::Test2>
     var $t41: u64
     var $t42: 0xc0ffee::m::Test2
     var $t43: &0xc0ffee::m::Test2
     var $t44: &vector<0xc0ffee::m::Test2>
     var $t45: u64
     var $t46: u64
     var $t47: bool
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: &0xc0ffee::m::Test2
     var $t52: &vector<0xc0ffee::m::Test2>
     var $t53: u64
     var $t54: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t2 := ["1", "2", "3"]
     # abort state: {returns,aborts}
     # live vars: $t2
     # refs: []
     #
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
     # abort state: {returns,aborts}
     # live vars: $t1
     # refs: []
     #
  2: $t4 := ["1", "2", "3"]
     # abort state: {returns,aborts}
     # live vars: $t1, $t4
     # refs: []
     #
  3: $t3 := pack 0xc0ffee::m::Test2($t4)
     # abort state: {returns,aborts}
     # live vars: $t1, $t3
     # refs: []
     #
  4: $t0 := vector($t1, $t3)
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
  5: $t7 := ["1", "2", "3"]
     # abort state: {returns,aborts}
     # live vars: $t0, $t7
     # refs: []
     #
  6: $t6 := pack 0xc0ffee::m::Test2($t7)
     # abort state: {returns,aborts}
     # live vars: $t0, $t6
     # refs: []
     #
  7: $t9 := ["2", "2", "2"]
     # abort state: {returns,aborts}
     # live vars: $t0, $t6, $t9
     # refs: []
     #
  8: $t8 := pack 0xc0ffee::m::Test2($t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t6, $t8
     # refs: []
     #
  9: $t11 := ["1", "2", "3"]
     # abort state: {returns,aborts}
     # live vars: $t0, $t6, $t8, $t11
     # refs: []
     #
 10: $t10 := pack 0xc0ffee::m::Test2($t11)
     # abort state: {returns,aborts}
     # live vars: $t0, $t6, $t8, $t10
     # refs: []
     #
 11: $t5 := vector($t6, $t8, $t10)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 12: $t13 := infer($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t13
     # refs: []
     #
 13: $t12 := !=($t13, $t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t12
     # refs: []
     #
 14: if ($t12) goto 15 else goto 17
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 15: label L0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 16: goto 20
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 17: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 18: $t14 := 0
     # abort state: {aborts}
     # live vars: $t14
     # refs: []
     #
 19: abort($t14)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 20: label L2
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 21: $t16 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => #16 via [local `x`] at line 80
     #
 22: $t17 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t16, $t17
     # refs: [$t16 => #16, $t17 => #17]
     # #16
     #   <no edges>
     # #17
     #   <no edges>
     # #root
     #   => #16 via [local `x`] at line 80
     #   => #17 via [local `y`] at line 80
     #
 23: $t15 := !=($t16, $t17)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t15
     # refs: []
     #
 24: if ($t15) goto 25 else goto 27
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 25: label L3
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 26: goto 30
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 27: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 28: $t18 := 0
     # abort state: {aborts}
     # live vars: $t18
     # refs: []
     #
 29: abort($t18)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 30: label L5
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 31: $t22 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t22
     # refs: [$t22 => #22]
     # #22
     #   <no edges>
     # #root
     #   => #22 via [local `x`] at line 82
     #
 32: $t23 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t22, $t23
     # refs: [$t22 => #22]
     # #22
     #   <no edges>
     # #root
     #   => #22 via [local `x`] at line 82
     #
 33: $t21 := vector::borrow<0xc0ffee::m::Test2>($t22, $t23)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t21
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   -> #21 via [local `x`] at line 82
     #
 34: $t20 := read_ref($t21)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t20
     # refs: []
     #
 35: $t26 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t20, $t26
     # refs: [$t26 => #26]
     # #26
     #   <no edges>
     # #root
     #   => #26 via [local `y`] at line 82
     #
 36: $t27 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t20, $t26, $t27
     # refs: [$t26 => #26]
     # #26
     #   <no edges>
     # #root
     #   => #26 via [local `y`] at line 82
     #
 37: $t25 := vector::borrow<0xc0ffee::m::Test2>($t26, $t27)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t20, $t25
     # refs: [$t25 => #25]
     # #25
     #   <no edges>
     # #root
     #   -> #25 via [local `y`] at line 82
     #
 38: $t24 := read_ref($t25)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t20, $t24
     # refs: []
     #
 39: $t19 := ==($t20, $t24)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t19
     # refs: []
     #
 40: if ($t19) goto 41 else goto 43
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 41: label L6
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 42: goto 46
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 43: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 44: $t28 := 0
     # abort state: {aborts}
     # live vars: $t28
     # refs: []
     #
 45: abort($t28)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 46: label L8
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 47: $t31 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t31
     # refs: [$t31 => #31]
     # #31
     #   <no edges>
     # #root
     #   => #31 via [local `x`] at line 83
     #
 48: $t32 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t31, $t32
     # refs: [$t31 => #31]
     # #31
     #   <no edges>
     # #root
     #   => #31 via [local `x`] at line 83
     #
 49: $t30 := vector::borrow<0xc0ffee::m::Test2>($t31, $t32)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   -> #30 via [local `x`] at line 83
     #
 50: $t34 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t30, $t34
     # refs: [$t30 => #30, $t34 => #34]
     # #30
     #   <no edges>
     # #34
     #   <no edges>
     # #root
     #   -> #30 via [local `x`] at line 83
     #   => #34 via [local `y`] at line 83
     #
 51: $t35 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t30, $t34, $t35
     # refs: [$t30 => #30, $t34 => #34]
     # #30
     #   <no edges>
     # #34
     #   <no edges>
     # #root
     #   -> #30 via [local `x`] at line 83
     #   => #34 via [local `y`] at line 83
     #
 52: $t33 := vector::borrow<0xc0ffee::m::Test2>($t34, $t35)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t30, $t33
     # refs: [$t30 => #30, $t33 => #33]
     # #30
     #   <no edges>
     # #33
     #   <no edges>
     # #root
     #   -> #30 via [local `x`] at line 83
     #   -> #33 via [local `y`] at line 83
     #
 53: $t29 := ==($t30, $t33)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t29
     # refs: []
     #
 54: if ($t29) goto 55 else goto 57
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 55: label L9
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 56: goto 60
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 57: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 58: $t36 := 0
     # abort state: {aborts}
     # live vars: $t36
     # refs: []
     #
 59: abort($t36)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 60: label L11
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 61: $t40 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t40
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `x`] at line 85
     #
 62: $t41 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t40, $t41
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `x`] at line 85
     #
 63: $t39 := vector::borrow<0xc0ffee::m::Test2>($t40, $t41)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t39
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   -> #39 via [local `x`] at line 85
     #
 64: $t38 := read_ref($t39)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t38
     # refs: []
     #
 65: $t44 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t38, $t44
     # refs: [$t44 => #44]
     # #44
     #   <no edges>
     # #root
     #   => #44 via [local `y`] at line 85
     #
 66: $t45 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t38, $t44, $t45
     # refs: [$t44 => #44]
     # #44
     #   <no edges>
     # #root
     #   => #44 via [local `y`] at line 85
     #
 67: $t43 := vector::borrow<0xc0ffee::m::Test2>($t44, $t45)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t38, $t43
     # refs: [$t43 => #43]
     # #43
     #   <no edges>
     # #root
     #   -> #43 via [local `y`] at line 85
     #
 68: $t42 := read_ref($t43)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t38, $t42
     # refs: []
     #
 69: $t37 := !=($t38, $t42)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t37
     # refs: []
     #
 70: if ($t37) goto 71 else goto 73
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 71: label L12
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 72: goto 76
     # abort state: {aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 73: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 74: $t46 := 0
     # abort state: {aborts}
     # live vars: $t46
     # refs: []
     #
 75: abort($t46)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 76: label L14
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # refs: []
     #
 77: $t49 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t5, $t49
     # refs: [$t49 => #49]
     # #49
     #   <no edges>
     # #root
     #   => #49 via [local `x`] at line 86
     #
 78: $t50 := 1
     # abort state: {returns,aborts}
     # live vars: $t5, $t49, $t50
     # refs: [$t49 => #49]
     # #49
     #   <no edges>
     # #root
     #   => #49 via [local `x`] at line 86
     #
 79: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
     # abort state: {returns,aborts}
     # live vars: $t5, $t48
     # refs: [$t48 => #48]
     # #48
     #   <no edges>
     # #root
     #   -> #48 via [local `x`] at line 86
     #
 80: $t52 := borrow_local($t5)
     # abort state: {returns,aborts}
     # live vars: $t48, $t52
     # refs: [$t48 => #48, $t52 => #52]
     # #48
     #   <no edges>
     # #52
     #   <no edges>
     # #root
     #   -> #48 via [local `x`] at line 86
     #   => #52 via [local `y`] at line 86
     #
 81: $t53 := 1
     # abort state: {returns,aborts}
     # live vars: $t48, $t52, $t53
     # refs: [$t48 => #48, $t52 => #52]
     # #48
     #   <no edges>
     # #52
     #   <no edges>
     # #root
     #   -> #48 via [local `x`] at line 86
     #   => #52 via [local `y`] at line 86
     #
 82: $t51 := vector::borrow<0xc0ffee::m::Test2>($t52, $t53)
     # abort state: {returns,aborts}
     # live vars: $t48, $t51
     # refs: [$t48 => #48, $t51 => #51]
     # #48
     #   <no edges>
     # #51
     #   <no edges>
     # #root
     #   -> #48 via [local `x`] at line 86
     #   -> #51 via [local `y`] at line 86
     #
 83: $t47 := !=($t48, $t51)
     # abort state: {returns,aborts}
     # live vars: $t47
     # refs: []
     #
 84: if ($t47) goto 85 else goto 87
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 85: label L15
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 86: goto 90
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 87: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 88: $t54 := 0
     # abort state: {aborts}
     # live vars: $t54
     # refs: []
     #
 89: abort($t54)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 90: label L17
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 91: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t4 := 1
     # abort state: {returns,aborts}
     # live vars: $t4
     # refs: []
     #
  1: $t5 := 2
     # abort state: {returns,aborts}
     # live vars: $t4, $t5
     # refs: []
     #
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # abort state: {returns,aborts}
     # live vars: $t3
     # refs: []
     #
  3: $t7 := 1
     # abort state: {returns,aborts}
     # live vars: $t3, $t7
     # refs: []
     #
  4: $t8 := 2
     # abort state: {returns,aborts}
     # live vars: $t3, $t7, $t8
     # refs: []
     #
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
     # abort state: {returns,aborts}
     # live vars: $t3, $t6
     # refs: []
     #
  6: $t2 := vector($t3, $t6)
     # abort state: {returns,aborts}
     # live vars: $t2
     # refs: []
     #
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
     # abort state: {returns,aborts}
     # live vars: $t1
     # refs: []
     #
  8: $t0 := vector($t1)
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
  9: $t13 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t13
     # refs: []
     #
 10: $t14 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t13, $t14
     # refs: []
     #
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
     # abort state: {returns,aborts}
     # live vars: $t0, $t12
     # refs: []
     #
 12: $t16 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t16
     # refs: []
     #
 13: $t17 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t16, $t17
     # refs: []
     #
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
     # abort state: {returns,aborts}
     # live vars: $t0, $t12, $t15
     # refs: []
     #
 15: $t11 := vector($t12, $t15)
     # abort state: {returns,aborts}
     # live vars: $t0, $t11
     # refs: []
     #
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10
     # refs: []
     #
 17: $t21 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t21
     # refs: []
     #
 18: $t22 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t21, $t22
     # refs: []
     #
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t20
     # refs: []
     #
 20: $t24 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t20, $t24
     # refs: []
     #
 21: $t25 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t20, $t24, $t25
     # refs: []
     #
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t20, $t23
     # refs: []
     #
 23: $t19 := vector($t20, $t23)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t19
     # refs: []
     #
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
     # abort state: {returns,aborts}
     # live vars: $t0, $t10, $t18
     # refs: []
     #
 25: $t9 := vector($t10, $t18)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 26: $t27 := infer($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t27
     # refs: []
     #
 27: $t26 := !=($t27, $t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t26
     # refs: []
     #
 28: if ($t26) goto 29 else goto 31
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 29: label L0
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 30: goto 34
     # abort state: {aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 31: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 32: $t28 := 0
     # abort state: {aborts}
     # live vars: $t28
     # refs: []
     #
 33: abort($t28)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 34: label L2
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 35: $t30 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t30
     # refs: [$t30 => #30]
     # #30
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 94
     #
 36: $t31 := borrow_local($t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t30, $t31
     # refs: [$t30 => #30, $t31 => #31]
     # #30
     #   <no edges>
     # #31
     #   <no edges>
     # #root
     #   => #30 via [local `x`] at line 94
     #   => #31 via [local `y`] at line 94
     #
 37: $t29 := !=($t30, $t31)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t29
     # refs: []
     #
 38: if ($t29) goto 39 else goto 41
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 39: label L3
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 40: goto 44
     # abort state: {aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 41: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 42: $t32 := 0
     # abort state: {aborts}
     # live vars: $t32
     # refs: []
     #
 43: abort($t32)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 44: label L5
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 45: $t36 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t36
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   => #36 via [local `x`] at line 96
     #
 46: $t37 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t36, $t37
     # refs: [$t36 => #36]
     # #36
     #   <no edges>
     # #root
     #   => #36 via [local `x`] at line 96
     #
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t35
     # refs: [$t35 => #35]
     # #35
     #   <no edges>
     # #root
     #   -> #35 via [local `x`] at line 96
     #
 48: $t34 := read_ref($t35)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t34
     # refs: []
     #
 49: $t40 := borrow_local($t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t34, $t40
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `y`] at line 96
     #
 50: $t41 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t34, $t40, $t41
     # refs: [$t40 => #40]
     # #40
     #   <no edges>
     # #root
     #   => #40 via [local `y`] at line 96
     #
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t34, $t39
     # refs: [$t39 => #39]
     # #39
     #   <no edges>
     # #root
     #   -> #39 via [local `y`] at line 96
     #
 52: $t38 := read_ref($t39)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t34, $t38
     # refs: []
     #
 53: $t33 := ==($t34, $t38)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t33
     # refs: []
     #
 54: if ($t33) goto 55 else goto 57
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 55: label L6
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 56: goto 60
     # abort state: {aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 57: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 58: $t42 := 0
     # abort state: {aborts}
     # live vars: $t42
     # refs: []
     #
 59: abort($t42)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 60: label L8
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 61: $t45 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t45
     # refs: [$t45 => #45]
     # #45
     #   <no edges>
     # #root
     #   => #45 via [local `x`] at line 97
     #
 62: $t46 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t45, $t46
     # refs: [$t45 => #45]
     # #45
     #   <no edges>
     # #root
     #   => #45 via [local `x`] at line 97
     #
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t44
     # refs: [$t44 => #44]
     # #44
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #
 64: $t48 := borrow_local($t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t44, $t48
     # refs: [$t44 => #44, $t48 => #48]
     # #44
     #   <no edges>
     # #48
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #   => #48 via [local `y`] at line 97
     #
 65: $t49 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t44, $t48, $t49
     # refs: [$t44 => #44, $t48 => #48]
     # #44
     #   <no edges>
     # #48
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #   => #48 via [local `y`] at line 97
     #
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t44, $t47
     # refs: [$t44 => #44, $t47 => #47]
     # #44
     #   <no edges>
     # #47
     #   <no edges>
     # #root
     #   -> #44 via [local `x`] at line 97
     #   -> #47 via [local `y`] at line 97
     #
 67: $t43 := ==($t44, $t47)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t43
     # refs: []
     #
 68: if ($t43) goto 69 else goto 71
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 69: label L9
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 70: goto 74
     # abort state: {aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 71: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 72: $t50 := 0
     # abort state: {aborts}
     # live vars: $t50
     # refs: []
     #
 73: abort($t50)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 74: label L11
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 75: $t54 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t54
     # refs: [$t54 => #54]
     # #54
     #   <no edges>
     # #root
     #   => #54 via [local `x`] at line 99
     #
 76: $t55 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t54, $t55
     # refs: [$t54 => #54]
     # #54
     #   <no edges>
     # #root
     #   => #54 via [local `x`] at line 99
     #
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t53
     # refs: [$t53 => #53]
     # #53
     #   <no edges>
     # #root
     #   -> #53 via [local `x`] at line 99
     #
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t56
     # refs: [$t56 => #56]
     # #56
     #   <no edges>
     # #root
     #   -> #56 via [local `x`] at line 99
     #
 79: $t52 := read_ref($t56)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t52
     # refs: []
     #
 80: $t59 := borrow_local($t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t52, $t59
     # refs: [$t59 => #59]
     # #59
     #   <no edges>
     # #root
     #   => #59 via [local `y`] at line 99
     #
 81: $t60 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t52, $t59, $t60
     # refs: [$t59 => #59]
     # #59
     #   <no edges>
     # #root
     #   => #59 via [local `y`] at line 99
     #
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t52, $t58
     # refs: [$t58 => #58]
     # #58
     #   <no edges>
     # #root
     #   -> #58 via [local `y`] at line 99
     #
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t52, $t61
     # refs: [$t61 => #61]
     # #61
     #   <no edges>
     # #root
     #   -> #61 via [local `y`] at line 99
     #
 84: $t57 := read_ref($t61)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t52, $t57
     # refs: []
     #
 85: $t51 := ==($t52, $t57)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9, $t51
     # refs: []
     #
 86: if ($t51) goto 87 else goto 89
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 87: label L12
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 88: goto 92
     # abort state: {aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 89: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 90: $t62 := 0
     # abort state: {aborts}
     # live vars: $t62
     # refs: []
     #
 91: abort($t62)
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 92: label L14
     # abort state: {returns,aborts}
     # live vars: $t0, $t9
     # refs: []
     #
 93: $t66 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t9, $t66
     # refs: [$t66 => #66]
     # #66
     #   <no edges>
     # #root
     #   => #66 via [local `x`] at line 100
     #
 94: $t67 := 0
     # abort state: {returns,aborts}
     # live vars: $t9, $t66, $t67
     # refs: [$t66 => #66]
     # #66
     #   <no edges>
     # #root
     #   => #66 via [local `x`] at line 100
     #
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
     # abort state: {returns,aborts}
     # live vars: $t9, $t65
     # refs: [$t65 => #65]
     # #65
     #   <no edges>
     # #root
     #   -> #65 via [local `x`] at line 100
     #
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
     # abort state: {returns,aborts}
     # live vars: $t9, $t64
     # refs: [$t64 => #64]
     # #64
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #
 97: $t70 := borrow_local($t9)
     # abort state: {returns,aborts}
     # live vars: $t64, $t70
     # refs: [$t64 => #64, $t70 => #70]
     # #64
     #   <no edges>
     # #70
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   => #70 via [local `y`] at line 100
     #
 98: $t71 := 0
     # abort state: {returns,aborts}
     # live vars: $t64, $t70, $t71
     # refs: [$t64 => #64, $t70 => #70]
     # #64
     #   <no edges>
     # #70
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   => #70 via [local `y`] at line 100
     #
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
     # abort state: {returns,aborts}
     # live vars: $t64, $t69
     # refs: [$t64 => #64, $t69 => #69]
     # #64
     #   <no edges>
     # #69
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   -> #69 via [local `y`] at line 100
     #
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
     # abort state: {returns,aborts}
     # live vars: $t64, $t68
     # refs: [$t64 => #64, $t68 => #68]
     # #64
     #   <no edges>
     # #68
     #   <no edges>
     # #root
     #   -> #64 via [local `x`] at line 100
     #   -> #68 via [local `y`] at line 100
     #
101: $t63 := ==($t64, $t68)
     # abort state: {returns,aborts}
     # live vars: $t63
     # refs: []
     #
102: if ($t63) goto 103 else goto 105
     # abort state: {returns}
     # live vars:
     # refs: []
     #
103: label L15
     # abort state: {returns}
     # live vars:
     # refs: []
     #
104: goto 108
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
105: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
106: $t72 := 0
     # abort state: {aborts}
     # live vars: $t72
     # refs: []
     #
107: abort($t72)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
108: label L17
     # abort state: {returns}
     # live vars:
     # refs: []
     #
109: return ()
}

============ after AbilityProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
  0: $t1 := 1
  1: $t2 := 2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
  3: $t4 := 1
  4: $t5 := 2
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  6: $t7 := copy($t0)
  7: $t6 := ==($t7, $t3)
  8: if ($t6) goto 9 else goto 11
  9: label L0
 10: goto 14
 11: label L1
 12: $t8 := 0
 13: abort($t8)
 14: label L2
 15: $t10 := borrow_local($t0)
 16: $t11 := borrow_local($t3)
 17: $t9 := ==($t10, $t11)
 18: if ($t9) goto 19 else goto 21
 19: label L3
 20: goto 24
 21: label L4
 22: $t12 := 0
 23: abort($t12)
 24: label L5
 25: $t15 := borrow_local($t0)
 26: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
 27: $t14 := read_ref($t16)
 28: $t18 := borrow_local($t3)
 29: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
 30: $t17 := read_ref($t19)
 31: $t13 := ==($t14, $t17)
 32: if ($t13) goto 33 else goto 35
 33: label L6
 34: goto 38
 35: label L7
 36: $t20 := 0
 37: abort($t20)
 38: label L8
 39: $t23 := borrow_local($t0)
 40: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
 41: $t25 := borrow_local($t3)
 42: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
 43: $t21 := ==($t22, $t24)
 44: if ($t21) goto 45 else goto 47
 45: label L9
 46: goto 50
 47: label L10
 48: $t26 := 0
 49: abort($t26)
 50: label L11
 51: $t29 := borrow_local($t0)
 52: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
 53: $t28 := read_ref($t30)
 54: $t32 := borrow_local($t3)
 55: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
 56: $t31 := read_ref($t33)
 57: $t27 := ==($t28, $t31)
 58: if ($t27) goto 59 else goto 61
 59: label L12
 60: goto 64
 61: label L13
 62: $t34 := 0
 63: abort($t34)
 64: label L14
 65: $t37 := borrow_local($t0)
 66: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
 67: $t39 := borrow_local($t3)
 68: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
 69: $t35 := ==($t36, $t38)
 70: if ($t35) goto 71 else goto 73
 71: label L15
 72: goto 76
 73: label L16
 74: $t40 := 0
 75: abort($t40)
 76: label L17
 77: return ()
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64>
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64
     var $t7: bool
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64
     var $t11: bool
     var $t12: vector<u64>
     var $t13: &0xc0ffee::m::Test2
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: bool
     var $t20: &vector<u64>
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2
     var $t24: u64
     var $t25: bool
     var $t26: u64
     var $t27: &u64
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: u64
     var $t32: &u64
     var $t33: &vector<u64>
     var $t34: &0xc0ffee::m::Test2
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: &u64
     var $t43: &vector<u64>
     var $t44: &0xc0ffee::m::Test2
     var $t45: u64
     var $t46: u64
  0: $t1 := ["1", "2", "3"]
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
  2: $t3 := ["1", "2", "3"]
  3: $t2 := pack 0xc0ffee::m::Test2($t3)
  4: $t5 := copy($t0)
  5: $t4 := ==($t5, $t2)
  6: if ($t4) goto 7 else goto 9
  7: label L0
  8: goto 12
  9: label L1
 10: $t6 := 0
 11: abort($t6)
 12: label L2
 13: $t8 := borrow_local($t0)
 14: $t9 := borrow_local($t2)
 15: $t7 := ==($t8, $t9)
 16: if ($t7) goto 17 else goto 19
 17: label L3
 18: goto 22
 19: label L4
 20: $t10 := 0
 21: abort($t10)
 22: label L5
 23: $t13 := borrow_local($t0)
 24: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t13)
 25: $t12 := read_ref($t14)
 26: $t16 := borrow_local($t2)
 27: $t17 := borrow_field<0xc0ffee::m::Test2>.a($t16)
 28: $t15 := read_ref($t17)
 29: $t11 := ==($t12, $t15)
 30: if ($t11) goto 31 else goto 33
 31: label L6
 32: goto 36
 33: label L7
 34: $t18 := 0
 35: abort($t18)
 36: label L8
 37: $t21 := borrow_local($t0)
 38: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t21)
 39: $t23 := borrow_local($t2)
 40: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t23)
 41: $t19 := ==($t20, $t22)
 42: if ($t19) goto 43 else goto 45
 43: label L9
 44: goto 48
 45: label L10
 46: $t24 := 0
 47: abort($t24)
 48: label L11
 49: $t29 := borrow_local($t0)
 50: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
 51: $t30 := 0
 52: $t27 := vector::borrow<u64>($t28, $t30)
 53: $t26 := read_ref($t27)
 54: $t34 := borrow_local($t2)
 55: $t33 := borrow_field<0xc0ffee::m::Test2>.a($t34)
 56: $t35 := 0
 57: $t32 := vector::borrow<u64>($t33, $t35)
 58: $t31 := read_ref($t32)
 59: $t25 := ==($t26, $t31)
 60: if ($t25) goto 61 else goto 63
 61: label L12
 62: goto 66
 63: label L13
 64: $t36 := 0
 65: abort($t36)
 66: label L14
 67: $t40 := borrow_local($t0)
 68: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
 69: $t41 := 0
 70: $t38 := vector::borrow<u64>($t39, $t41)
 71: $t44 := borrow_local($t2)
 72: $t43 := borrow_field<0xc0ffee::m::Test2>.a($t44)
 73: $t45 := 0
 74: $t42 := vector::borrow<u64>($t43, $t45)
 75: $t37 := ==($t38, $t42)
 76: if ($t37) goto 77 else goto 79
 77: label L15
 78: goto 82
 79: label L16
 80: $t46 := 0
 81: abort($t46)
 82: label L17
 83: return ()
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  3: $t1 := vector($t2)
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
  5: $t8 := 1
  6: $t9 := 2
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  8: $t11 := 1
  9: $t12 := 2
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
 11: $t6 := vector($t7, $t10)
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
 13: $t14 := copy($t0)
 14: $t13 := !=($t14, $t5)
 15: if ($t13) goto 16 else goto 18
 16: label L0
 17: goto 21
 18: label L1
 19: $t15 := 0
 20: abort($t15)
 21: label L2
 22: $t17 := borrow_local($t0)
 23: $t18 := borrow_local($t5)
 24: $t16 := !=($t17, $t18)
 25: if ($t16) goto 26 else goto 28
 26: label L3
 27: goto 31
 28: label L4
 29: $t19 := 0
 30: abort($t19)
 31: label L5
 32: $t22 := borrow_local($t0)
 33: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
 34: $t21 := read_ref($t23)
 35: $t25 := borrow_local($t5)
 36: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
 37: $t24 := read_ref($t26)
 38: $t20 := !=($t21, $t24)
 39: if ($t20) goto 40 else goto 42
 40: label L6
 41: goto 45
 42: label L7
 43: $t27 := 0
 44: abort($t27)
 45: label L8
 46: $t30 := borrow_local($t0)
 47: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
 48: $t32 := borrow_local($t5)
 49: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
 50: $t28 := !=($t29, $t31)
 51: if ($t28) goto 52 else goto 54
 52: label L9
 53: goto 57
 54: label L10
 55: $t33 := 0
 56: abort($t33)
 57: label L11
 58: $t38 := borrow_local($t0)
 59: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
 60: $t39 := 0
 61: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
 62: $t35 := read_ref($t36)
 63: $t43 := borrow_local($t5)
 64: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
 65: $t44 := 0
 66: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
 67: $t40 := read_ref($t41)
 68: $t34 := ==($t35, $t40)
 69: if ($t34) goto 70 else goto 72
 70: label L12
 71: goto 75
 72: label L13
 73: $t45 := 0
 74: abort($t45)
 75: label L14
 76: $t49 := borrow_local($t0)
 77: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
 78: $t50 := 0
 79: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
 80: $t53 := borrow_local($t5)
 81: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 82: $t54 := 0
 83: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
 84: $t46 := ==($t47, $t51)
 85: if ($t46) goto 86 else goto 88
 86: label L15
 87: goto 91
 88: label L16
 89: $t55 := 0
 90: abort($t55)
 91: label L17
 92: return ()
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
  3: $t5 := 1
  4: $t6 := 2
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
  6: $t8 := 1
  7: $t9 := 2
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  9: $t0 := vector($t1, $t4, $t7)
 10: $t12 := 1
 11: $t13 := 2
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
 13: $t15 := 1
 14: $t16 := 2
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
 16: $t18 := 1
 17: $t19 := 2
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
 19: $t10 := vector($t11, $t14, $t17)
 20: $t21 := copy($t0)
 21: $t20 := ==($t21, $t10)
 22: if ($t20) goto 23 else goto 25
 23: label L0
 24: goto 28
 25: label L1
 26: $t22 := 0
 27: abort($t22)
 28: label L2
 29: $t24 := borrow_local($t0)
 30: $t25 := borrow_local($t10)
 31: $t23 := ==($t24, $t25)
 32: if ($t23) goto 33 else goto 35
 33: label L3
 34: goto 38
 35: label L4
 36: $t26 := 0
 37: abort($t26)
 38: label L5
 39: $t30 := borrow_local($t0)
 40: $t31 := 0
 41: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
 42: $t28 := read_ref($t29)
 43: $t34 := borrow_local($t10)
 44: $t35 := 0
 45: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
 46: $t32 := read_ref($t33)
 47: $t27 := ==($t28, $t32)
 48: if ($t27) goto 49 else goto 51
 49: label L6
 50: goto 54
 51: label L7
 52: $t36 := 0
 53: abort($t36)
 54: label L8
 55: $t39 := borrow_local($t0)
 56: $t40 := 0
 57: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
 58: $t42 := borrow_local($t10)
 59: $t43 := 0
 60: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
 61: $t37 := ==($t38, $t41)
 62: if ($t37) goto 63 else goto 65
 63: label L9
 64: goto 68
 65: label L10
 66: $t44 := 0
 67: abort($t44)
 68: label L11
 69: $t48 := borrow_local($t0)
 70: $t49 := 1
 71: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
 72: $t46 := read_ref($t47)
 73: $t52 := borrow_local($t10)
 74: $t53 := 1
 75: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
 76: $t50 := read_ref($t51)
 77: $t45 := ==($t46, $t50)
 78: if ($t45) goto 79 else goto 81
 79: label L12
 80: goto 84
 81: label L13
 82: $t54 := 0
 83: abort($t54)
 84: label L14
 85: $t57 := borrow_local($t0)
 86: $t58 := 1
 87: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
 88: $t60 := borrow_local($t10)
 89: $t61 := 1
 90: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
 91: $t55 := ==($t56, $t59)
 92: if ($t55) goto 93 else goto 95
 93: label L15
 94: goto 98
 95: label L16
 96: $t62 := 0
 97: abort($t62)
 98: label L17
 99: return ()
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64>
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: 0xc0ffee::m::Test2
     var $t9: vector<u64>
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64>
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64
     var $t15: bool
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64
     var $t19: bool
     var $t20: 0xc0ffee::m::Test2
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2>
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2
     var $t25: &0xc0ffee::m::Test2
     var $t26: &vector<0xc0ffee::m::Test2>
     var $t27: u64
     var $t28: u64
     var $t29: bool
     var $t30: &0xc0ffee::m::Test2
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: u64
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: 0xc0ffee::m::Test2
     var $t39: &0xc0ffee::m::Test2
     var $t40: &vector<0xc0ffee::m::Test2>
     var $t41: u64
     var $t42: 0xc0ffee::m::Test2
     var $t43: &0xc0ffee::m::Test2
     var $t44: &vector<0xc0ffee::m::Test2>
     var $t45: u64
     var $t46: u64
     var $t47: bool
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: &0xc0ffee::m::Test2
     var $t52: &vector<0xc0ffee::m::Test2>
     var $t53: u64
     var $t54: u64
  0: $t2 := ["1", "2", "3"]
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
  2: $t4 := ["1", "2", "3"]
  3: $t3 := pack 0xc0ffee::m::Test2($t4)
  4: $t0 := vector($t1, $t3)
  5: $t7 := ["1", "2", "3"]
  6: $t6 := pack 0xc0ffee::m::Test2($t7)
  7: $t9 := ["2", "2", "2"]
  8: $t8 := pack 0xc0ffee::m::Test2($t9)
  9: $t11 := ["1", "2", "3"]
 10: $t10 := pack 0xc0ffee::m::Test2($t11)
 11: $t5 := vector($t6, $t8, $t10)
 12: $t13 := copy($t0)
 13: $t12 := !=($t13, $t5)
 14: if ($t12) goto 15 else goto 17
 15: label L0
 16: goto 20
 17: label L1
 18: $t14 := 0
 19: abort($t14)
 20: label L2
 21: $t16 := borrow_local($t0)
 22: $t17 := borrow_local($t5)
 23: $t15 := !=($t16, $t17)
 24: if ($t15) goto 25 else goto 27
 25: label L3
 26: goto 30
 27: label L4
 28: $t18 := 0
 29: abort($t18)
 30: label L5
 31: $t22 := borrow_local($t0)
 32: $t23 := 0
 33: $t21 := vector::borrow<0xc0ffee::m::Test2>($t22, $t23)
 34: $t20 := read_ref($t21)
 35: $t26 := borrow_local($t5)
 36: $t27 := 0
 37: $t25 := vector::borrow<0xc0ffee::m::Test2>($t26, $t27)
 38: $t24 := read_ref($t25)
 39: $t19 := ==($t20, $t24)
 40: if ($t19) goto 41 else goto 43
 41: label L6
 42: goto 46
 43: label L7
 44: $t28 := 0
 45: abort($t28)
 46: label L8
 47: $t31 := borrow_local($t0)
 48: $t32 := 0
 49: $t30 := vector::borrow<0xc0ffee::m::Test2>($t31, $t32)
 50: $t34 := borrow_local($t5)
 51: $t35 := 0
 52: $t33 := vector::borrow<0xc0ffee::m::Test2>($t34, $t35)
 53: $t29 := ==($t30, $t33)
 54: if ($t29) goto 55 else goto 57
 55: label L9
 56: goto 60
 57: label L10
 58: $t36 := 0
 59: abort($t36)
 60: label L11
 61: $t40 := borrow_local($t0)
 62: $t41 := 1
 63: $t39 := vector::borrow<0xc0ffee::m::Test2>($t40, $t41)
 64: $t38 := read_ref($t39)
 65: $t44 := borrow_local($t5)
 66: $t45 := 1
 67: $t43 := vector::borrow<0xc0ffee::m::Test2>($t44, $t45)
 68: $t42 := read_ref($t43)
 69: $t37 := !=($t38, $t42)
 70: if ($t37) goto 71 else goto 73
 71: label L12
 72: goto 76
 73: label L13
 74: $t46 := 0
 75: abort($t46)
 76: label L14
 77: $t49 := borrow_local($t0)
 78: $t50 := 1
 79: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
 80: $t52 := borrow_local($t5)
 81: $t53 := 1
 82: $t51 := vector::borrow<0xc0ffee::m::Test2>($t52, $t53)
 83: $t47 := !=($t48, $t51)
 84: if ($t47) goto 85 else goto 87
 85: label L15
 86: goto 90
 87: label L16
 88: $t54 := 0
 89: abort($t54)
 90: label L17
 91: return ()
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
  0: $t4 := 1
  1: $t5 := 2
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  3: $t7 := 1
  4: $t8 := 2
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
  6: $t2 := vector($t3, $t6)
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
  8: $t0 := vector($t1)
  9: $t13 := 1
 10: $t14 := 2
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
 12: $t16 := 1
 13: $t17 := 2
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
 15: $t11 := vector($t12, $t15)
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
 17: $t21 := 1
 18: $t22 := 2
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
 20: $t24 := 1
 21: $t25 := 2
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
 23: $t19 := vector($t20, $t23)
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
 25: $t9 := vector($t10, $t18)
 26: $t27 := copy($t0)
 27: $t26 := !=($t27, $t9)
 28: if ($t26) goto 29 else goto 31
 29: label L0
 30: goto 34
 31: label L1
 32: $t28 := 0
 33: abort($t28)
 34: label L2
 35: $t30 := borrow_local($t0)
 36: $t31 := borrow_local($t9)
 37: $t29 := !=($t30, $t31)
 38: if ($t29) goto 39 else goto 41
 39: label L3
 40: goto 44
 41: label L4
 42: $t32 := 0
 43: abort($t32)
 44: label L5
 45: $t36 := borrow_local($t0)
 46: $t37 := 0
 47: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
 48: $t34 := read_ref($t35)
 49: $t40 := borrow_local($t9)
 50: $t41 := 0
 51: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
 52: $t38 := read_ref($t39)
 53: $t33 := ==($t34, $t38)
 54: if ($t33) goto 55 else goto 57
 55: label L6
 56: goto 60
 57: label L7
 58: $t42 := 0
 59: abort($t42)
 60: label L8
 61: $t45 := borrow_local($t0)
 62: $t46 := 0
 63: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
 64: $t48 := borrow_local($t9)
 65: $t49 := 0
 66: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
 67: $t43 := ==($t44, $t47)
 68: if ($t43) goto 69 else goto 71
 69: label L9
 70: goto 74
 71: label L10
 72: $t50 := 0
 73: abort($t50)
 74: label L11
 75: $t54 := borrow_local($t0)
 76: $t55 := 0
 77: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
 78: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 79: $t52 := read_ref($t56)
 80: $t59 := borrow_local($t9)
 81: $t60 := 0
 82: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
 83: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
 84: $t57 := read_ref($t61)
 85: $t51 := ==($t52, $t57)
 86: if ($t51) goto 87 else goto 89
 87: label L12
 88: goto 92
 89: label L13
 90: $t62 := 0
 91: abort($t62)
 92: label L14
 93: $t66 := borrow_local($t0)
 94: $t67 := 0
 95: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
 96: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
 97: $t70 := borrow_local($t9)
 98: $t71 := 0
 99: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
100: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
101: $t63 := ==($t64, $t68)
102: if ($t63) goto 103 else goto 105
103: label L15
104: goto 108
105: label L16
106: $t72 := 0
107: abort($t72)
108: label L17
109: return ()
}

============ after ControlFlowGraphSimplifier: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
  0: $t1 := 1
  1: $t2 := 2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
  3: $t4 := 1
  4: $t5 := 2
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  6: $t7 := copy($t0)
  7: $t6 := ==($t7, $t3)
  8: if ($t6) goto 9 else goto 63
  9: label L0
 10: $t10 := borrow_local($t0)
 11: $t11 := borrow_local($t3)
 12: $t9 := ==($t10, $t11)
 13: if ($t9) goto 14 else goto 60
 14: label L3
 15: $t15 := borrow_local($t0)
 16: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
 17: $t14 := read_ref($t16)
 18: $t18 := borrow_local($t3)
 19: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
 20: $t17 := read_ref($t19)
 21: $t13 := ==($t14, $t17)
 22: if ($t13) goto 23 else goto 57
 23: label L6
 24: $t23 := borrow_local($t0)
 25: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
 26: $t25 := borrow_local($t3)
 27: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
 28: $t21 := ==($t22, $t24)
 29: if ($t21) goto 30 else goto 54
 30: label L9
 31: $t29 := borrow_local($t0)
 32: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
 33: $t28 := read_ref($t30)
 34: $t32 := borrow_local($t3)
 35: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
 36: $t31 := read_ref($t33)
 37: $t27 := ==($t28, $t31)
 38: if ($t27) goto 39 else goto 51
 39: label L12
 40: $t37 := borrow_local($t0)
 41: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
 42: $t39 := borrow_local($t3)
 43: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
 44: $t35 := ==($t36, $t38)
 45: if ($t35) goto 46 else goto 48
 46: label L15
 47: return ()
 48: label L16
 49: $t40 := 0
 50: abort($t40)
 51: label L13
 52: $t34 := 0
 53: abort($t34)
 54: label L10
 55: $t26 := 0
 56: abort($t26)
 57: label L7
 58: $t20 := 0
 59: abort($t20)
 60: label L4
 61: $t12 := 0
 62: abort($t12)
 63: label L1
 64: $t8 := 0
 65: abort($t8)
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64>
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64
     var $t7: bool
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64
     var $t11: bool
     var $t12: vector<u64>
     var $t13: &0xc0ffee::m::Test2
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: bool
     var $t20: &vector<u64>
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2
     var $t24: u64
     var $t25: bool
     var $t26: u64
     var $t27: &u64
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: u64
     var $t32: &u64
     var $t33: &vector<u64>
     var $t34: &0xc0ffee::m::Test2
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: &u64
     var $t43: &vector<u64>
     var $t44: &0xc0ffee::m::Test2
     var $t45: u64
     var $t46: u64
  0: $t1 := ["1", "2", "3"]
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
  2: $t3 := ["1", "2", "3"]
  3: $t2 := pack 0xc0ffee::m::Test2($t3)
  4: $t5 := copy($t0)
  5: $t4 := ==($t5, $t2)
  6: if ($t4) goto 7 else goto 69
  7: label L0
  8: $t8 := borrow_local($t0)
  9: $t9 := borrow_local($t2)
 10: $t7 := ==($t8, $t9)
 11: if ($t7) goto 12 else goto 66
 12: label L3
 13: $t13 := borrow_local($t0)
 14: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t13)
 15: $t12 := read_ref($t14)
 16: $t16 := borrow_local($t2)
 17: $t17 := borrow_field<0xc0ffee::m::Test2>.a($t16)
 18: $t15 := read_ref($t17)
 19: $t11 := ==($t12, $t15)
 20: if ($t11) goto 21 else goto 63
 21: label L6
 22: $t21 := borrow_local($t0)
 23: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t21)
 24: $t23 := borrow_local($t2)
 25: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t23)
 26: $t19 := ==($t20, $t22)
 27: if ($t19) goto 28 else goto 60
 28: label L9
 29: $t29 := borrow_local($t0)
 30: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
 31: $t30 := 0
 32: $t27 := vector::borrow<u64>($t28, $t30)
 33: $t26 := read_ref($t27)
 34: $t34 := borrow_local($t2)
 35: $t33 := borrow_field<0xc0ffee::m::Test2>.a($t34)
 36: $t35 := 0
 37: $t32 := vector::borrow<u64>($t33, $t35)
 38: $t31 := read_ref($t32)
 39: $t25 := ==($t26, $t31)
 40: if ($t25) goto 41 else goto 57
 41: label L12
 42: $t40 := borrow_local($t0)
 43: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
 44: $t41 := 0
 45: $t38 := vector::borrow<u64>($t39, $t41)
 46: $t44 := borrow_local($t2)
 47: $t43 := borrow_field<0xc0ffee::m::Test2>.a($t44)
 48: $t45 := 0
 49: $t42 := vector::borrow<u64>($t43, $t45)
 50: $t37 := ==($t38, $t42)
 51: if ($t37) goto 52 else goto 54
 52: label L15
 53: return ()
 54: label L16
 55: $t46 := 0
 56: abort($t46)
 57: label L13
 58: $t36 := 0
 59: abort($t36)
 60: label L10
 61: $t24 := 0
 62: abort($t24)
 63: label L7
 64: $t18 := 0
 65: abort($t18)
 66: label L4
 67: $t10 := 0
 68: abort($t10)
 69: label L1
 70: $t6 := 0
 71: abort($t6)
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  3: $t1 := vector($t2)
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
  5: $t8 := 1
  6: $t9 := 2
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  8: $t11 := 1
  9: $t12 := 2
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
 11: $t6 := vector($t7, $t10)
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
 13: $t14 := copy($t0)
 14: $t13 := !=($t14, $t5)
 15: if ($t13) goto 16 else goto 78
 16: label L0
 17: $t17 := borrow_local($t0)
 18: $t18 := borrow_local($t5)
 19: $t16 := !=($t17, $t18)
 20: if ($t16) goto 21 else goto 75
 21: label L3
 22: $t22 := borrow_local($t0)
 23: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
 24: $t21 := read_ref($t23)
 25: $t25 := borrow_local($t5)
 26: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
 27: $t24 := read_ref($t26)
 28: $t20 := !=($t21, $t24)
 29: if ($t20) goto 30 else goto 72
 30: label L6
 31: $t30 := borrow_local($t0)
 32: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
 33: $t32 := borrow_local($t5)
 34: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
 35: $t28 := !=($t29, $t31)
 36: if ($t28) goto 37 else goto 69
 37: label L9
 38: $t38 := borrow_local($t0)
 39: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
 40: $t39 := 0
 41: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
 42: $t35 := read_ref($t36)
 43: $t43 := borrow_local($t5)
 44: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
 45: $t44 := 0
 46: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
 47: $t40 := read_ref($t41)
 48: $t34 := ==($t35, $t40)
 49: if ($t34) goto 50 else goto 66
 50: label L12
 51: $t49 := borrow_local($t0)
 52: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
 53: $t50 := 0
 54: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
 55: $t53 := borrow_local($t5)
 56: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 57: $t54 := 0
 58: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
 59: $t46 := ==($t47, $t51)
 60: if ($t46) goto 61 else goto 63
 61: label L15
 62: return ()
 63: label L16
 64: $t55 := 0
 65: abort($t55)
 66: label L13
 67: $t45 := 0
 68: abort($t45)
 69: label L10
 70: $t33 := 0
 71: abort($t33)
 72: label L7
 73: $t27 := 0
 74: abort($t27)
 75: label L4
 76: $t19 := 0
 77: abort($t19)
 78: label L1
 79: $t15 := 0
 80: abort($t15)
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
  3: $t5 := 1
  4: $t6 := 2
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
  6: $t8 := 1
  7: $t9 := 2
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  9: $t0 := vector($t1, $t4, $t7)
 10: $t12 := 1
 11: $t13 := 2
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
 13: $t15 := 1
 14: $t16 := 2
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
 16: $t18 := 1
 17: $t19 := 2
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
 19: $t10 := vector($t11, $t14, $t17)
 20: $t21 := copy($t0)
 21: $t20 := ==($t21, $t10)
 22: if ($t20) goto 23 else goto 85
 23: label L0
 24: $t24 := borrow_local($t0)
 25: $t25 := borrow_local($t10)
 26: $t23 := ==($t24, $t25)
 27: if ($t23) goto 28 else goto 82
 28: label L3
 29: $t30 := borrow_local($t0)
 30: $t31 := 0
 31: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
 32: $t28 := read_ref($t29)
 33: $t34 := borrow_local($t10)
 34: $t35 := 0
 35: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
 36: $t32 := read_ref($t33)
 37: $t27 := ==($t28, $t32)
 38: if ($t27) goto 39 else goto 79
 39: label L6
 40: $t39 := borrow_local($t0)
 41: $t40 := 0
 42: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
 43: $t42 := borrow_local($t10)
 44: $t43 := 0
 45: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
 46: $t37 := ==($t38, $t41)
 47: if ($t37) goto 48 else goto 76
 48: label L9
 49: $t48 := borrow_local($t0)
 50: $t49 := 1
 51: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
 52: $t46 := read_ref($t47)
 53: $t52 := borrow_local($t10)
 54: $t53 := 1
 55: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
 56: $t50 := read_ref($t51)
 57: $t45 := ==($t46, $t50)
 58: if ($t45) goto 59 else goto 73
 59: label L12
 60: $t57 := borrow_local($t0)
 61: $t58 := 1
 62: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
 63: $t60 := borrow_local($t10)
 64: $t61 := 1
 65: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
 66: $t55 := ==($t56, $t59)
 67: if ($t55) goto 68 else goto 70
 68: label L15
 69: return ()
 70: label L16
 71: $t62 := 0
 72: abort($t62)
 73: label L13
 74: $t54 := 0
 75: abort($t54)
 76: label L10
 77: $t44 := 0
 78: abort($t44)
 79: label L7
 80: $t36 := 0
 81: abort($t36)
 82: label L4
 83: $t26 := 0
 84: abort($t26)
 85: label L1
 86: $t22 := 0
 87: abort($t22)
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64>
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: 0xc0ffee::m::Test2
     var $t9: vector<u64>
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64>
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64
     var $t15: bool
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64
     var $t19: bool
     var $t20: 0xc0ffee::m::Test2
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2>
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2
     var $t25: &0xc0ffee::m::Test2
     var $t26: &vector<0xc0ffee::m::Test2>
     var $t27: u64
     var $t28: u64
     var $t29: bool
     var $t30: &0xc0ffee::m::Test2
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: u64
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: 0xc0ffee::m::Test2
     var $t39: &0xc0ffee::m::Test2
     var $t40: &vector<0xc0ffee::m::Test2>
     var $t41: u64
     var $t42: 0xc0ffee::m::Test2
     var $t43: &0xc0ffee::m::Test2
     var $t44: &vector<0xc0ffee::m::Test2>
     var $t45: u64
     var $t46: u64
     var $t47: bool
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: &0xc0ffee::m::Test2
     var $t52: &vector<0xc0ffee::m::Test2>
     var $t53: u64
     var $t54: u64
  0: $t2 := ["1", "2", "3"]
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
  2: $t4 := ["1", "2", "3"]
  3: $t3 := pack 0xc0ffee::m::Test2($t4)
  4: $t0 := vector($t1, $t3)
  5: $t7 := ["1", "2", "3"]
  6: $t6 := pack 0xc0ffee::m::Test2($t7)
  7: $t9 := ["2", "2", "2"]
  8: $t8 := pack 0xc0ffee::m::Test2($t9)
  9: $t11 := ["1", "2", "3"]
 10: $t10 := pack 0xc0ffee::m::Test2($t11)
 11: $t5 := vector($t6, $t8, $t10)
 12: $t13 := copy($t0)
 13: $t12 := !=($t13, $t5)
 14: if ($t12) goto 15 else goto 77
 15: label L0
 16: $t16 := borrow_local($t0)
 17: $t17 := borrow_local($t5)
 18: $t15 := !=($t16, $t17)
 19: if ($t15) goto 20 else goto 74
 20: label L3
 21: $t22 := borrow_local($t0)
 22: $t23 := 0
 23: $t21 := vector::borrow<0xc0ffee::m::Test2>($t22, $t23)
 24: $t20 := read_ref($t21)
 25: $t26 := borrow_local($t5)
 26: $t27 := 0
 27: $t25 := vector::borrow<0xc0ffee::m::Test2>($t26, $t27)
 28: $t24 := read_ref($t25)
 29: $t19 := ==($t20, $t24)
 30: if ($t19) goto 31 else goto 71
 31: label L6
 32: $t31 := borrow_local($t0)
 33: $t32 := 0
 34: $t30 := vector::borrow<0xc0ffee::m::Test2>($t31, $t32)
 35: $t34 := borrow_local($t5)
 36: $t35 := 0
 37: $t33 := vector::borrow<0xc0ffee::m::Test2>($t34, $t35)
 38: $t29 := ==($t30, $t33)
 39: if ($t29) goto 40 else goto 68
 40: label L9
 41: $t40 := borrow_local($t0)
 42: $t41 := 1
 43: $t39 := vector::borrow<0xc0ffee::m::Test2>($t40, $t41)
 44: $t38 := read_ref($t39)
 45: $t44 := borrow_local($t5)
 46: $t45 := 1
 47: $t43 := vector::borrow<0xc0ffee::m::Test2>($t44, $t45)
 48: $t42 := read_ref($t43)
 49: $t37 := !=($t38, $t42)
 50: if ($t37) goto 51 else goto 65
 51: label L12
 52: $t49 := borrow_local($t0)
 53: $t50 := 1
 54: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
 55: $t52 := borrow_local($t5)
 56: $t53 := 1
 57: $t51 := vector::borrow<0xc0ffee::m::Test2>($t52, $t53)
 58: $t47 := !=($t48, $t51)
 59: if ($t47) goto 60 else goto 62
 60: label L15
 61: return ()
 62: label L16
 63: $t54 := 0
 64: abort($t54)
 65: label L13
 66: $t46 := 0
 67: abort($t46)
 68: label L10
 69: $t36 := 0
 70: abort($t36)
 71: label L7
 72: $t28 := 0
 73: abort($t28)
 74: label L4
 75: $t18 := 0
 76: abort($t18)
 77: label L1
 78: $t14 := 0
 79: abort($t14)
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
  0: $t4 := 1
  1: $t5 := 2
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  3: $t7 := 1
  4: $t8 := 2
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
  6: $t2 := vector($t3, $t6)
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
  8: $t0 := vector($t1)
  9: $t13 := 1
 10: $t14 := 2
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
 12: $t16 := 1
 13: $t17 := 2
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
 15: $t11 := vector($t12, $t15)
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
 17: $t21 := 1
 18: $t22 := 2
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
 20: $t24 := 1
 21: $t25 := 2
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
 23: $t19 := vector($t20, $t23)
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
 25: $t9 := vector($t10, $t18)
 26: $t27 := copy($t0)
 27: $t26 := !=($t27, $t9)
 28: if ($t26) goto 29 else goto 95
 29: label L0
 30: $t30 := borrow_local($t0)
 31: $t31 := borrow_local($t9)
 32: $t29 := !=($t30, $t31)
 33: if ($t29) goto 34 else goto 92
 34: label L3
 35: $t36 := borrow_local($t0)
 36: $t37 := 0
 37: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
 38: $t34 := read_ref($t35)
 39: $t40 := borrow_local($t9)
 40: $t41 := 0
 41: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
 42: $t38 := read_ref($t39)
 43: $t33 := ==($t34, $t38)
 44: if ($t33) goto 45 else goto 89
 45: label L6
 46: $t45 := borrow_local($t0)
 47: $t46 := 0
 48: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
 49: $t48 := borrow_local($t9)
 50: $t49 := 0
 51: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
 52: $t43 := ==($t44, $t47)
 53: if ($t43) goto 54 else goto 86
 54: label L9
 55: $t54 := borrow_local($t0)
 56: $t55 := 0
 57: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
 58: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 59: $t52 := read_ref($t56)
 60: $t59 := borrow_local($t9)
 61: $t60 := 0
 62: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
 63: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
 64: $t57 := read_ref($t61)
 65: $t51 := ==($t52, $t57)
 66: if ($t51) goto 67 else goto 83
 67: label L12
 68: $t66 := borrow_local($t0)
 69: $t67 := 0
 70: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
 71: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
 72: $t70 := borrow_local($t9)
 73: $t71 := 0
 74: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
 75: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
 76: $t63 := ==($t64, $t68)
 77: if ($t63) goto 78 else goto 80
 78: label L15
 79: return ()
 80: label L16
 81: $t72 := 0
 82: abort($t72)
 83: label L13
 84: $t62 := 0
 85: abort($t62)
 86: label L10
 87: $t50 := 0
 88: abort($t50)
 89: label L7
 90: $t42 := 0
 91: abort($t42)
 92: label L4
 93: $t32 := 0
 94: abort($t32)
 95: label L1
 96: $t28 := 0
 97: abort($t28)
}

============ after SplitCriticalEdgesProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
  0: $t1 := 1
  1: $t2 := 2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
  3: $t4 := 1
  4: $t5 := 2
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  6: $t7 := copy($t0)
  7: $t6 := ==($t7, $t3)
  8: if ($t6) goto 9 else goto 63
  9: label L0
 10: $t10 := borrow_local($t0)
 11: $t11 := borrow_local($t3)
 12: $t9 := ==($t10, $t11)
 13: if ($t9) goto 14 else goto 60
 14: label L3
 15: $t15 := borrow_local($t0)
 16: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
 17: $t14 := read_ref($t16)
 18: $t18 := borrow_local($t3)
 19: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
 20: $t17 := read_ref($t19)
 21: $t13 := ==($t14, $t17)
 22: if ($t13) goto 23 else goto 57
 23: label L6
 24: $t23 := borrow_local($t0)
 25: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
 26: $t25 := borrow_local($t3)
 27: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
 28: $t21 := ==($t22, $t24)
 29: if ($t21) goto 30 else goto 54
 30: label L9
 31: $t29 := borrow_local($t0)
 32: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
 33: $t28 := read_ref($t30)
 34: $t32 := borrow_local($t3)
 35: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
 36: $t31 := read_ref($t33)
 37: $t27 := ==($t28, $t31)
 38: if ($t27) goto 39 else goto 51
 39: label L12
 40: $t37 := borrow_local($t0)
 41: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
 42: $t39 := borrow_local($t3)
 43: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
 44: $t35 := ==($t36, $t38)
 45: if ($t35) goto 46 else goto 48
 46: label L15
 47: return ()
 48: label L16
 49: $t40 := 0
 50: abort($t40)
 51: label L13
 52: $t34 := 0
 53: abort($t34)
 54: label L10
 55: $t26 := 0
 56: abort($t26)
 57: label L7
 58: $t20 := 0
 59: abort($t20)
 60: label L4
 61: $t12 := 0
 62: abort($t12)
 63: label L1
 64: $t8 := 0
 65: abort($t8)
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64>
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64
     var $t7: bool
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64
     var $t11: bool
     var $t12: vector<u64>
     var $t13: &0xc0ffee::m::Test2
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: bool
     var $t20: &vector<u64>
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2
     var $t24: u64
     var $t25: bool
     var $t26: u64
     var $t27: &u64
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: u64
     var $t32: &u64
     var $t33: &vector<u64>
     var $t34: &0xc0ffee::m::Test2
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: &u64
     var $t43: &vector<u64>
     var $t44: &0xc0ffee::m::Test2
     var $t45: u64
     var $t46: u64
  0: $t1 := ["1", "2", "3"]
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
  2: $t3 := ["1", "2", "3"]
  3: $t2 := pack 0xc0ffee::m::Test2($t3)
  4: $t5 := copy($t0)
  5: $t4 := ==($t5, $t2)
  6: if ($t4) goto 7 else goto 69
  7: label L0
  8: $t8 := borrow_local($t0)
  9: $t9 := borrow_local($t2)
 10: $t7 := ==($t8, $t9)
 11: if ($t7) goto 12 else goto 66
 12: label L3
 13: $t13 := borrow_local($t0)
 14: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t13)
 15: $t12 := read_ref($t14)
 16: $t16 := borrow_local($t2)
 17: $t17 := borrow_field<0xc0ffee::m::Test2>.a($t16)
 18: $t15 := read_ref($t17)
 19: $t11 := ==($t12, $t15)
 20: if ($t11) goto 21 else goto 63
 21: label L6
 22: $t21 := borrow_local($t0)
 23: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t21)
 24: $t23 := borrow_local($t2)
 25: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t23)
 26: $t19 := ==($t20, $t22)
 27: if ($t19) goto 28 else goto 60
 28: label L9
 29: $t29 := borrow_local($t0)
 30: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
 31: $t30 := 0
 32: $t27 := vector::borrow<u64>($t28, $t30)
 33: $t26 := read_ref($t27)
 34: $t34 := borrow_local($t2)
 35: $t33 := borrow_field<0xc0ffee::m::Test2>.a($t34)
 36: $t35 := 0
 37: $t32 := vector::borrow<u64>($t33, $t35)
 38: $t31 := read_ref($t32)
 39: $t25 := ==($t26, $t31)
 40: if ($t25) goto 41 else goto 57
 41: label L12
 42: $t40 := borrow_local($t0)
 43: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
 44: $t41 := 0
 45: $t38 := vector::borrow<u64>($t39, $t41)
 46: $t44 := borrow_local($t2)
 47: $t43 := borrow_field<0xc0ffee::m::Test2>.a($t44)
 48: $t45 := 0
 49: $t42 := vector::borrow<u64>($t43, $t45)
 50: $t37 := ==($t38, $t42)
 51: if ($t37) goto 52 else goto 54
 52: label L15
 53: return ()
 54: label L16
 55: $t46 := 0
 56: abort($t46)
 57: label L13
 58: $t36 := 0
 59: abort($t36)
 60: label L10
 61: $t24 := 0
 62: abort($t24)
 63: label L7
 64: $t18 := 0
 65: abort($t18)
 66: label L4
 67: $t10 := 0
 68: abort($t10)
 69: label L1
 70: $t6 := 0
 71: abort($t6)
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  3: $t1 := vector($t2)
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
  5: $t8 := 1
  6: $t9 := 2
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  8: $t11 := 1
  9: $t12 := 2
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
 11: $t6 := vector($t7, $t10)
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
 13: $t14 := copy($t0)
 14: $t13 := !=($t14, $t5)
 15: if ($t13) goto 16 else goto 78
 16: label L0
 17: $t17 := borrow_local($t0)
 18: $t18 := borrow_local($t5)
 19: $t16 := !=($t17, $t18)
 20: if ($t16) goto 21 else goto 75
 21: label L3
 22: $t22 := borrow_local($t0)
 23: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
 24: $t21 := read_ref($t23)
 25: $t25 := borrow_local($t5)
 26: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
 27: $t24 := read_ref($t26)
 28: $t20 := !=($t21, $t24)
 29: if ($t20) goto 30 else goto 72
 30: label L6
 31: $t30 := borrow_local($t0)
 32: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
 33: $t32 := borrow_local($t5)
 34: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
 35: $t28 := !=($t29, $t31)
 36: if ($t28) goto 37 else goto 69
 37: label L9
 38: $t38 := borrow_local($t0)
 39: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
 40: $t39 := 0
 41: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
 42: $t35 := read_ref($t36)
 43: $t43 := borrow_local($t5)
 44: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
 45: $t44 := 0
 46: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
 47: $t40 := read_ref($t41)
 48: $t34 := ==($t35, $t40)
 49: if ($t34) goto 50 else goto 66
 50: label L12
 51: $t49 := borrow_local($t0)
 52: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
 53: $t50 := 0
 54: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
 55: $t53 := borrow_local($t5)
 56: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 57: $t54 := 0
 58: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
 59: $t46 := ==($t47, $t51)
 60: if ($t46) goto 61 else goto 63
 61: label L15
 62: return ()
 63: label L16
 64: $t55 := 0
 65: abort($t55)
 66: label L13
 67: $t45 := 0
 68: abort($t45)
 69: label L10
 70: $t33 := 0
 71: abort($t33)
 72: label L7
 73: $t27 := 0
 74: abort($t27)
 75: label L4
 76: $t19 := 0
 77: abort($t19)
 78: label L1
 79: $t15 := 0
 80: abort($t15)
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
  3: $t5 := 1
  4: $t6 := 2
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
  6: $t8 := 1
  7: $t9 := 2
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  9: $t0 := vector($t1, $t4, $t7)
 10: $t12 := 1
 11: $t13 := 2
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
 13: $t15 := 1
 14: $t16 := 2
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
 16: $t18 := 1
 17: $t19 := 2
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
 19: $t10 := vector($t11, $t14, $t17)
 20: $t21 := copy($t0)
 21: $t20 := ==($t21, $t10)
 22: if ($t20) goto 23 else goto 85
 23: label L0
 24: $t24 := borrow_local($t0)
 25: $t25 := borrow_local($t10)
 26: $t23 := ==($t24, $t25)
 27: if ($t23) goto 28 else goto 82
 28: label L3
 29: $t30 := borrow_local($t0)
 30: $t31 := 0
 31: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
 32: $t28 := read_ref($t29)
 33: $t34 := borrow_local($t10)
 34: $t35 := 0
 35: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
 36: $t32 := read_ref($t33)
 37: $t27 := ==($t28, $t32)
 38: if ($t27) goto 39 else goto 79
 39: label L6
 40: $t39 := borrow_local($t0)
 41: $t40 := 0
 42: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
 43: $t42 := borrow_local($t10)
 44: $t43 := 0
 45: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
 46: $t37 := ==($t38, $t41)
 47: if ($t37) goto 48 else goto 76
 48: label L9
 49: $t48 := borrow_local($t0)
 50: $t49 := 1
 51: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
 52: $t46 := read_ref($t47)
 53: $t52 := borrow_local($t10)
 54: $t53 := 1
 55: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
 56: $t50 := read_ref($t51)
 57: $t45 := ==($t46, $t50)
 58: if ($t45) goto 59 else goto 73
 59: label L12
 60: $t57 := borrow_local($t0)
 61: $t58 := 1
 62: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
 63: $t60 := borrow_local($t10)
 64: $t61 := 1
 65: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
 66: $t55 := ==($t56, $t59)
 67: if ($t55) goto 68 else goto 70
 68: label L15
 69: return ()
 70: label L16
 71: $t62 := 0
 72: abort($t62)
 73: label L13
 74: $t54 := 0
 75: abort($t54)
 76: label L10
 77: $t44 := 0
 78: abort($t44)
 79: label L7
 80: $t36 := 0
 81: abort($t36)
 82: label L4
 83: $t26 := 0
 84: abort($t26)
 85: label L1
 86: $t22 := 0
 87: abort($t22)
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64>
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: 0xc0ffee::m::Test2
     var $t9: vector<u64>
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64>
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64
     var $t15: bool
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64
     var $t19: bool
     var $t20: 0xc0ffee::m::Test2
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2>
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2
     var $t25: &0xc0ffee::m::Test2
     var $t26: &vector<0xc0ffee::m::Test2>
     var $t27: u64
     var $t28: u64
     var $t29: bool
     var $t30: &0xc0ffee::m::Test2
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: u64
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: 0xc0ffee::m::Test2
     var $t39: &0xc0ffee::m::Test2
     var $t40: &vector<0xc0ffee::m::Test2>
     var $t41: u64
     var $t42: 0xc0ffee::m::Test2
     var $t43: &0xc0ffee::m::Test2
     var $t44: &vector<0xc0ffee::m::Test2>
     var $t45: u64
     var $t46: u64
     var $t47: bool
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: &0xc0ffee::m::Test2
     var $t52: &vector<0xc0ffee::m::Test2>
     var $t53: u64
     var $t54: u64
  0: $t2 := ["1", "2", "3"]
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
  2: $t4 := ["1", "2", "3"]
  3: $t3 := pack 0xc0ffee::m::Test2($t4)
  4: $t0 := vector($t1, $t3)
  5: $t7 := ["1", "2", "3"]
  6: $t6 := pack 0xc0ffee::m::Test2($t7)
  7: $t9 := ["2", "2", "2"]
  8: $t8 := pack 0xc0ffee::m::Test2($t9)
  9: $t11 := ["1", "2", "3"]
 10: $t10 := pack 0xc0ffee::m::Test2($t11)
 11: $t5 := vector($t6, $t8, $t10)
 12: $t13 := copy($t0)
 13: $t12 := !=($t13, $t5)
 14: if ($t12) goto 15 else goto 77
 15: label L0
 16: $t16 := borrow_local($t0)
 17: $t17 := borrow_local($t5)
 18: $t15 := !=($t16, $t17)
 19: if ($t15) goto 20 else goto 74
 20: label L3
 21: $t22 := borrow_local($t0)
 22: $t23 := 0
 23: $t21 := vector::borrow<0xc0ffee::m::Test2>($t22, $t23)
 24: $t20 := read_ref($t21)
 25: $t26 := borrow_local($t5)
 26: $t27 := 0
 27: $t25 := vector::borrow<0xc0ffee::m::Test2>($t26, $t27)
 28: $t24 := read_ref($t25)
 29: $t19 := ==($t20, $t24)
 30: if ($t19) goto 31 else goto 71
 31: label L6
 32: $t31 := borrow_local($t0)
 33: $t32 := 0
 34: $t30 := vector::borrow<0xc0ffee::m::Test2>($t31, $t32)
 35: $t34 := borrow_local($t5)
 36: $t35 := 0
 37: $t33 := vector::borrow<0xc0ffee::m::Test2>($t34, $t35)
 38: $t29 := ==($t30, $t33)
 39: if ($t29) goto 40 else goto 68
 40: label L9
 41: $t40 := borrow_local($t0)
 42: $t41 := 1
 43: $t39 := vector::borrow<0xc0ffee::m::Test2>($t40, $t41)
 44: $t38 := read_ref($t39)
 45: $t44 := borrow_local($t5)
 46: $t45 := 1
 47: $t43 := vector::borrow<0xc0ffee::m::Test2>($t44, $t45)
 48: $t42 := read_ref($t43)
 49: $t37 := !=($t38, $t42)
 50: if ($t37) goto 51 else goto 65
 51: label L12
 52: $t49 := borrow_local($t0)
 53: $t50 := 1
 54: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
 55: $t52 := borrow_local($t5)
 56: $t53 := 1
 57: $t51 := vector::borrow<0xc0ffee::m::Test2>($t52, $t53)
 58: $t47 := !=($t48, $t51)
 59: if ($t47) goto 60 else goto 62
 60: label L15
 61: return ()
 62: label L16
 63: $t54 := 0
 64: abort($t54)
 65: label L13
 66: $t46 := 0
 67: abort($t46)
 68: label L10
 69: $t36 := 0
 70: abort($t36)
 71: label L7
 72: $t28 := 0
 73: abort($t28)
 74: label L4
 75: $t18 := 0
 76: abort($t18)
 77: label L1
 78: $t14 := 0
 79: abort($t14)
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
  0: $t4 := 1
  1: $t5 := 2
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  3: $t7 := 1
  4: $t8 := 2
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
  6: $t2 := vector($t3, $t6)
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
  8: $t0 := vector($t1)
  9: $t13 := 1
 10: $t14 := 2
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
 12: $t16 := 1
 13: $t17 := 2
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
 15: $t11 := vector($t12, $t15)
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
 17: $t21 := 1
 18: $t22 := 2
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
 20: $t24 := 1
 21: $t25 := 2
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
 23: $t19 := vector($t20, $t23)
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
 25: $t9 := vector($t10, $t18)
 26: $t27 := copy($t0)
 27: $t26 := !=($t27, $t9)
 28: if ($t26) goto 29 else goto 95
 29: label L0
 30: $t30 := borrow_local($t0)
 31: $t31 := borrow_local($t9)
 32: $t29 := !=($t30, $t31)
 33: if ($t29) goto 34 else goto 92
 34: label L3
 35: $t36 := borrow_local($t0)
 36: $t37 := 0
 37: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
 38: $t34 := read_ref($t35)
 39: $t40 := borrow_local($t9)
 40: $t41 := 0
 41: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
 42: $t38 := read_ref($t39)
 43: $t33 := ==($t34, $t38)
 44: if ($t33) goto 45 else goto 89
 45: label L6
 46: $t45 := borrow_local($t0)
 47: $t46 := 0
 48: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
 49: $t48 := borrow_local($t9)
 50: $t49 := 0
 51: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
 52: $t43 := ==($t44, $t47)
 53: if ($t43) goto 54 else goto 86
 54: label L9
 55: $t54 := borrow_local($t0)
 56: $t55 := 0
 57: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
 58: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 59: $t52 := read_ref($t56)
 60: $t59 := borrow_local($t9)
 61: $t60 := 0
 62: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
 63: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
 64: $t57 := read_ref($t61)
 65: $t51 := ==($t52, $t57)
 66: if ($t51) goto 67 else goto 83
 67: label L12
 68: $t66 := borrow_local($t0)
 69: $t67 := 0
 70: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
 71: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
 72: $t70 := borrow_local($t9)
 73: $t71 := 0
 74: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
 75: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
 76: $t63 := ==($t64, $t68)
 77: if ($t63) goto 78 else goto 80
 78: label L15
 79: return ()
 80: label L16
 81: $t72 := 0
 82: abort($t72)
 83: label L13
 84: $t62 := 0
 85: abort($t62)
 86: label L10
 87: $t50 := 0
 88: abort($t50)
 89: label L7
 90: $t42 := 0
 91: abort($t42)
 92: label L4
 93: $t32 := 0
 94: abort($t32)
 95: label L1
 96: $t28 := 0
 97: abort($t28)
}

============ after UnreachableCodeProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
     # maybe
  0: $t1 := 1
     # maybe
  1: $t2 := 2
     # maybe
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
     # maybe
  3: $t4 := 1
     # maybe
  4: $t5 := 2
     # maybe
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # maybe
  6: $t7 := copy($t0)
     # maybe
  7: $t6 := ==($t7, $t3)
     # maybe
  8: if ($t6) goto 9 else goto 63
     # maybe
  9: label L0
     # maybe
 10: $t10 := borrow_local($t0)
     # maybe
 11: $t11 := borrow_local($t3)
     # maybe
 12: $t9 := ==($t10, $t11)
     # maybe
 13: if ($t9) goto 14 else goto 60
     # maybe
 14: label L3
     # maybe
 15: $t15 := borrow_local($t0)
     # maybe
 16: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
     # maybe
 17: $t14 := read_ref($t16)
     # maybe
 18: $t18 := borrow_local($t3)
     # maybe
 19: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
     # maybe
 20: $t17 := read_ref($t19)
     # maybe
 21: $t13 := ==($t14, $t17)
     # maybe
 22: if ($t13) goto 23 else goto 57
     # maybe
 23: label L6
     # maybe
 24: $t23 := borrow_local($t0)
     # maybe
 25: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
     # maybe
 26: $t25 := borrow_local($t3)
     # maybe
 27: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
     # maybe
 28: $t21 := ==($t22, $t24)
     # maybe
 29: if ($t21) goto 30 else goto 54
     # maybe
 30: label L9
     # maybe
 31: $t29 := borrow_local($t0)
     # maybe
 32: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
     # maybe
 33: $t28 := read_ref($t30)
     # maybe
 34: $t32 := borrow_local($t3)
     # maybe
 35: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
     # maybe
 36: $t31 := read_ref($t33)
     # maybe
 37: $t27 := ==($t28, $t31)
     # maybe
 38: if ($t27) goto 39 else goto 51
     # maybe
 39: label L12
     # maybe
 40: $t37 := borrow_local($t0)
     # maybe
 41: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
     # maybe
 42: $t39 := borrow_local($t3)
     # maybe
 43: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
     # maybe
 44: $t35 := ==($t36, $t38)
     # maybe
 45: if ($t35) goto 46 else goto 48
     # maybe
 46: label L15
     # maybe
 47: return ()
     # maybe
 48: label L16
     # maybe
 49: $t40 := 0
     # maybe
 50: abort($t40)
     # maybe
 51: label L13
     # maybe
 52: $t34 := 0
     # maybe
 53: abort($t34)
     # maybe
 54: label L10
     # maybe
 55: $t26 := 0
     # maybe
 56: abort($t26)
     # maybe
 57: label L7
     # maybe
 58: $t20 := 0
     # maybe
 59: abort($t20)
     # maybe
 60: label L4
     # maybe
 61: $t12 := 0
     # maybe
 62: abort($t12)
     # maybe
 63: label L1
     # maybe
 64: $t8 := 0
     # maybe
 65: abort($t8)
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64>
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64
     var $t7: bool
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64
     var $t11: bool
     var $t12: vector<u64>
     var $t13: &0xc0ffee::m::Test2
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: bool
     var $t20: &vector<u64>
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2
     var $t24: u64
     var $t25: bool
     var $t26: u64
     var $t27: &u64
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: u64
     var $t32: &u64
     var $t33: &vector<u64>
     var $t34: &0xc0ffee::m::Test2
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: &u64
     var $t43: &vector<u64>
     var $t44: &0xc0ffee::m::Test2
     var $t45: u64
     var $t46: u64
     # maybe
  0: $t1 := ["1", "2", "3"]
     # maybe
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
     # maybe
  2: $t3 := ["1", "2", "3"]
     # maybe
  3: $t2 := pack 0xc0ffee::m::Test2($t3)
     # maybe
  4: $t5 := copy($t0)
     # maybe
  5: $t4 := ==($t5, $t2)
     # maybe
  6: if ($t4) goto 7 else goto 69
     # maybe
  7: label L0
     # maybe
  8: $t8 := borrow_local($t0)
     # maybe
  9: $t9 := borrow_local($t2)
     # maybe
 10: $t7 := ==($t8, $t9)
     # maybe
 11: if ($t7) goto 12 else goto 66
     # maybe
 12: label L3
     # maybe
 13: $t13 := borrow_local($t0)
     # maybe
 14: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t13)
     # maybe
 15: $t12 := read_ref($t14)
     # maybe
 16: $t16 := borrow_local($t2)
     # maybe
 17: $t17 := borrow_field<0xc0ffee::m::Test2>.a($t16)
     # maybe
 18: $t15 := read_ref($t17)
     # maybe
 19: $t11 := ==($t12, $t15)
     # maybe
 20: if ($t11) goto 21 else goto 63
     # maybe
 21: label L6
     # maybe
 22: $t21 := borrow_local($t0)
     # maybe
 23: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t21)
     # maybe
 24: $t23 := borrow_local($t2)
     # maybe
 25: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t23)
     # maybe
 26: $t19 := ==($t20, $t22)
     # maybe
 27: if ($t19) goto 28 else goto 60
     # maybe
 28: label L9
     # maybe
 29: $t29 := borrow_local($t0)
     # maybe
 30: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
     # maybe
 31: $t30 := 0
     # maybe
 32: $t27 := vector::borrow<u64>($t28, $t30)
     # maybe
 33: $t26 := read_ref($t27)
     # maybe
 34: $t34 := borrow_local($t2)
     # maybe
 35: $t33 := borrow_field<0xc0ffee::m::Test2>.a($t34)
     # maybe
 36: $t35 := 0
     # maybe
 37: $t32 := vector::borrow<u64>($t33, $t35)
     # maybe
 38: $t31 := read_ref($t32)
     # maybe
 39: $t25 := ==($t26, $t31)
     # maybe
 40: if ($t25) goto 41 else goto 57
     # maybe
 41: label L12
     # maybe
 42: $t40 := borrow_local($t0)
     # maybe
 43: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
     # maybe
 44: $t41 := 0
     # maybe
 45: $t38 := vector::borrow<u64>($t39, $t41)
     # maybe
 46: $t44 := borrow_local($t2)
     # maybe
 47: $t43 := borrow_field<0xc0ffee::m::Test2>.a($t44)
     # maybe
 48: $t45 := 0
     # maybe
 49: $t42 := vector::borrow<u64>($t43, $t45)
     # maybe
 50: $t37 := ==($t38, $t42)
     # maybe
 51: if ($t37) goto 52 else goto 54
     # maybe
 52: label L15
     # maybe
 53: return ()
     # maybe
 54: label L16
     # maybe
 55: $t46 := 0
     # maybe
 56: abort($t46)
     # maybe
 57: label L13
     # maybe
 58: $t36 := 0
     # maybe
 59: abort($t36)
     # maybe
 60: label L10
     # maybe
 61: $t24 := 0
     # maybe
 62: abort($t24)
     # maybe
 63: label L7
     # maybe
 64: $t18 := 0
     # maybe
 65: abort($t18)
     # maybe
 66: label L4
     # maybe
 67: $t10 := 0
     # maybe
 68: abort($t10)
     # maybe
 69: label L1
     # maybe
 70: $t6 := 0
     # maybe
 71: abort($t6)
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
     # maybe
  0: $t3 := 1
     # maybe
  1: $t4 := 2
     # maybe
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # maybe
  3: $t1 := vector($t2)
     # maybe
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
     # maybe
  5: $t8 := 1
     # maybe
  6: $t9 := 2
     # maybe
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # maybe
  8: $t11 := 1
     # maybe
  9: $t12 := 2
     # maybe
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
     # maybe
 11: $t6 := vector($t7, $t10)
     # maybe
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
     # maybe
 13: $t14 := copy($t0)
     # maybe
 14: $t13 := !=($t14, $t5)
     # maybe
 15: if ($t13) goto 16 else goto 78
     # maybe
 16: label L0
     # maybe
 17: $t17 := borrow_local($t0)
     # maybe
 18: $t18 := borrow_local($t5)
     # maybe
 19: $t16 := !=($t17, $t18)
     # maybe
 20: if ($t16) goto 21 else goto 75
     # maybe
 21: label L3
     # maybe
 22: $t22 := borrow_local($t0)
     # maybe
 23: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
     # maybe
 24: $t21 := read_ref($t23)
     # maybe
 25: $t25 := borrow_local($t5)
     # maybe
 26: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
     # maybe
 27: $t24 := read_ref($t26)
     # maybe
 28: $t20 := !=($t21, $t24)
     # maybe
 29: if ($t20) goto 30 else goto 72
     # maybe
 30: label L6
     # maybe
 31: $t30 := borrow_local($t0)
     # maybe
 32: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
     # maybe
 33: $t32 := borrow_local($t5)
     # maybe
 34: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
     # maybe
 35: $t28 := !=($t29, $t31)
     # maybe
 36: if ($t28) goto 37 else goto 69
     # maybe
 37: label L9
     # maybe
 38: $t38 := borrow_local($t0)
     # maybe
 39: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
     # maybe
 40: $t39 := 0
     # maybe
 41: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
     # maybe
 42: $t35 := read_ref($t36)
     # maybe
 43: $t43 := borrow_local($t5)
     # maybe
 44: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
     # maybe
 45: $t44 := 0
     # maybe
 46: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
     # maybe
 47: $t40 := read_ref($t41)
     # maybe
 48: $t34 := ==($t35, $t40)
     # maybe
 49: if ($t34) goto 50 else goto 66
     # maybe
 50: label L12
     # maybe
 51: $t49 := borrow_local($t0)
     # maybe
 52: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
     # maybe
 53: $t50 := 0
     # maybe
 54: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
     # maybe
 55: $t53 := borrow_local($t5)
     # maybe
 56: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # maybe
 57: $t54 := 0
     # maybe
 58: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
     # maybe
 59: $t46 := ==($t47, $t51)
     # maybe
 60: if ($t46) goto 61 else goto 63
     # maybe
 61: label L15
     # maybe
 62: return ()
     # maybe
 63: label L16
     # maybe
 64: $t55 := 0
     # maybe
 65: abort($t55)
     # maybe
 66: label L13
     # maybe
 67: $t45 := 0
     # maybe
 68: abort($t45)
     # maybe
 69: label L10
     # maybe
 70: $t33 := 0
     # maybe
 71: abort($t33)
     # maybe
 72: label L7
     # maybe
 73: $t27 := 0
     # maybe
 74: abort($t27)
     # maybe
 75: label L4
     # maybe
 76: $t19 := 0
     # maybe
 77: abort($t19)
     # maybe
 78: label L1
     # maybe
 79: $t15 := 0
     # maybe
 80: abort($t15)
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
     # maybe
  0: $t2 := 1
     # maybe
  1: $t3 := 2
     # maybe
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # maybe
  3: $t5 := 1
     # maybe
  4: $t6 := 2
     # maybe
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
     # maybe
  6: $t8 := 1
     # maybe
  7: $t9 := 2
     # maybe
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # maybe
  9: $t0 := vector($t1, $t4, $t7)
     # maybe
 10: $t12 := 1
     # maybe
 11: $t13 := 2
     # maybe
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
     # maybe
 13: $t15 := 1
     # maybe
 14: $t16 := 2
     # maybe
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
     # maybe
 16: $t18 := 1
     # maybe
 17: $t19 := 2
     # maybe
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
     # maybe
 19: $t10 := vector($t11, $t14, $t17)
     # maybe
 20: $t21 := copy($t0)
     # maybe
 21: $t20 := ==($t21, $t10)
     # maybe
 22: if ($t20) goto 23 else goto 85
     # maybe
 23: label L0
     # maybe
 24: $t24 := borrow_local($t0)
     # maybe
 25: $t25 := borrow_local($t10)
     # maybe
 26: $t23 := ==($t24, $t25)
     # maybe
 27: if ($t23) goto 28 else goto 82
     # maybe
 28: label L3
     # maybe
 29: $t30 := borrow_local($t0)
     # maybe
 30: $t31 := 0
     # maybe
 31: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
     # maybe
 32: $t28 := read_ref($t29)
     # maybe
 33: $t34 := borrow_local($t10)
     # maybe
 34: $t35 := 0
     # maybe
 35: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
     # maybe
 36: $t32 := read_ref($t33)
     # maybe
 37: $t27 := ==($t28, $t32)
     # maybe
 38: if ($t27) goto 39 else goto 79
     # maybe
 39: label L6
     # maybe
 40: $t39 := borrow_local($t0)
     # maybe
 41: $t40 := 0
     # maybe
 42: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
     # maybe
 43: $t42 := borrow_local($t10)
     # maybe
 44: $t43 := 0
     # maybe
 45: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
     # maybe
 46: $t37 := ==($t38, $t41)
     # maybe
 47: if ($t37) goto 48 else goto 76
     # maybe
 48: label L9
     # maybe
 49: $t48 := borrow_local($t0)
     # maybe
 50: $t49 := 1
     # maybe
 51: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
     # maybe
 52: $t46 := read_ref($t47)
     # maybe
 53: $t52 := borrow_local($t10)
     # maybe
 54: $t53 := 1
     # maybe
 55: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
     # maybe
 56: $t50 := read_ref($t51)
     # maybe
 57: $t45 := ==($t46, $t50)
     # maybe
 58: if ($t45) goto 59 else goto 73
     # maybe
 59: label L12
     # maybe
 60: $t57 := borrow_local($t0)
     # maybe
 61: $t58 := 1
     # maybe
 62: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
     # maybe
 63: $t60 := borrow_local($t10)
     # maybe
 64: $t61 := 1
     # maybe
 65: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
     # maybe
 66: $t55 := ==($t56, $t59)
     # maybe
 67: if ($t55) goto 68 else goto 70
     # maybe
 68: label L15
     # maybe
 69: return ()
     # maybe
 70: label L16
     # maybe
 71: $t62 := 0
     # maybe
 72: abort($t62)
     # maybe
 73: label L13
     # maybe
 74: $t54 := 0
     # maybe
 75: abort($t54)
     # maybe
 76: label L10
     # maybe
 77: $t44 := 0
     # maybe
 78: abort($t44)
     # maybe
 79: label L7
     # maybe
 80: $t36 := 0
     # maybe
 81: abort($t36)
     # maybe
 82: label L4
     # maybe
 83: $t26 := 0
     # maybe
 84: abort($t26)
     # maybe
 85: label L1
     # maybe
 86: $t22 := 0
     # maybe
 87: abort($t22)
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64>
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: 0xc0ffee::m::Test2
     var $t9: vector<u64>
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64>
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64
     var $t15: bool
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64
     var $t19: bool
     var $t20: 0xc0ffee::m::Test2
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2>
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2
     var $t25: &0xc0ffee::m::Test2
     var $t26: &vector<0xc0ffee::m::Test2>
     var $t27: u64
     var $t28: u64
     var $t29: bool
     var $t30: &0xc0ffee::m::Test2
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: u64
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: 0xc0ffee::m::Test2
     var $t39: &0xc0ffee::m::Test2
     var $t40: &vector<0xc0ffee::m::Test2>
     var $t41: u64
     var $t42: 0xc0ffee::m::Test2
     var $t43: &0xc0ffee::m::Test2
     var $t44: &vector<0xc0ffee::m::Test2>
     var $t45: u64
     var $t46: u64
     var $t47: bool
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: &0xc0ffee::m::Test2
     var $t52: &vector<0xc0ffee::m::Test2>
     var $t53: u64
     var $t54: u64
     # maybe
  0: $t2 := ["1", "2", "3"]
     # maybe
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
     # maybe
  2: $t4 := ["1", "2", "3"]
     # maybe
  3: $t3 := pack 0xc0ffee::m::Test2($t4)
     # maybe
  4: $t0 := vector($t1, $t3)
     # maybe
  5: $t7 := ["1", "2", "3"]
     # maybe
  6: $t6 := pack 0xc0ffee::m::Test2($t7)
     # maybe
  7: $t9 := ["2", "2", "2"]
     # maybe
  8: $t8 := pack 0xc0ffee::m::Test2($t9)
     # maybe
  9: $t11 := ["1", "2", "3"]
     # maybe
 10: $t10 := pack 0xc0ffee::m::Test2($t11)
     # maybe
 11: $t5 := vector($t6, $t8, $t10)
     # maybe
 12: $t13 := copy($t0)
     # maybe
 13: $t12 := !=($t13, $t5)
     # maybe
 14: if ($t12) goto 15 else goto 77
     # maybe
 15: label L0
     # maybe
 16: $t16 := borrow_local($t0)
     # maybe
 17: $t17 := borrow_local($t5)
     # maybe
 18: $t15 := !=($t16, $t17)
     # maybe
 19: if ($t15) goto 20 else goto 74
     # maybe
 20: label L3
     # maybe
 21: $t22 := borrow_local($t0)
     # maybe
 22: $t23 := 0
     # maybe
 23: $t21 := vector::borrow<0xc0ffee::m::Test2>($t22, $t23)
     # maybe
 24: $t20 := read_ref($t21)
     # maybe
 25: $t26 := borrow_local($t5)
     # maybe
 26: $t27 := 0
     # maybe
 27: $t25 := vector::borrow<0xc0ffee::m::Test2>($t26, $t27)
     # maybe
 28: $t24 := read_ref($t25)
     # maybe
 29: $t19 := ==($t20, $t24)
     # maybe
 30: if ($t19) goto 31 else goto 71
     # maybe
 31: label L6
     # maybe
 32: $t31 := borrow_local($t0)
     # maybe
 33: $t32 := 0
     # maybe
 34: $t30 := vector::borrow<0xc0ffee::m::Test2>($t31, $t32)
     # maybe
 35: $t34 := borrow_local($t5)
     # maybe
 36: $t35 := 0
     # maybe
 37: $t33 := vector::borrow<0xc0ffee::m::Test2>($t34, $t35)
     # maybe
 38: $t29 := ==($t30, $t33)
     # maybe
 39: if ($t29) goto 40 else goto 68
     # maybe
 40: label L9
     # maybe
 41: $t40 := borrow_local($t0)
     # maybe
 42: $t41 := 1
     # maybe
 43: $t39 := vector::borrow<0xc0ffee::m::Test2>($t40, $t41)
     # maybe
 44: $t38 := read_ref($t39)
     # maybe
 45: $t44 := borrow_local($t5)
     # maybe
 46: $t45 := 1
     # maybe
 47: $t43 := vector::borrow<0xc0ffee::m::Test2>($t44, $t45)
     # maybe
 48: $t42 := read_ref($t43)
     # maybe
 49: $t37 := !=($t38, $t42)
     # maybe
 50: if ($t37) goto 51 else goto 65
     # maybe
 51: label L12
     # maybe
 52: $t49 := borrow_local($t0)
     # maybe
 53: $t50 := 1
     # maybe
 54: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
     # maybe
 55: $t52 := borrow_local($t5)
     # maybe
 56: $t53 := 1
     # maybe
 57: $t51 := vector::borrow<0xc0ffee::m::Test2>($t52, $t53)
     # maybe
 58: $t47 := !=($t48, $t51)
     # maybe
 59: if ($t47) goto 60 else goto 62
     # maybe
 60: label L15
     # maybe
 61: return ()
     # maybe
 62: label L16
     # maybe
 63: $t54 := 0
     # maybe
 64: abort($t54)
     # maybe
 65: label L13
     # maybe
 66: $t46 := 0
     # maybe
 67: abort($t46)
     # maybe
 68: label L10
     # maybe
 69: $t36 := 0
     # maybe
 70: abort($t36)
     # maybe
 71: label L7
     # maybe
 72: $t28 := 0
     # maybe
 73: abort($t28)
     # maybe
 74: label L4
     # maybe
 75: $t18 := 0
     # maybe
 76: abort($t18)
     # maybe
 77: label L1
     # maybe
 78: $t14 := 0
     # maybe
 79: abort($t14)
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
     # maybe
  0: $t4 := 1
     # maybe
  1: $t5 := 2
     # maybe
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # maybe
  3: $t7 := 1
     # maybe
  4: $t8 := 2
     # maybe
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
     # maybe
  6: $t2 := vector($t3, $t6)
     # maybe
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
     # maybe
  8: $t0 := vector($t1)
     # maybe
  9: $t13 := 1
     # maybe
 10: $t14 := 2
     # maybe
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
     # maybe
 12: $t16 := 1
     # maybe
 13: $t17 := 2
     # maybe
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
     # maybe
 15: $t11 := vector($t12, $t15)
     # maybe
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
     # maybe
 17: $t21 := 1
     # maybe
 18: $t22 := 2
     # maybe
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
     # maybe
 20: $t24 := 1
     # maybe
 21: $t25 := 2
     # maybe
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
     # maybe
 23: $t19 := vector($t20, $t23)
     # maybe
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
     # maybe
 25: $t9 := vector($t10, $t18)
     # maybe
 26: $t27 := copy($t0)
     # maybe
 27: $t26 := !=($t27, $t9)
     # maybe
 28: if ($t26) goto 29 else goto 95
     # maybe
 29: label L0
     # maybe
 30: $t30 := borrow_local($t0)
     # maybe
 31: $t31 := borrow_local($t9)
     # maybe
 32: $t29 := !=($t30, $t31)
     # maybe
 33: if ($t29) goto 34 else goto 92
     # maybe
 34: label L3
     # maybe
 35: $t36 := borrow_local($t0)
     # maybe
 36: $t37 := 0
     # maybe
 37: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
     # maybe
 38: $t34 := read_ref($t35)
     # maybe
 39: $t40 := borrow_local($t9)
     # maybe
 40: $t41 := 0
     # maybe
 41: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
     # maybe
 42: $t38 := read_ref($t39)
     # maybe
 43: $t33 := ==($t34, $t38)
     # maybe
 44: if ($t33) goto 45 else goto 89
     # maybe
 45: label L6
     # maybe
 46: $t45 := borrow_local($t0)
     # maybe
 47: $t46 := 0
     # maybe
 48: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
     # maybe
 49: $t48 := borrow_local($t9)
     # maybe
 50: $t49 := 0
     # maybe
 51: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
     # maybe
 52: $t43 := ==($t44, $t47)
     # maybe
 53: if ($t43) goto 54 else goto 86
     # maybe
 54: label L9
     # maybe
 55: $t54 := borrow_local($t0)
     # maybe
 56: $t55 := 0
     # maybe
 57: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
     # maybe
 58: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # maybe
 59: $t52 := read_ref($t56)
     # maybe
 60: $t59 := borrow_local($t9)
     # maybe
 61: $t60 := 0
     # maybe
 62: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
     # maybe
 63: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
     # maybe
 64: $t57 := read_ref($t61)
     # maybe
 65: $t51 := ==($t52, $t57)
     # maybe
 66: if ($t51) goto 67 else goto 83
     # maybe
 67: label L12
     # maybe
 68: $t66 := borrow_local($t0)
     # maybe
 69: $t67 := 0
     # maybe
 70: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
     # maybe
 71: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
     # maybe
 72: $t70 := borrow_local($t9)
     # maybe
 73: $t71 := 0
     # maybe
 74: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
     # maybe
 75: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
     # maybe
 76: $t63 := ==($t64, $t68)
     # maybe
 77: if ($t63) goto 78 else goto 80
     # maybe
 78: label L15
     # maybe
 79: return ()
     # maybe
 80: label L16
     # maybe
 81: $t72 := 0
     # maybe
 82: abort($t72)
     # maybe
 83: label L13
     # maybe
 84: $t62 := 0
     # maybe
 85: abort($t62)
     # maybe
 86: label L10
     # maybe
 87: $t50 := 0
     # maybe
 88: abort($t50)
     # maybe
 89: label L7
     # maybe
 90: $t42 := 0
     # maybe
 91: abort($t42)
     # maybe
 92: label L4
     # maybe
 93: $t32 := 0
     # maybe
 94: abort($t32)
     # maybe
 95: label L1
     # maybe
 96: $t28 := 0
     # maybe
 97: abort($t28)
}

============ after UnreachableCodeRemover: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
  0: $t1 := 1
  1: $t2 := 2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
  3: $t4 := 1
  4: $t5 := 2
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  6: $t7 := copy($t0)
  7: $t6 := ==($t7, $t3)
  8: if ($t6) goto 9 else goto 63
  9: label L0
 10: $t10 := borrow_local($t0)
 11: $t11 := borrow_local($t3)
 12: $t9 := ==($t10, $t11)
 13: if ($t9) goto 14 else goto 60
 14: label L3
 15: $t15 := borrow_local($t0)
 16: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
 17: $t14 := read_ref($t16)
 18: $t18 := borrow_local($t3)
 19: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
 20: $t17 := read_ref($t19)
 21: $t13 := ==($t14, $t17)
 22: if ($t13) goto 23 else goto 57
 23: label L6
 24: $t23 := borrow_local($t0)
 25: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
 26: $t25 := borrow_local($t3)
 27: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
 28: $t21 := ==($t22, $t24)
 29: if ($t21) goto 30 else goto 54
 30: label L9
 31: $t29 := borrow_local($t0)
 32: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
 33: $t28 := read_ref($t30)
 34: $t32 := borrow_local($t3)
 35: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
 36: $t31 := read_ref($t33)
 37: $t27 := ==($t28, $t31)
 38: if ($t27) goto 39 else goto 51
 39: label L12
 40: $t37 := borrow_local($t0)
 41: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
 42: $t39 := borrow_local($t3)
 43: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
 44: $t35 := ==($t36, $t38)
 45: if ($t35) goto 46 else goto 48
 46: label L15
 47: return ()
 48: label L16
 49: $t40 := 0
 50: abort($t40)
 51: label L13
 52: $t34 := 0
 53: abort($t34)
 54: label L10
 55: $t26 := 0
 56: abort($t26)
 57: label L7
 58: $t20 := 0
 59: abort($t20)
 60: label L4
 61: $t12 := 0
 62: abort($t12)
 63: label L1
 64: $t8 := 0
 65: abort($t8)
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64>
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64
     var $t7: bool
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64
     var $t11: bool
     var $t12: vector<u64>
     var $t13: &0xc0ffee::m::Test2
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: bool
     var $t20: &vector<u64>
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2
     var $t24: u64
     var $t25: bool
     var $t26: u64
     var $t27: &u64
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: u64
     var $t32: &u64
     var $t33: &vector<u64>
     var $t34: &0xc0ffee::m::Test2
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: &u64
     var $t43: &vector<u64>
     var $t44: &0xc0ffee::m::Test2
     var $t45: u64
     var $t46: u64
  0: $t1 := ["1", "2", "3"]
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
  2: $t3 := ["1", "2", "3"]
  3: $t2 := pack 0xc0ffee::m::Test2($t3)
  4: $t5 := copy($t0)
  5: $t4 := ==($t5, $t2)
  6: if ($t4) goto 7 else goto 69
  7: label L0
  8: $t8 := borrow_local($t0)
  9: $t9 := borrow_local($t2)
 10: $t7 := ==($t8, $t9)
 11: if ($t7) goto 12 else goto 66
 12: label L3
 13: $t13 := borrow_local($t0)
 14: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t13)
 15: $t12 := read_ref($t14)
 16: $t16 := borrow_local($t2)
 17: $t17 := borrow_field<0xc0ffee::m::Test2>.a($t16)
 18: $t15 := read_ref($t17)
 19: $t11 := ==($t12, $t15)
 20: if ($t11) goto 21 else goto 63
 21: label L6
 22: $t21 := borrow_local($t0)
 23: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t21)
 24: $t23 := borrow_local($t2)
 25: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t23)
 26: $t19 := ==($t20, $t22)
 27: if ($t19) goto 28 else goto 60
 28: label L9
 29: $t29 := borrow_local($t0)
 30: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
 31: $t30 := 0
 32: $t27 := vector::borrow<u64>($t28, $t30)
 33: $t26 := read_ref($t27)
 34: $t34 := borrow_local($t2)
 35: $t33 := borrow_field<0xc0ffee::m::Test2>.a($t34)
 36: $t35 := 0
 37: $t32 := vector::borrow<u64>($t33, $t35)
 38: $t31 := read_ref($t32)
 39: $t25 := ==($t26, $t31)
 40: if ($t25) goto 41 else goto 57
 41: label L12
 42: $t40 := borrow_local($t0)
 43: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
 44: $t41 := 0
 45: $t38 := vector::borrow<u64>($t39, $t41)
 46: $t44 := borrow_local($t2)
 47: $t43 := borrow_field<0xc0ffee::m::Test2>.a($t44)
 48: $t45 := 0
 49: $t42 := vector::borrow<u64>($t43, $t45)
 50: $t37 := ==($t38, $t42)
 51: if ($t37) goto 52 else goto 54
 52: label L15
 53: return ()
 54: label L16
 55: $t46 := 0
 56: abort($t46)
 57: label L13
 58: $t36 := 0
 59: abort($t36)
 60: label L10
 61: $t24 := 0
 62: abort($t24)
 63: label L7
 64: $t18 := 0
 65: abort($t18)
 66: label L4
 67: $t10 := 0
 68: abort($t10)
 69: label L1
 70: $t6 := 0
 71: abort($t6)
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  3: $t1 := vector($t2)
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
  5: $t8 := 1
  6: $t9 := 2
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  8: $t11 := 1
  9: $t12 := 2
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
 11: $t6 := vector($t7, $t10)
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
 13: $t14 := copy($t0)
 14: $t13 := !=($t14, $t5)
 15: if ($t13) goto 16 else goto 78
 16: label L0
 17: $t17 := borrow_local($t0)
 18: $t18 := borrow_local($t5)
 19: $t16 := !=($t17, $t18)
 20: if ($t16) goto 21 else goto 75
 21: label L3
 22: $t22 := borrow_local($t0)
 23: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
 24: $t21 := read_ref($t23)
 25: $t25 := borrow_local($t5)
 26: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
 27: $t24 := read_ref($t26)
 28: $t20 := !=($t21, $t24)
 29: if ($t20) goto 30 else goto 72
 30: label L6
 31: $t30 := borrow_local($t0)
 32: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
 33: $t32 := borrow_local($t5)
 34: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
 35: $t28 := !=($t29, $t31)
 36: if ($t28) goto 37 else goto 69
 37: label L9
 38: $t38 := borrow_local($t0)
 39: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
 40: $t39 := 0
 41: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
 42: $t35 := read_ref($t36)
 43: $t43 := borrow_local($t5)
 44: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
 45: $t44 := 0
 46: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
 47: $t40 := read_ref($t41)
 48: $t34 := ==($t35, $t40)
 49: if ($t34) goto 50 else goto 66
 50: label L12
 51: $t49 := borrow_local($t0)
 52: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
 53: $t50 := 0
 54: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
 55: $t53 := borrow_local($t5)
 56: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 57: $t54 := 0
 58: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
 59: $t46 := ==($t47, $t51)
 60: if ($t46) goto 61 else goto 63
 61: label L15
 62: return ()
 63: label L16
 64: $t55 := 0
 65: abort($t55)
 66: label L13
 67: $t45 := 0
 68: abort($t45)
 69: label L10
 70: $t33 := 0
 71: abort($t33)
 72: label L7
 73: $t27 := 0
 74: abort($t27)
 75: label L4
 76: $t19 := 0
 77: abort($t19)
 78: label L1
 79: $t15 := 0
 80: abort($t15)
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
  3: $t5 := 1
  4: $t6 := 2
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
  6: $t8 := 1
  7: $t9 := 2
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  9: $t0 := vector($t1, $t4, $t7)
 10: $t12 := 1
 11: $t13 := 2
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
 13: $t15 := 1
 14: $t16 := 2
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
 16: $t18 := 1
 17: $t19 := 2
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
 19: $t10 := vector($t11, $t14, $t17)
 20: $t21 := copy($t0)
 21: $t20 := ==($t21, $t10)
 22: if ($t20) goto 23 else goto 85
 23: label L0
 24: $t24 := borrow_local($t0)
 25: $t25 := borrow_local($t10)
 26: $t23 := ==($t24, $t25)
 27: if ($t23) goto 28 else goto 82
 28: label L3
 29: $t30 := borrow_local($t0)
 30: $t31 := 0
 31: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
 32: $t28 := read_ref($t29)
 33: $t34 := borrow_local($t10)
 34: $t35 := 0
 35: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
 36: $t32 := read_ref($t33)
 37: $t27 := ==($t28, $t32)
 38: if ($t27) goto 39 else goto 79
 39: label L6
 40: $t39 := borrow_local($t0)
 41: $t40 := 0
 42: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
 43: $t42 := borrow_local($t10)
 44: $t43 := 0
 45: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
 46: $t37 := ==($t38, $t41)
 47: if ($t37) goto 48 else goto 76
 48: label L9
 49: $t48 := borrow_local($t0)
 50: $t49 := 1
 51: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
 52: $t46 := read_ref($t47)
 53: $t52 := borrow_local($t10)
 54: $t53 := 1
 55: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
 56: $t50 := read_ref($t51)
 57: $t45 := ==($t46, $t50)
 58: if ($t45) goto 59 else goto 73
 59: label L12
 60: $t57 := borrow_local($t0)
 61: $t58 := 1
 62: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
 63: $t60 := borrow_local($t10)
 64: $t61 := 1
 65: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
 66: $t55 := ==($t56, $t59)
 67: if ($t55) goto 68 else goto 70
 68: label L15
 69: return ()
 70: label L16
 71: $t62 := 0
 72: abort($t62)
 73: label L13
 74: $t54 := 0
 75: abort($t54)
 76: label L10
 77: $t44 := 0
 78: abort($t44)
 79: label L7
 80: $t36 := 0
 81: abort($t36)
 82: label L4
 83: $t26 := 0
 84: abort($t26)
 85: label L1
 86: $t22 := 0
 87: abort($t22)
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64>
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: 0xc0ffee::m::Test2
     var $t9: vector<u64>
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64>
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64
     var $t15: bool
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64
     var $t19: bool
     var $t20: 0xc0ffee::m::Test2
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2>
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2
     var $t25: &0xc0ffee::m::Test2
     var $t26: &vector<0xc0ffee::m::Test2>
     var $t27: u64
     var $t28: u64
     var $t29: bool
     var $t30: &0xc0ffee::m::Test2
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: u64
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: 0xc0ffee::m::Test2
     var $t39: &0xc0ffee::m::Test2
     var $t40: &vector<0xc0ffee::m::Test2>
     var $t41: u64
     var $t42: 0xc0ffee::m::Test2
     var $t43: &0xc0ffee::m::Test2
     var $t44: &vector<0xc0ffee::m::Test2>
     var $t45: u64
     var $t46: u64
     var $t47: bool
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: &0xc0ffee::m::Test2
     var $t52: &vector<0xc0ffee::m::Test2>
     var $t53: u64
     var $t54: u64
  0: $t2 := ["1", "2", "3"]
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
  2: $t4 := ["1", "2", "3"]
  3: $t3 := pack 0xc0ffee::m::Test2($t4)
  4: $t0 := vector($t1, $t3)
  5: $t7 := ["1", "2", "3"]
  6: $t6 := pack 0xc0ffee::m::Test2($t7)
  7: $t9 := ["2", "2", "2"]
  8: $t8 := pack 0xc0ffee::m::Test2($t9)
  9: $t11 := ["1", "2", "3"]
 10: $t10 := pack 0xc0ffee::m::Test2($t11)
 11: $t5 := vector($t6, $t8, $t10)
 12: $t13 := copy($t0)
 13: $t12 := !=($t13, $t5)
 14: if ($t12) goto 15 else goto 77
 15: label L0
 16: $t16 := borrow_local($t0)
 17: $t17 := borrow_local($t5)
 18: $t15 := !=($t16, $t17)
 19: if ($t15) goto 20 else goto 74
 20: label L3
 21: $t22 := borrow_local($t0)
 22: $t23 := 0
 23: $t21 := vector::borrow<0xc0ffee::m::Test2>($t22, $t23)
 24: $t20 := read_ref($t21)
 25: $t26 := borrow_local($t5)
 26: $t27 := 0
 27: $t25 := vector::borrow<0xc0ffee::m::Test2>($t26, $t27)
 28: $t24 := read_ref($t25)
 29: $t19 := ==($t20, $t24)
 30: if ($t19) goto 31 else goto 71
 31: label L6
 32: $t31 := borrow_local($t0)
 33: $t32 := 0
 34: $t30 := vector::borrow<0xc0ffee::m::Test2>($t31, $t32)
 35: $t34 := borrow_local($t5)
 36: $t35 := 0
 37: $t33 := vector::borrow<0xc0ffee::m::Test2>($t34, $t35)
 38: $t29 := ==($t30, $t33)
 39: if ($t29) goto 40 else goto 68
 40: label L9
 41: $t40 := borrow_local($t0)
 42: $t41 := 1
 43: $t39 := vector::borrow<0xc0ffee::m::Test2>($t40, $t41)
 44: $t38 := read_ref($t39)
 45: $t44 := borrow_local($t5)
 46: $t45 := 1
 47: $t43 := vector::borrow<0xc0ffee::m::Test2>($t44, $t45)
 48: $t42 := read_ref($t43)
 49: $t37 := !=($t38, $t42)
 50: if ($t37) goto 51 else goto 65
 51: label L12
 52: $t49 := borrow_local($t0)
 53: $t50 := 1
 54: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
 55: $t52 := borrow_local($t5)
 56: $t53 := 1
 57: $t51 := vector::borrow<0xc0ffee::m::Test2>($t52, $t53)
 58: $t47 := !=($t48, $t51)
 59: if ($t47) goto 60 else goto 62
 60: label L15
 61: return ()
 62: label L16
 63: $t54 := 0
 64: abort($t54)
 65: label L13
 66: $t46 := 0
 67: abort($t46)
 68: label L10
 69: $t36 := 0
 70: abort($t36)
 71: label L7
 72: $t28 := 0
 73: abort($t28)
 74: label L4
 75: $t18 := 0
 76: abort($t18)
 77: label L1
 78: $t14 := 0
 79: abort($t14)
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
  0: $t4 := 1
  1: $t5 := 2
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  3: $t7 := 1
  4: $t8 := 2
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
  6: $t2 := vector($t3, $t6)
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
  8: $t0 := vector($t1)
  9: $t13 := 1
 10: $t14 := 2
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
 12: $t16 := 1
 13: $t17 := 2
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
 15: $t11 := vector($t12, $t15)
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
 17: $t21 := 1
 18: $t22 := 2
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
 20: $t24 := 1
 21: $t25 := 2
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
 23: $t19 := vector($t20, $t23)
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
 25: $t9 := vector($t10, $t18)
 26: $t27 := copy($t0)
 27: $t26 := !=($t27, $t9)
 28: if ($t26) goto 29 else goto 95
 29: label L0
 30: $t30 := borrow_local($t0)
 31: $t31 := borrow_local($t9)
 32: $t29 := !=($t30, $t31)
 33: if ($t29) goto 34 else goto 92
 34: label L3
 35: $t36 := borrow_local($t0)
 36: $t37 := 0
 37: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
 38: $t34 := read_ref($t35)
 39: $t40 := borrow_local($t9)
 40: $t41 := 0
 41: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
 42: $t38 := read_ref($t39)
 43: $t33 := ==($t34, $t38)
 44: if ($t33) goto 45 else goto 89
 45: label L6
 46: $t45 := borrow_local($t0)
 47: $t46 := 0
 48: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
 49: $t48 := borrow_local($t9)
 50: $t49 := 0
 51: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
 52: $t43 := ==($t44, $t47)
 53: if ($t43) goto 54 else goto 86
 54: label L9
 55: $t54 := borrow_local($t0)
 56: $t55 := 0
 57: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
 58: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 59: $t52 := read_ref($t56)
 60: $t59 := borrow_local($t9)
 61: $t60 := 0
 62: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
 63: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
 64: $t57 := read_ref($t61)
 65: $t51 := ==($t52, $t57)
 66: if ($t51) goto 67 else goto 83
 67: label L12
 68: $t66 := borrow_local($t0)
 69: $t67 := 0
 70: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
 71: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
 72: $t70 := borrow_local($t9)
 73: $t71 := 0
 74: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
 75: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
 76: $t63 := ==($t64, $t68)
 77: if ($t63) goto 78 else goto 80
 78: label L15
 79: return ()
 80: label L16
 81: $t72 := 0
 82: abort($t72)
 83: label L13
 84: $t62 := 0
 85: abort($t62)
 86: label L10
 87: $t50 := 0
 88: abort($t50)
 89: label L7
 90: $t42 := 0
 91: abort($t42)
 92: label L4
 93: $t32 := 0
 94: abort($t32)
 95: label L1
 96: $t28 := 0
 97: abort($t28)
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
     # live vars:
  0: $t1 := 1
     # live vars: $t1
  1: $t2 := 2
     # live vars: $t1, $t2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
     # live vars: $t0
  3: $t4 := 1
     # live vars: $t0, $t4
  4: $t5 := 2
     # live vars: $t0, $t4, $t5
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t3
  6: $t7 := copy($t0)
     # live vars: $t0, $t3, $t7
  7: $t6 := ==($t7, $t3)
     # live vars: $t0, $t3, $t6
  8: if ($t6) goto 9 else goto 63
     # live vars: $t0, $t3
  9: label L0
     # live vars: $t0, $t3
 10: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 11: $t11 := borrow_local($t3)
     # live vars: $t0, $t3, $t10, $t11
 12: $t9 := ==($t10, $t11)
     # live vars: $t0, $t3, $t9
 13: if ($t9) goto 14 else goto 60
     # live vars: $t0, $t3
 14: label L3
     # live vars: $t0, $t3
 15: $t15 := borrow_local($t0)
     # live vars: $t0, $t3, $t15
 16: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
     # live vars: $t0, $t3, $t16
 17: $t14 := read_ref($t16)
     # live vars: $t0, $t3, $t14
 18: $t18 := borrow_local($t3)
     # live vars: $t0, $t3, $t14, $t18
 19: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
     # live vars: $t0, $t3, $t14, $t19
 20: $t17 := read_ref($t19)
     # live vars: $t0, $t3, $t14, $t17
 21: $t13 := ==($t14, $t17)
     # live vars: $t0, $t3, $t13
 22: if ($t13) goto 23 else goto 57
     # live vars: $t0, $t3
 23: label L6
     # live vars: $t0, $t3
 24: $t23 := borrow_local($t0)
     # live vars: $t0, $t3, $t23
 25: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
     # live vars: $t0, $t3, $t22
 26: $t25 := borrow_local($t3)
     # live vars: $t0, $t3, $t22, $t25
 27: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
     # live vars: $t0, $t3, $t22, $t24
 28: $t21 := ==($t22, $t24)
     # live vars: $t0, $t3, $t21
 29: if ($t21) goto 30 else goto 54
     # live vars: $t0, $t3
 30: label L9
     # live vars: $t0, $t3
 31: $t29 := borrow_local($t0)
     # live vars: $t0, $t3, $t29
 32: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
     # live vars: $t0, $t3, $t30
 33: $t28 := read_ref($t30)
     # live vars: $t0, $t3, $t28
 34: $t32 := borrow_local($t3)
     # live vars: $t0, $t3, $t28, $t32
 35: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
     # live vars: $t0, $t3, $t28, $t33
 36: $t31 := read_ref($t33)
     # live vars: $t0, $t3, $t28, $t31
 37: $t27 := ==($t28, $t31)
     # live vars: $t0, $t3, $t27
 38: if ($t27) goto 39 else goto 51
     # live vars: $t0, $t3
 39: label L12
     # live vars: $t0, $t3
 40: $t37 := borrow_local($t0)
     # live vars: $t3, $t37
 41: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
     # live vars: $t3, $t36
 42: $t39 := borrow_local($t3)
     # live vars: $t36, $t39
 43: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
     # live vars: $t36, $t38
 44: $t35 := ==($t36, $t38)
     # live vars: $t35
 45: if ($t35) goto 46 else goto 48
     # live vars:
 46: label L15
     # live vars:
 47: return ()
     # live vars:
 48: label L16
     # live vars:
 49: $t40 := 0
     # live vars: $t40
 50: abort($t40)
     # live vars: $t0, $t3
 51: label L13
     # live vars:
 52: $t34 := 0
     # live vars: $t34
 53: abort($t34)
     # live vars: $t0, $t3
 54: label L10
     # live vars:
 55: $t26 := 0
     # live vars: $t26
 56: abort($t26)
     # live vars: $t0, $t3
 57: label L7
     # live vars:
 58: $t20 := 0
     # live vars: $t20
 59: abort($t20)
     # live vars: $t0, $t3
 60: label L4
     # live vars:
 61: $t12 := 0
     # live vars: $t12
 62: abort($t12)
     # live vars: $t0, $t3
 63: label L1
     # live vars:
 64: $t8 := 0
     # live vars: $t8
 65: abort($t8)
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64>
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64
     var $t7: bool
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64
     var $t11: bool
     var $t12: vector<u64>
     var $t13: &0xc0ffee::m::Test2
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: bool
     var $t20: &vector<u64>
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2
     var $t24: u64
     var $t25: bool
     var $t26: u64
     var $t27: &u64
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: u64
     var $t32: &u64
     var $t33: &vector<u64>
     var $t34: &0xc0ffee::m::Test2
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: &u64
     var $t43: &vector<u64>
     var $t44: &0xc0ffee::m::Test2
     var $t45: u64
     var $t46: u64
     # live vars:
  0: $t1 := ["1", "2", "3"]
     # live vars: $t1
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
     # live vars: $t0
  2: $t3 := ["1", "2", "3"]
     # live vars: $t0, $t3
  3: $t2 := pack 0xc0ffee::m::Test2($t3)
     # live vars: $t0, $t2
  4: $t5 := copy($t0)
     # live vars: $t0, $t2, $t5
  5: $t4 := ==($t5, $t2)
     # live vars: $t0, $t2, $t4
  6: if ($t4) goto 7 else goto 69
     # live vars: $t0, $t2
  7: label L0
     # live vars: $t0, $t2
  8: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
  9: $t9 := borrow_local($t2)
     # live vars: $t0, $t2, $t8, $t9
 10: $t7 := ==($t8, $t9)
     # live vars: $t0, $t2, $t7
 11: if ($t7) goto 12 else goto 66
     # live vars: $t0, $t2
 12: label L3
     # live vars: $t0, $t2
 13: $t13 := borrow_local($t0)
     # live vars: $t0, $t2, $t13
 14: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t13)
     # live vars: $t0, $t2, $t14
 15: $t12 := read_ref($t14)
     # live vars: $t0, $t2, $t12
 16: $t16 := borrow_local($t2)
     # live vars: $t0, $t2, $t12, $t16
 17: $t17 := borrow_field<0xc0ffee::m::Test2>.a($t16)
     # live vars: $t0, $t2, $t12, $t17
 18: $t15 := read_ref($t17)
     # live vars: $t0, $t2, $t12, $t15
 19: $t11 := ==($t12, $t15)
     # live vars: $t0, $t2, $t11
 20: if ($t11) goto 21 else goto 63
     # live vars: $t0, $t2
 21: label L6
     # live vars: $t0, $t2
 22: $t21 := borrow_local($t0)
     # live vars: $t0, $t2, $t21
 23: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t21)
     # live vars: $t0, $t2, $t20
 24: $t23 := borrow_local($t2)
     # live vars: $t0, $t2, $t20, $t23
 25: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t23)
     # live vars: $t0, $t2, $t20, $t22
 26: $t19 := ==($t20, $t22)
     # live vars: $t0, $t2, $t19
 27: if ($t19) goto 28 else goto 60
     # live vars: $t0, $t2
 28: label L9
     # live vars: $t0, $t2
 29: $t29 := borrow_local($t0)
     # live vars: $t0, $t2, $t29
 30: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
     # live vars: $t0, $t2, $t28
 31: $t30 := 0
     # live vars: $t0, $t2, $t28, $t30
 32: $t27 := vector::borrow<u64>($t28, $t30)
     # live vars: $t0, $t2, $t27
 33: $t26 := read_ref($t27)
     # live vars: $t0, $t2, $t26
 34: $t34 := borrow_local($t2)
     # live vars: $t0, $t2, $t26, $t34
 35: $t33 := borrow_field<0xc0ffee::m::Test2>.a($t34)
     # live vars: $t0, $t2, $t26, $t33
 36: $t35 := 0
     # live vars: $t0, $t2, $t26, $t33, $t35
 37: $t32 := vector::borrow<u64>($t33, $t35)
     # live vars: $t0, $t2, $t26, $t32
 38: $t31 := read_ref($t32)
     # live vars: $t0, $t2, $t26, $t31
 39: $t25 := ==($t26, $t31)
     # live vars: $t0, $t2, $t25
 40: if ($t25) goto 41 else goto 57
     # live vars: $t0, $t2
 41: label L12
     # live vars: $t0, $t2
 42: $t40 := borrow_local($t0)
     # live vars: $t2, $t40
 43: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
     # live vars: $t2, $t39
 44: $t41 := 0
     # live vars: $t2, $t39, $t41
 45: $t38 := vector::borrow<u64>($t39, $t41)
     # live vars: $t2, $t38
 46: $t44 := borrow_local($t2)
     # live vars: $t38, $t44
 47: $t43 := borrow_field<0xc0ffee::m::Test2>.a($t44)
     # live vars: $t38, $t43
 48: $t45 := 0
     # live vars: $t38, $t43, $t45
 49: $t42 := vector::borrow<u64>($t43, $t45)
     # live vars: $t38, $t42
 50: $t37 := ==($t38, $t42)
     # live vars: $t37
 51: if ($t37) goto 52 else goto 54
     # live vars:
 52: label L15
     # live vars:
 53: return ()
     # live vars:
 54: label L16
     # live vars:
 55: $t46 := 0
     # live vars: $t46
 56: abort($t46)
     # live vars: $t0, $t2
 57: label L13
     # live vars:
 58: $t36 := 0
     # live vars: $t36
 59: abort($t36)
     # live vars: $t0, $t2
 60: label L10
     # live vars:
 61: $t24 := 0
     # live vars: $t24
 62: abort($t24)
     # live vars: $t0, $t2
 63: label L7
     # live vars:
 64: $t18 := 0
     # live vars: $t18
 65: abort($t18)
     # live vars: $t0, $t2
 66: label L4
     # live vars:
 67: $t10 := 0
     # live vars: $t10
 68: abort($t10)
     # live vars: $t0, $t2
 69: label L1
     # live vars:
 70: $t6 := 0
     # live vars: $t6
 71: abort($t6)
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
     # live vars:
  0: $t3 := 1
     # live vars: $t3
  1: $t4 := 2
     # live vars: $t3, $t4
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t2
  3: $t1 := vector($t2)
     # live vars: $t1
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
     # live vars: $t0
  5: $t8 := 1
     # live vars: $t0, $t8
  6: $t9 := 2
     # live vars: $t0, $t8, $t9
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t0, $t7
  8: $t11 := 1
     # live vars: $t0, $t7, $t11
  9: $t12 := 2
     # live vars: $t0, $t7, $t11, $t12
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
     # live vars: $t0, $t7, $t10
 11: $t6 := vector($t7, $t10)
     # live vars: $t0, $t6
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
     # live vars: $t0, $t5
 13: $t14 := copy($t0)
     # live vars: $t0, $t5, $t14
 14: $t13 := !=($t14, $t5)
     # live vars: $t0, $t5, $t13
 15: if ($t13) goto 16 else goto 78
     # live vars: $t0, $t5
 16: label L0
     # live vars: $t0, $t5
 17: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 18: $t18 := borrow_local($t5)
     # live vars: $t0, $t5, $t17, $t18
 19: $t16 := !=($t17, $t18)
     # live vars: $t0, $t5, $t16
 20: if ($t16) goto 21 else goto 75
     # live vars: $t0, $t5
 21: label L3
     # live vars: $t0, $t5
 22: $t22 := borrow_local($t0)
     # live vars: $t0, $t5, $t22
 23: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
     # live vars: $t0, $t5, $t23
 24: $t21 := read_ref($t23)
     # live vars: $t0, $t5, $t21
 25: $t25 := borrow_local($t5)
     # live vars: $t0, $t5, $t21, $t25
 26: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
     # live vars: $t0, $t5, $t21, $t26
 27: $t24 := read_ref($t26)
     # live vars: $t0, $t5, $t21, $t24
 28: $t20 := !=($t21, $t24)
     # live vars: $t0, $t5, $t20
 29: if ($t20) goto 30 else goto 72
     # live vars: $t0, $t5
 30: label L6
     # live vars: $t0, $t5
 31: $t30 := borrow_local($t0)
     # live vars: $t0, $t5, $t30
 32: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
     # live vars: $t0, $t5, $t29
 33: $t32 := borrow_local($t5)
     # live vars: $t0, $t5, $t29, $t32
 34: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
     # live vars: $t0, $t5, $t29, $t31
 35: $t28 := !=($t29, $t31)
     # live vars: $t0, $t5, $t28
 36: if ($t28) goto 37 else goto 69
     # live vars: $t0, $t5
 37: label L9
     # live vars: $t0, $t5
 38: $t38 := borrow_local($t0)
     # live vars: $t0, $t5, $t38
 39: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
     # live vars: $t0, $t5, $t37
 40: $t39 := 0
     # live vars: $t0, $t5, $t37, $t39
 41: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
     # live vars: $t0, $t5, $t36
 42: $t35 := read_ref($t36)
     # live vars: $t0, $t5, $t35
 43: $t43 := borrow_local($t5)
     # live vars: $t0, $t5, $t35, $t43
 44: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
     # live vars: $t0, $t5, $t35, $t42
 45: $t44 := 0
     # live vars: $t0, $t5, $t35, $t42, $t44
 46: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
     # live vars: $t0, $t5, $t35, $t41
 47: $t40 := read_ref($t41)
     # live vars: $t0, $t5, $t35, $t40
 48: $t34 := ==($t35, $t40)
     # live vars: $t0, $t5, $t34
 49: if ($t34) goto 50 else goto 66
     # live vars: $t0, $t5
 50: label L12
     # live vars: $t0, $t5
 51: $t49 := borrow_local($t0)
     # live vars: $t5, $t49
 52: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
     # live vars: $t5, $t48
 53: $t50 := 0
     # live vars: $t5, $t48, $t50
 54: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
     # live vars: $t5, $t47
 55: $t53 := borrow_local($t5)
     # live vars: $t47, $t53
 56: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t47, $t52
 57: $t54 := 0
     # live vars: $t47, $t52, $t54
 58: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
     # live vars: $t47, $t51
 59: $t46 := ==($t47, $t51)
     # live vars: $t46
 60: if ($t46) goto 61 else goto 63
     # live vars:
 61: label L15
     # live vars:
 62: return ()
     # live vars:
 63: label L16
     # live vars:
 64: $t55 := 0
     # live vars: $t55
 65: abort($t55)
     # live vars: $t0, $t5
 66: label L13
     # live vars:
 67: $t45 := 0
     # live vars: $t45
 68: abort($t45)
     # live vars: $t0, $t5
 69: label L10
     # live vars:
 70: $t33 := 0
     # live vars: $t33
 71: abort($t33)
     # live vars: $t0, $t5
 72: label L7
     # live vars:
 73: $t27 := 0
     # live vars: $t27
 74: abort($t27)
     # live vars: $t0, $t5
 75: label L4
     # live vars:
 76: $t19 := 0
     # live vars: $t19
 77: abort($t19)
     # live vars: $t0, $t5
 78: label L1
     # live vars:
 79: $t15 := 0
     # live vars: $t15
 80: abort($t15)
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t3 := 2
     # live vars: $t2, $t3
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1
  3: $t5 := 1
     # live vars: $t1, $t5
  4: $t6 := 2
     # live vars: $t1, $t5, $t6
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
     # live vars: $t1, $t4
  6: $t8 := 1
     # live vars: $t1, $t4, $t8
  7: $t9 := 2
     # live vars: $t1, $t4, $t8, $t9
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t1, $t4, $t7
  9: $t0 := vector($t1, $t4, $t7)
     # live vars: $t0
 10: $t12 := 1
     # live vars: $t0, $t12
 11: $t13 := 2
     # live vars: $t0, $t12, $t13
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
     # live vars: $t0, $t11
 13: $t15 := 1
     # live vars: $t0, $t11, $t15
 14: $t16 := 2
     # live vars: $t0, $t11, $t15, $t16
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
     # live vars: $t0, $t11, $t14
 16: $t18 := 1
     # live vars: $t0, $t11, $t14, $t18
 17: $t19 := 2
     # live vars: $t0, $t11, $t14, $t18, $t19
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
     # live vars: $t0, $t11, $t14, $t17
 19: $t10 := vector($t11, $t14, $t17)
     # live vars: $t0, $t10
 20: $t21 := copy($t0)
     # live vars: $t0, $t10, $t21
 21: $t20 := ==($t21, $t10)
     # live vars: $t0, $t10, $t20
 22: if ($t20) goto 23 else goto 85
     # live vars: $t0, $t10
 23: label L0
     # live vars: $t0, $t10
 24: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 25: $t25 := borrow_local($t10)
     # live vars: $t0, $t10, $t24, $t25
 26: $t23 := ==($t24, $t25)
     # live vars: $t0, $t10, $t23
 27: if ($t23) goto 28 else goto 82
     # live vars: $t0, $t10
 28: label L3
     # live vars: $t0, $t10
 29: $t30 := borrow_local($t0)
     # live vars: $t0, $t10, $t30
 30: $t31 := 0
     # live vars: $t0, $t10, $t30, $t31
 31: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
     # live vars: $t0, $t10, $t29
 32: $t28 := read_ref($t29)
     # live vars: $t0, $t10, $t28
 33: $t34 := borrow_local($t10)
     # live vars: $t0, $t10, $t28, $t34
 34: $t35 := 0
     # live vars: $t0, $t10, $t28, $t34, $t35
 35: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
     # live vars: $t0, $t10, $t28, $t33
 36: $t32 := read_ref($t33)
     # live vars: $t0, $t10, $t28, $t32
 37: $t27 := ==($t28, $t32)
     # live vars: $t0, $t10, $t27
 38: if ($t27) goto 39 else goto 79
     # live vars: $t0, $t10
 39: label L6
     # live vars: $t0, $t10
 40: $t39 := borrow_local($t0)
     # live vars: $t0, $t10, $t39
 41: $t40 := 0
     # live vars: $t0, $t10, $t39, $t40
 42: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
     # live vars: $t0, $t10, $t38
 43: $t42 := borrow_local($t10)
     # live vars: $t0, $t10, $t38, $t42
 44: $t43 := 0
     # live vars: $t0, $t10, $t38, $t42, $t43
 45: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
     # live vars: $t0, $t10, $t38, $t41
 46: $t37 := ==($t38, $t41)
     # live vars: $t0, $t10, $t37
 47: if ($t37) goto 48 else goto 76
     # live vars: $t0, $t10
 48: label L9
     # live vars: $t0, $t10
 49: $t48 := borrow_local($t0)
     # live vars: $t0, $t10, $t48
 50: $t49 := 1
     # live vars: $t0, $t10, $t48, $t49
 51: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
     # live vars: $t0, $t10, $t47
 52: $t46 := read_ref($t47)
     # live vars: $t0, $t10, $t46
 53: $t52 := borrow_local($t10)
     # live vars: $t0, $t10, $t46, $t52
 54: $t53 := 1
     # live vars: $t0, $t10, $t46, $t52, $t53
 55: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
     # live vars: $t0, $t10, $t46, $t51
 56: $t50 := read_ref($t51)
     # live vars: $t0, $t10, $t46, $t50
 57: $t45 := ==($t46, $t50)
     # live vars: $t0, $t10, $t45
 58: if ($t45) goto 59 else goto 73
     # live vars: $t0, $t10
 59: label L12
     # live vars: $t0, $t10
 60: $t57 := borrow_local($t0)
     # live vars: $t10, $t57
 61: $t58 := 1
     # live vars: $t10, $t57, $t58
 62: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
     # live vars: $t10, $t56
 63: $t60 := borrow_local($t10)
     # live vars: $t56, $t60
 64: $t61 := 1
     # live vars: $t56, $t60, $t61
 65: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
     # live vars: $t56, $t59
 66: $t55 := ==($t56, $t59)
     # live vars: $t55
 67: if ($t55) goto 68 else goto 70
     # live vars:
 68: label L15
     # live vars:
 69: return ()
     # live vars:
 70: label L16
     # live vars:
 71: $t62 := 0
     # live vars: $t62
 72: abort($t62)
     # live vars: $t0, $t10
 73: label L13
     # live vars:
 74: $t54 := 0
     # live vars: $t54
 75: abort($t54)
     # live vars: $t0, $t10
 76: label L10
     # live vars:
 77: $t44 := 0
     # live vars: $t44
 78: abort($t44)
     # live vars: $t0, $t10
 79: label L7
     # live vars:
 80: $t36 := 0
     # live vars: $t36
 81: abort($t36)
     # live vars: $t0, $t10
 82: label L4
     # live vars:
 83: $t26 := 0
     # live vars: $t26
 84: abort($t26)
     # live vars: $t0, $t10
 85: label L1
     # live vars:
 86: $t22 := 0
     # live vars: $t22
 87: abort($t22)
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64>
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: 0xc0ffee::m::Test2
     var $t9: vector<u64>
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64>
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64
     var $t15: bool
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64
     var $t19: bool
     var $t20: 0xc0ffee::m::Test2
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2>
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2
     var $t25: &0xc0ffee::m::Test2
     var $t26: &vector<0xc0ffee::m::Test2>
     var $t27: u64
     var $t28: u64
     var $t29: bool
     var $t30: &0xc0ffee::m::Test2
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: u64
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: 0xc0ffee::m::Test2
     var $t39: &0xc0ffee::m::Test2
     var $t40: &vector<0xc0ffee::m::Test2>
     var $t41: u64
     var $t42: 0xc0ffee::m::Test2
     var $t43: &0xc0ffee::m::Test2
     var $t44: &vector<0xc0ffee::m::Test2>
     var $t45: u64
     var $t46: u64
     var $t47: bool
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: &0xc0ffee::m::Test2
     var $t52: &vector<0xc0ffee::m::Test2>
     var $t53: u64
     var $t54: u64
     # live vars:
  0: $t2 := ["1", "2", "3"]
     # live vars: $t2
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t1
  2: $t4 := ["1", "2", "3"]
     # live vars: $t1, $t4
  3: $t3 := pack 0xc0ffee::m::Test2($t4)
     # live vars: $t1, $t3
  4: $t0 := vector($t1, $t3)
     # live vars: $t0
  5: $t7 := ["1", "2", "3"]
     # live vars: $t0, $t7
  6: $t6 := pack 0xc0ffee::m::Test2($t7)
     # live vars: $t0, $t6
  7: $t9 := ["2", "2", "2"]
     # live vars: $t0, $t6, $t9
  8: $t8 := pack 0xc0ffee::m::Test2($t9)
     # live vars: $t0, $t6, $t8
  9: $t11 := ["1", "2", "3"]
     # live vars: $t0, $t6, $t8, $t11
 10: $t10 := pack 0xc0ffee::m::Test2($t11)
     # live vars: $t0, $t6, $t8, $t10
 11: $t5 := vector($t6, $t8, $t10)
     # live vars: $t0, $t5
 12: $t13 := copy($t0)
     # live vars: $t0, $t5, $t13
 13: $t12 := !=($t13, $t5)
     # live vars: $t0, $t5, $t12
 14: if ($t12) goto 15 else goto 77
     # live vars: $t0, $t5
 15: label L0
     # live vars: $t0, $t5
 16: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 17: $t17 := borrow_local($t5)
     # live vars: $t0, $t5, $t16, $t17
 18: $t15 := !=($t16, $t17)
     # live vars: $t0, $t5, $t15
 19: if ($t15) goto 20 else goto 74
     # live vars: $t0, $t5
 20: label L3
     # live vars: $t0, $t5
 21: $t22 := borrow_local($t0)
     # live vars: $t0, $t5, $t22
 22: $t23 := 0
     # live vars: $t0, $t5, $t22, $t23
 23: $t21 := vector::borrow<0xc0ffee::m::Test2>($t22, $t23)
     # live vars: $t0, $t5, $t21
 24: $t20 := read_ref($t21)
     # live vars: $t0, $t5, $t20
 25: $t26 := borrow_local($t5)
     # live vars: $t0, $t5, $t20, $t26
 26: $t27 := 0
     # live vars: $t0, $t5, $t20, $t26, $t27
 27: $t25 := vector::borrow<0xc0ffee::m::Test2>($t26, $t27)
     # live vars: $t0, $t5, $t20, $t25
 28: $t24 := read_ref($t25)
     # live vars: $t0, $t5, $t20, $t24
 29: $t19 := ==($t20, $t24)
     # live vars: $t0, $t5, $t19
 30: if ($t19) goto 31 else goto 71
     # live vars: $t0, $t5
 31: label L6
     # live vars: $t0, $t5
 32: $t31 := borrow_local($t0)
     # live vars: $t0, $t5, $t31
 33: $t32 := 0
     # live vars: $t0, $t5, $t31, $t32
 34: $t30 := vector::borrow<0xc0ffee::m::Test2>($t31, $t32)
     # live vars: $t0, $t5, $t30
 35: $t34 := borrow_local($t5)
     # live vars: $t0, $t5, $t30, $t34
 36: $t35 := 0
     # live vars: $t0, $t5, $t30, $t34, $t35
 37: $t33 := vector::borrow<0xc0ffee::m::Test2>($t34, $t35)
     # live vars: $t0, $t5, $t30, $t33
 38: $t29 := ==($t30, $t33)
     # live vars: $t0, $t5, $t29
 39: if ($t29) goto 40 else goto 68
     # live vars: $t0, $t5
 40: label L9
     # live vars: $t0, $t5
 41: $t40 := borrow_local($t0)
     # live vars: $t0, $t5, $t40
 42: $t41 := 1
     # live vars: $t0, $t5, $t40, $t41
 43: $t39 := vector::borrow<0xc0ffee::m::Test2>($t40, $t41)
     # live vars: $t0, $t5, $t39
 44: $t38 := read_ref($t39)
     # live vars: $t0, $t5, $t38
 45: $t44 := borrow_local($t5)
     # live vars: $t0, $t5, $t38, $t44
 46: $t45 := 1
     # live vars: $t0, $t5, $t38, $t44, $t45
 47: $t43 := vector::borrow<0xc0ffee::m::Test2>($t44, $t45)
     # live vars: $t0, $t5, $t38, $t43
 48: $t42 := read_ref($t43)
     # live vars: $t0, $t5, $t38, $t42
 49: $t37 := !=($t38, $t42)
     # live vars: $t0, $t5, $t37
 50: if ($t37) goto 51 else goto 65
     # live vars: $t0, $t5
 51: label L12
     # live vars: $t0, $t5
 52: $t49 := borrow_local($t0)
     # live vars: $t5, $t49
 53: $t50 := 1
     # live vars: $t5, $t49, $t50
 54: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
     # live vars: $t5, $t48
 55: $t52 := borrow_local($t5)
     # live vars: $t48, $t52
 56: $t53 := 1
     # live vars: $t48, $t52, $t53
 57: $t51 := vector::borrow<0xc0ffee::m::Test2>($t52, $t53)
     # live vars: $t48, $t51
 58: $t47 := !=($t48, $t51)
     # live vars: $t47
 59: if ($t47) goto 60 else goto 62
     # live vars:
 60: label L15
     # live vars:
 61: return ()
     # live vars:
 62: label L16
     # live vars:
 63: $t54 := 0
     # live vars: $t54
 64: abort($t54)
     # live vars: $t0, $t5
 65: label L13
     # live vars:
 66: $t46 := 0
     # live vars: $t46
 67: abort($t46)
     # live vars: $t0, $t5
 68: label L10
     # live vars:
 69: $t36 := 0
     # live vars: $t36
 70: abort($t36)
     # live vars: $t0, $t5
 71: label L7
     # live vars:
 72: $t28 := 0
     # live vars: $t28
 73: abort($t28)
     # live vars: $t0, $t5
 74: label L4
     # live vars:
 75: $t18 := 0
     # live vars: $t18
 76: abort($t18)
     # live vars: $t0, $t5
 77: label L1
     # live vars:
 78: $t14 := 0
     # live vars: $t14
 79: abort($t14)
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
     # live vars:
  0: $t4 := 1
     # live vars: $t4
  1: $t5 := 2
     # live vars: $t4, $t5
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t3
  3: $t7 := 1
     # live vars: $t3, $t7
  4: $t8 := 2
     # live vars: $t3, $t7, $t8
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
     # live vars: $t3, $t6
  6: $t2 := vector($t3, $t6)
     # live vars: $t2
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t1
  8: $t0 := vector($t1)
     # live vars: $t0
  9: $t13 := 1
     # live vars: $t0, $t13
 10: $t14 := 2
     # live vars: $t0, $t13, $t14
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
     # live vars: $t0, $t12
 12: $t16 := 1
     # live vars: $t0, $t12, $t16
 13: $t17 := 2
     # live vars: $t0, $t12, $t16, $t17
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
     # live vars: $t0, $t12, $t15
 15: $t11 := vector($t12, $t15)
     # live vars: $t0, $t11
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
     # live vars: $t0, $t10
 17: $t21 := 1
     # live vars: $t0, $t10, $t21
 18: $t22 := 2
     # live vars: $t0, $t10, $t21, $t22
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
     # live vars: $t0, $t10, $t20
 20: $t24 := 1
     # live vars: $t0, $t10, $t20, $t24
 21: $t25 := 2
     # live vars: $t0, $t10, $t20, $t24, $t25
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
     # live vars: $t0, $t10, $t20, $t23
 23: $t19 := vector($t20, $t23)
     # live vars: $t0, $t10, $t19
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
     # live vars: $t0, $t10, $t18
 25: $t9 := vector($t10, $t18)
     # live vars: $t0, $t9
 26: $t27 := copy($t0)
     # live vars: $t0, $t9, $t27
 27: $t26 := !=($t27, $t9)
     # live vars: $t0, $t9, $t26
 28: if ($t26) goto 29 else goto 95
     # live vars: $t0, $t9
 29: label L0
     # live vars: $t0, $t9
 30: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 31: $t31 := borrow_local($t9)
     # live vars: $t0, $t9, $t30, $t31
 32: $t29 := !=($t30, $t31)
     # live vars: $t0, $t9, $t29
 33: if ($t29) goto 34 else goto 92
     # live vars: $t0, $t9
 34: label L3
     # live vars: $t0, $t9
 35: $t36 := borrow_local($t0)
     # live vars: $t0, $t9, $t36
 36: $t37 := 0
     # live vars: $t0, $t9, $t36, $t37
 37: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
     # live vars: $t0, $t9, $t35
 38: $t34 := read_ref($t35)
     # live vars: $t0, $t9, $t34
 39: $t40 := borrow_local($t9)
     # live vars: $t0, $t9, $t34, $t40
 40: $t41 := 0
     # live vars: $t0, $t9, $t34, $t40, $t41
 41: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
     # live vars: $t0, $t9, $t34, $t39
 42: $t38 := read_ref($t39)
     # live vars: $t0, $t9, $t34, $t38
 43: $t33 := ==($t34, $t38)
     # live vars: $t0, $t9, $t33
 44: if ($t33) goto 45 else goto 89
     # live vars: $t0, $t9
 45: label L6
     # live vars: $t0, $t9
 46: $t45 := borrow_local($t0)
     # live vars: $t0, $t9, $t45
 47: $t46 := 0
     # live vars: $t0, $t9, $t45, $t46
 48: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
     # live vars: $t0, $t9, $t44
 49: $t48 := borrow_local($t9)
     # live vars: $t0, $t9, $t44, $t48
 50: $t49 := 0
     # live vars: $t0, $t9, $t44, $t48, $t49
 51: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
     # live vars: $t0, $t9, $t44, $t47
 52: $t43 := ==($t44, $t47)
     # live vars: $t0, $t9, $t43
 53: if ($t43) goto 54 else goto 86
     # live vars: $t0, $t9
 54: label L9
     # live vars: $t0, $t9
 55: $t54 := borrow_local($t0)
     # live vars: $t0, $t9, $t54
 56: $t55 := 0
     # live vars: $t0, $t9, $t54, $t55
 57: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
     # live vars: $t0, $t9, $t53
 58: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t0, $t9, $t56
 59: $t52 := read_ref($t56)
     # live vars: $t0, $t9, $t52
 60: $t59 := borrow_local($t9)
     # live vars: $t0, $t9, $t52, $t59
 61: $t60 := 0
     # live vars: $t0, $t9, $t52, $t59, $t60
 62: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
     # live vars: $t0, $t9, $t52, $t58
 63: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
     # live vars: $t0, $t9, $t52, $t61
 64: $t57 := read_ref($t61)
     # live vars: $t0, $t9, $t52, $t57
 65: $t51 := ==($t52, $t57)
     # live vars: $t0, $t9, $t51
 66: if ($t51) goto 67 else goto 83
     # live vars: $t0, $t9
 67: label L12
     # live vars: $t0, $t9
 68: $t66 := borrow_local($t0)
     # live vars: $t9, $t66
 69: $t67 := 0
     # live vars: $t9, $t66, $t67
 70: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
     # live vars: $t9, $t65
 71: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
     # live vars: $t9, $t64
 72: $t70 := borrow_local($t9)
     # live vars: $t64, $t70
 73: $t71 := 0
     # live vars: $t64, $t70, $t71
 74: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
     # live vars: $t64, $t69
 75: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
     # live vars: $t64, $t68
 76: $t63 := ==($t64, $t68)
     # live vars: $t63
 77: if ($t63) goto 78 else goto 80
     # live vars:
 78: label L15
     # live vars:
 79: return ()
     # live vars:
 80: label L16
     # live vars:
 81: $t72 := 0
     # live vars: $t72
 82: abort($t72)
     # live vars: $t0, $t9
 83: label L13
     # live vars:
 84: $t62 := 0
     # live vars: $t62
 85: abort($t62)
     # live vars: $t0, $t9
 86: label L10
     # live vars:
 87: $t50 := 0
     # live vars: $t50
 88: abort($t50)
     # live vars: $t0, $t9
 89: label L7
     # live vars:
 90: $t42 := 0
     # live vars: $t42
 91: abort($t42)
     # live vars: $t0, $t9
 92: label L4
     # live vars:
 93: $t32 := 0
     # live vars: $t32
 94: abort($t32)
     # live vars: $t0, $t9
 95: label L1
     # live vars:
 96: $t28 := 0
     # live vars: $t28
 97: abort($t28)
}

============ after DeadStoreElimination: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
  0: $t1 := 1
  1: $t2 := 2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
  3: $t4 := 1
  4: $t5 := 2
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  6: $t7 := copy($t0)
  7: $t6 := ==($t7, $t3)
  8: if ($t6) goto 9 else goto 63
  9: label L0
 10: $t10 := borrow_local($t0)
 11: $t11 := borrow_local($t3)
 12: $t9 := ==($t10, $t11)
 13: if ($t9) goto 14 else goto 60
 14: label L3
 15: $t15 := borrow_local($t0)
 16: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
 17: $t14 := read_ref($t16)
 18: $t18 := borrow_local($t3)
 19: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
 20: $t17 := read_ref($t19)
 21: $t13 := ==($t14, $t17)
 22: if ($t13) goto 23 else goto 57
 23: label L6
 24: $t23 := borrow_local($t0)
 25: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
 26: $t25 := borrow_local($t3)
 27: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
 28: $t21 := ==($t22, $t24)
 29: if ($t21) goto 30 else goto 54
 30: label L9
 31: $t29 := borrow_local($t0)
 32: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
 33: $t28 := read_ref($t30)
 34: $t32 := borrow_local($t3)
 35: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
 36: $t31 := read_ref($t33)
 37: $t27 := ==($t28, $t31)
 38: if ($t27) goto 39 else goto 51
 39: label L12
 40: $t37 := borrow_local($t0)
 41: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
 42: $t39 := borrow_local($t3)
 43: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
 44: $t35 := ==($t36, $t38)
 45: if ($t35) goto 46 else goto 48
 46: label L15
 47: return ()
 48: label L16
 49: $t40 := 0
 50: abort($t40)
 51: label L13
 52: $t34 := 0
 53: abort($t34)
 54: label L10
 55: $t26 := 0
 56: abort($t26)
 57: label L7
 58: $t20 := 0
 59: abort($t20)
 60: label L4
 61: $t12 := 0
 62: abort($t12)
 63: label L1
 64: $t8 := 0
 65: abort($t8)
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64>
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64
     var $t7: bool
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64
     var $t11: bool
     var $t12: vector<u64>
     var $t13: &0xc0ffee::m::Test2
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: bool
     var $t20: &vector<u64>
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2
     var $t24: u64
     var $t25: bool
     var $t26: u64
     var $t27: &u64
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: u64
     var $t32: &u64
     var $t33: &vector<u64>
     var $t34: &0xc0ffee::m::Test2
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: &u64
     var $t43: &vector<u64>
     var $t44: &0xc0ffee::m::Test2
     var $t45: u64
     var $t46: u64
  0: $t1 := ["1", "2", "3"]
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
  2: $t3 := ["1", "2", "3"]
  3: $t2 := pack 0xc0ffee::m::Test2($t3)
  4: $t5 := copy($t0)
  5: $t4 := ==($t5, $t2)
  6: if ($t4) goto 7 else goto 69
  7: label L0
  8: $t8 := borrow_local($t0)
  9: $t9 := borrow_local($t2)
 10: $t7 := ==($t8, $t9)
 11: if ($t7) goto 12 else goto 66
 12: label L3
 13: $t13 := borrow_local($t0)
 14: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t13)
 15: $t12 := read_ref($t14)
 16: $t16 := borrow_local($t2)
 17: $t17 := borrow_field<0xc0ffee::m::Test2>.a($t16)
 18: $t15 := read_ref($t17)
 19: $t11 := ==($t12, $t15)
 20: if ($t11) goto 21 else goto 63
 21: label L6
 22: $t21 := borrow_local($t0)
 23: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t21)
 24: $t23 := borrow_local($t2)
 25: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t23)
 26: $t19 := ==($t20, $t22)
 27: if ($t19) goto 28 else goto 60
 28: label L9
 29: $t29 := borrow_local($t0)
 30: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
 31: $t30 := 0
 32: $t27 := vector::borrow<u64>($t28, $t30)
 33: $t26 := read_ref($t27)
 34: $t34 := borrow_local($t2)
 35: $t33 := borrow_field<0xc0ffee::m::Test2>.a($t34)
 36: $t35 := 0
 37: $t32 := vector::borrow<u64>($t33, $t35)
 38: $t31 := read_ref($t32)
 39: $t25 := ==($t26, $t31)
 40: if ($t25) goto 41 else goto 57
 41: label L12
 42: $t40 := borrow_local($t0)
 43: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
 44: $t41 := 0
 45: $t38 := vector::borrow<u64>($t39, $t41)
 46: $t44 := borrow_local($t2)
 47: $t43 := borrow_field<0xc0ffee::m::Test2>.a($t44)
 48: $t45 := 0
 49: $t42 := vector::borrow<u64>($t43, $t45)
 50: $t37 := ==($t38, $t42)
 51: if ($t37) goto 52 else goto 54
 52: label L15
 53: return ()
 54: label L16
 55: $t46 := 0
 56: abort($t46)
 57: label L13
 58: $t36 := 0
 59: abort($t36)
 60: label L10
 61: $t24 := 0
 62: abort($t24)
 63: label L7
 64: $t18 := 0
 65: abort($t18)
 66: label L4
 67: $t10 := 0
 68: abort($t10)
 69: label L1
 70: $t6 := 0
 71: abort($t6)
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
  0: $t3 := 1
  1: $t4 := 2
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  3: $t1 := vector($t2)
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
  5: $t8 := 1
  6: $t9 := 2
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  8: $t11 := 1
  9: $t12 := 2
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
 11: $t6 := vector($t7, $t10)
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
 13: $t14 := copy($t0)
 14: $t13 := !=($t14, $t5)
 15: if ($t13) goto 16 else goto 78
 16: label L0
 17: $t17 := borrow_local($t0)
 18: $t18 := borrow_local($t5)
 19: $t16 := !=($t17, $t18)
 20: if ($t16) goto 21 else goto 75
 21: label L3
 22: $t22 := borrow_local($t0)
 23: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
 24: $t21 := read_ref($t23)
 25: $t25 := borrow_local($t5)
 26: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
 27: $t24 := read_ref($t26)
 28: $t20 := !=($t21, $t24)
 29: if ($t20) goto 30 else goto 72
 30: label L6
 31: $t30 := borrow_local($t0)
 32: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
 33: $t32 := borrow_local($t5)
 34: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
 35: $t28 := !=($t29, $t31)
 36: if ($t28) goto 37 else goto 69
 37: label L9
 38: $t38 := borrow_local($t0)
 39: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
 40: $t39 := 0
 41: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
 42: $t35 := read_ref($t36)
 43: $t43 := borrow_local($t5)
 44: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
 45: $t44 := 0
 46: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
 47: $t40 := read_ref($t41)
 48: $t34 := ==($t35, $t40)
 49: if ($t34) goto 50 else goto 66
 50: label L12
 51: $t49 := borrow_local($t0)
 52: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
 53: $t50 := 0
 54: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
 55: $t53 := borrow_local($t5)
 56: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 57: $t54 := 0
 58: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
 59: $t46 := ==($t47, $t51)
 60: if ($t46) goto 61 else goto 63
 61: label L15
 62: return ()
 63: label L16
 64: $t55 := 0
 65: abort($t55)
 66: label L13
 67: $t45 := 0
 68: abort($t45)
 69: label L10
 70: $t33 := 0
 71: abort($t33)
 72: label L7
 73: $t27 := 0
 74: abort($t27)
 75: label L4
 76: $t19 := 0
 77: abort($t19)
 78: label L1
 79: $t15 := 0
 80: abort($t15)
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
  3: $t5 := 1
  4: $t6 := 2
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
  6: $t8 := 1
  7: $t9 := 2
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
  9: $t0 := vector($t1, $t4, $t7)
 10: $t12 := 1
 11: $t13 := 2
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
 13: $t15 := 1
 14: $t16 := 2
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
 16: $t18 := 1
 17: $t19 := 2
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
 19: $t10 := vector($t11, $t14, $t17)
 20: $t21 := copy($t0)
 21: $t20 := ==($t21, $t10)
 22: if ($t20) goto 23 else goto 85
 23: label L0
 24: $t24 := borrow_local($t0)
 25: $t25 := borrow_local($t10)
 26: $t23 := ==($t24, $t25)
 27: if ($t23) goto 28 else goto 82
 28: label L3
 29: $t30 := borrow_local($t0)
 30: $t31 := 0
 31: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
 32: $t28 := read_ref($t29)
 33: $t34 := borrow_local($t10)
 34: $t35 := 0
 35: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
 36: $t32 := read_ref($t33)
 37: $t27 := ==($t28, $t32)
 38: if ($t27) goto 39 else goto 79
 39: label L6
 40: $t39 := borrow_local($t0)
 41: $t40 := 0
 42: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
 43: $t42 := borrow_local($t10)
 44: $t43 := 0
 45: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
 46: $t37 := ==($t38, $t41)
 47: if ($t37) goto 48 else goto 76
 48: label L9
 49: $t48 := borrow_local($t0)
 50: $t49 := 1
 51: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
 52: $t46 := read_ref($t47)
 53: $t52 := borrow_local($t10)
 54: $t53 := 1
 55: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
 56: $t50 := read_ref($t51)
 57: $t45 := ==($t46, $t50)
 58: if ($t45) goto 59 else goto 73
 59: label L12
 60: $t57 := borrow_local($t0)
 61: $t58 := 1
 62: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
 63: $t60 := borrow_local($t10)
 64: $t61 := 1
 65: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
 66: $t55 := ==($t56, $t59)
 67: if ($t55) goto 68 else goto 70
 68: label L15
 69: return ()
 70: label L16
 71: $t62 := 0
 72: abort($t62)
 73: label L13
 74: $t54 := 0
 75: abort($t54)
 76: label L10
 77: $t44 := 0
 78: abort($t44)
 79: label L7
 80: $t36 := 0
 81: abort($t36)
 82: label L4
 83: $t26 := 0
 84: abort($t26)
 85: label L1
 86: $t22 := 0
 87: abort($t22)
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64>
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: 0xc0ffee::m::Test2
     var $t9: vector<u64>
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64>
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64
     var $t15: bool
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64
     var $t19: bool
     var $t20: 0xc0ffee::m::Test2
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2>
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2
     var $t25: &0xc0ffee::m::Test2
     var $t26: &vector<0xc0ffee::m::Test2>
     var $t27: u64
     var $t28: u64
     var $t29: bool
     var $t30: &0xc0ffee::m::Test2
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: u64
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: 0xc0ffee::m::Test2
     var $t39: &0xc0ffee::m::Test2
     var $t40: &vector<0xc0ffee::m::Test2>
     var $t41: u64
     var $t42: 0xc0ffee::m::Test2
     var $t43: &0xc0ffee::m::Test2
     var $t44: &vector<0xc0ffee::m::Test2>
     var $t45: u64
     var $t46: u64
     var $t47: bool
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: &0xc0ffee::m::Test2
     var $t52: &vector<0xc0ffee::m::Test2>
     var $t53: u64
     var $t54: u64
  0: $t2 := ["1", "2", "3"]
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
  2: $t4 := ["1", "2", "3"]
  3: $t3 := pack 0xc0ffee::m::Test2($t4)
  4: $t0 := vector($t1, $t3)
  5: $t7 := ["1", "2", "3"]
  6: $t6 := pack 0xc0ffee::m::Test2($t7)
  7: $t9 := ["2", "2", "2"]
  8: $t8 := pack 0xc0ffee::m::Test2($t9)
  9: $t11 := ["1", "2", "3"]
 10: $t10 := pack 0xc0ffee::m::Test2($t11)
 11: $t5 := vector($t6, $t8, $t10)
 12: $t13 := copy($t0)
 13: $t12 := !=($t13, $t5)
 14: if ($t12) goto 15 else goto 77
 15: label L0
 16: $t16 := borrow_local($t0)
 17: $t17 := borrow_local($t5)
 18: $t15 := !=($t16, $t17)
 19: if ($t15) goto 20 else goto 74
 20: label L3
 21: $t22 := borrow_local($t0)
 22: $t23 := 0
 23: $t21 := vector::borrow<0xc0ffee::m::Test2>($t22, $t23)
 24: $t20 := read_ref($t21)
 25: $t26 := borrow_local($t5)
 26: $t27 := 0
 27: $t25 := vector::borrow<0xc0ffee::m::Test2>($t26, $t27)
 28: $t24 := read_ref($t25)
 29: $t19 := ==($t20, $t24)
 30: if ($t19) goto 31 else goto 71
 31: label L6
 32: $t31 := borrow_local($t0)
 33: $t32 := 0
 34: $t30 := vector::borrow<0xc0ffee::m::Test2>($t31, $t32)
 35: $t34 := borrow_local($t5)
 36: $t35 := 0
 37: $t33 := vector::borrow<0xc0ffee::m::Test2>($t34, $t35)
 38: $t29 := ==($t30, $t33)
 39: if ($t29) goto 40 else goto 68
 40: label L9
 41: $t40 := borrow_local($t0)
 42: $t41 := 1
 43: $t39 := vector::borrow<0xc0ffee::m::Test2>($t40, $t41)
 44: $t38 := read_ref($t39)
 45: $t44 := borrow_local($t5)
 46: $t45 := 1
 47: $t43 := vector::borrow<0xc0ffee::m::Test2>($t44, $t45)
 48: $t42 := read_ref($t43)
 49: $t37 := !=($t38, $t42)
 50: if ($t37) goto 51 else goto 65
 51: label L12
 52: $t49 := borrow_local($t0)
 53: $t50 := 1
 54: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
 55: $t52 := borrow_local($t5)
 56: $t53 := 1
 57: $t51 := vector::borrow<0xc0ffee::m::Test2>($t52, $t53)
 58: $t47 := !=($t48, $t51)
 59: if ($t47) goto 60 else goto 62
 60: label L15
 61: return ()
 62: label L16
 63: $t54 := 0
 64: abort($t54)
 65: label L13
 66: $t46 := 0
 67: abort($t46)
 68: label L10
 69: $t36 := 0
 70: abort($t36)
 71: label L7
 72: $t28 := 0
 73: abort($t28)
 74: label L4
 75: $t18 := 0
 76: abort($t18)
 77: label L1
 78: $t14 := 0
 79: abort($t14)
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
  0: $t4 := 1
  1: $t5 := 2
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  3: $t7 := 1
  4: $t8 := 2
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
  6: $t2 := vector($t3, $t6)
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
  8: $t0 := vector($t1)
  9: $t13 := 1
 10: $t14 := 2
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
 12: $t16 := 1
 13: $t17 := 2
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
 15: $t11 := vector($t12, $t15)
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
 17: $t21 := 1
 18: $t22 := 2
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
 20: $t24 := 1
 21: $t25 := 2
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
 23: $t19 := vector($t20, $t23)
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
 25: $t9 := vector($t10, $t18)
 26: $t27 := copy($t0)
 27: $t26 := !=($t27, $t9)
 28: if ($t26) goto 29 else goto 95
 29: label L0
 30: $t30 := borrow_local($t0)
 31: $t31 := borrow_local($t9)
 32: $t29 := !=($t30, $t31)
 33: if ($t29) goto 34 else goto 92
 34: label L3
 35: $t36 := borrow_local($t0)
 36: $t37 := 0
 37: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
 38: $t34 := read_ref($t35)
 39: $t40 := borrow_local($t9)
 40: $t41 := 0
 41: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
 42: $t38 := read_ref($t39)
 43: $t33 := ==($t34, $t38)
 44: if ($t33) goto 45 else goto 89
 45: label L6
 46: $t45 := borrow_local($t0)
 47: $t46 := 0
 48: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
 49: $t48 := borrow_local($t9)
 50: $t49 := 0
 51: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
 52: $t43 := ==($t44, $t47)
 53: if ($t43) goto 54 else goto 86
 54: label L9
 55: $t54 := borrow_local($t0)
 56: $t55 := 0
 57: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
 58: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
 59: $t52 := read_ref($t56)
 60: $t59 := borrow_local($t9)
 61: $t60 := 0
 62: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
 63: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
 64: $t57 := read_ref($t61)
 65: $t51 := ==($t52, $t57)
 66: if ($t51) goto 67 else goto 83
 67: label L12
 68: $t66 := borrow_local($t0)
 69: $t67 := 0
 70: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
 71: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
 72: $t70 := borrow_local($t9)
 73: $t71 := 0
 74: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
 75: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
 76: $t63 := ==($t64, $t68)
 77: if ($t63) goto 78 else goto 80
 78: label L15
 79: return ()
 80: label L16
 81: $t72 := 0
 82: abort($t72)
 83: label L13
 84: $t62 := 0
 85: abort($t62)
 86: label L10
 87: $t50 := 0
 88: abort($t50)
 89: label L7
 90: $t42 := 0
 91: abort($t42)
 92: label L4
 93: $t32 := 0
 94: abort($t32)
 95: label L1
 96: $t28 := 0
 97: abort($t28)
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: bool
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64
     var $t13: bool
     var $t14: u64
     var $t15: &0xc0ffee::m::Test1
     var $t16: &u64
     var $t17: u64
     var $t18: &0xc0ffee::m::Test1
     var $t19: &u64
     var $t20: u64
     var $t21: bool
     var $t22: &u64
     var $t23: &0xc0ffee::m::Test1
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1
     var $t26: u64
     var $t27: bool
     var $t28: u64
     var $t29: &0xc0ffee::m::Test1
     var $t30: &u64
     var $t31: u64
     var $t32: &0xc0ffee::m::Test1
     var $t33: &u64
     var $t34: u64
     var $t35: bool
     var $t36: &u64
     var $t37: &0xc0ffee::m::Test1
     var $t38: &u64
     var $t39: &0xc0ffee::m::Test1
     var $t40: u64
     # live vars:
  0: $t1 := 1
     # live vars: $t1
  1: $t2 := 2
     # live vars: $t1, $t2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
     # live vars: $t0
  3: $t4 := 1
     # live vars: $t0, $t4
  4: $t5 := 2
     # live vars: $t0, $t4, $t5
  5: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t3
  6: $t7 := copy($t0)
     # live vars: $t0, $t3, $t7
  7: $t6 := ==($t7, $t3)
     # live vars: $t0, $t3, $t6
  8: if ($t6) goto 9 else goto 63
     # live vars: $t0, $t3
  9: label L0
     # live vars: $t0, $t3
 10: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 11: $t11 := borrow_local($t3)
     # live vars: $t0, $t3, $t10, $t11
 12: $t9 := ==($t10, $t11)
     # live vars: $t0, $t3, $t9
 13: if ($t9) goto 14 else goto 60
     # live vars: $t0, $t3
 14: label L3
     # live vars: $t0, $t3
 15: $t15 := borrow_local($t0)
     # live vars: $t0, $t3, $t15
 16: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t15)
     # live vars: $t0, $t3, $t16
 17: $t14 := read_ref($t16)
     # live vars: $t0, $t3, $t14
 18: $t18 := borrow_local($t3)
     # live vars: $t0, $t3, $t14, $t18
 19: $t19 := borrow_field<0xc0ffee::m::Test1>.a($t18)
     # live vars: $t0, $t3, $t14, $t19
 20: $t17 := read_ref($t19)
     # live vars: $t0, $t3, $t14, $t17
 21: $t13 := ==($t14, $t17)
     # live vars: $t0, $t3, $t13
 22: if ($t13) goto 23 else goto 57
     # live vars: $t0, $t3
 23: label L6
     # live vars: $t0, $t3
 24: $t23 := borrow_local($t0)
     # live vars: $t0, $t3, $t23
 25: $t22 := borrow_field<0xc0ffee::m::Test1>.a($t23)
     # live vars: $t0, $t3, $t22
 26: $t25 := borrow_local($t3)
     # live vars: $t0, $t3, $t22, $t25
 27: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t25)
     # live vars: $t0, $t3, $t22, $t24
 28: $t21 := ==($t22, $t24)
     # live vars: $t0, $t3, $t21
 29: if ($t21) goto 30 else goto 54
     # live vars: $t0, $t3
 30: label L9
     # live vars: $t0, $t3
 31: $t29 := borrow_local($t0)
     # live vars: $t0, $t3, $t29
 32: $t30 := borrow_field<0xc0ffee::m::Test1>.b($t29)
     # live vars: $t0, $t3, $t30
 33: $t28 := read_ref($t30)
     # live vars: $t0, $t3, $t28
 34: $t32 := borrow_local($t3)
     # live vars: $t0, $t3, $t28, $t32
 35: $t33 := borrow_field<0xc0ffee::m::Test1>.b($t32)
     # live vars: $t0, $t3, $t28, $t33
 36: $t31 := read_ref($t33)
     # live vars: $t0, $t3, $t28, $t31
 37: $t27 := ==($t28, $t31)
     # live vars: $t0, $t3, $t27
 38: if ($t27) goto 39 else goto 51
     # live vars: $t0, $t3
 39: label L12
     # live vars: $t0, $t3
 40: $t37 := borrow_local($t0)
     # live vars: $t3, $t37
 41: $t36 := borrow_field<0xc0ffee::m::Test1>.b($t37)
     # live vars: $t3, $t36
 42: $t39 := borrow_local($t3)
     # live vars: $t36, $t39
 43: $t38 := borrow_field<0xc0ffee::m::Test1>.b($t39)
     # live vars: $t36, $t38
 44: $t35 := ==($t36, $t38)
     # live vars: $t35
 45: if ($t35) goto 46 else goto 48
     # live vars:
 46: label L15
     # live vars:
 47: return ()
     # live vars:
 48: label L16
     # live vars:
 49: $t40 := 0
     # live vars: $t40
 50: abort($t40)
     # live vars: $t0, $t3
 51: label L13
     # live vars:
 52: $t34 := 0
     # live vars: $t34
 53: abort($t34)
     # live vars: $t0, $t3
 54: label L10
     # live vars:
 55: $t26 := 0
     # live vars: $t26
 56: abort($t26)
     # live vars: $t0, $t3
 57: label L7
     # live vars:
 58: $t20 := 0
     # live vars: $t20
 59: abort($t20)
     # live vars: $t0, $t3
 60: label L4
     # live vars:
 61: $t12 := 0
     # live vars: $t12
 62: abort($t12)
     # live vars: $t0, $t3
 63: label L1
     # live vars:
 64: $t8 := 0
     # live vars: $t8
 65: abort($t8)
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64>
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64
     var $t7: bool
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64
     var $t11: bool
     var $t12: vector<u64>
     var $t13: &0xc0ffee::m::Test2
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: bool
     var $t20: &vector<u64>
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2
     var $t24: u64
     var $t25: bool
     var $t26: u64
     var $t27: &u64
     var $t28: &vector<u64>
     var $t29: &0xc0ffee::m::Test2
     var $t30: u64
     var $t31: u64
     var $t32: &u64
     var $t33: &vector<u64>
     var $t34: &0xc0ffee::m::Test2
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &u64
     var $t39: &vector<u64>
     var $t40: &0xc0ffee::m::Test2
     var $t41: u64
     var $t42: &u64
     var $t43: &vector<u64>
     var $t44: &0xc0ffee::m::Test2
     var $t45: u64
     var $t46: u64
     # live vars:
  0: $t1 := ["1", "2", "3"]
     # live vars: $t1
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
     # live vars: $t0
  2: $t3 := ["1", "2", "3"]
     # live vars: $t0, $t3
  3: $t2 := pack 0xc0ffee::m::Test2($t3)
     # live vars: $t0, $t2
  4: $t5 := copy($t0)
     # live vars: $t0, $t2, $t5
  5: $t4 := ==($t5, $t2)
     # live vars: $t0, $t2, $t4
  6: if ($t4) goto 7 else goto 69
     # live vars: $t0, $t2
  7: label L0
     # live vars: $t0, $t2
  8: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
  9: $t9 := borrow_local($t2)
     # live vars: $t0, $t2, $t8, $t9
 10: $t7 := ==($t8, $t9)
     # live vars: $t0, $t2, $t7
 11: if ($t7) goto 12 else goto 66
     # live vars: $t0, $t2
 12: label L3
     # live vars: $t0, $t2
 13: $t13 := borrow_local($t0)
     # live vars: $t0, $t2, $t13
 14: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t13)
     # live vars: $t0, $t2, $t14
 15: $t12 := read_ref($t14)
     # live vars: $t0, $t2, $t12
 16: $t16 := borrow_local($t2)
     # live vars: $t0, $t2, $t12, $t16
 17: $t17 := borrow_field<0xc0ffee::m::Test2>.a($t16)
     # live vars: $t0, $t2, $t12, $t17
 18: $t15 := read_ref($t17)
     # live vars: $t0, $t2, $t12, $t15
 19: $t11 := ==($t12, $t15)
     # live vars: $t0, $t2, $t11
 20: if ($t11) goto 21 else goto 63
     # live vars: $t0, $t2
 21: label L6
     # live vars: $t0, $t2
 22: $t21 := borrow_local($t0)
     # live vars: $t0, $t2, $t21
 23: $t20 := borrow_field<0xc0ffee::m::Test2>.a($t21)
     # live vars: $t0, $t2, $t20
 24: $t23 := borrow_local($t2)
     # live vars: $t0, $t2, $t20, $t23
 25: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t23)
     # live vars: $t0, $t2, $t20, $t22
 26: $t19 := ==($t20, $t22)
     # live vars: $t0, $t2, $t19
 27: if ($t19) goto 28 else goto 60
     # live vars: $t0, $t2
 28: label L9
     # live vars: $t0, $t2
 29: $t29 := borrow_local($t0)
     # live vars: $t0, $t2, $t29
 30: $t28 := borrow_field<0xc0ffee::m::Test2>.a($t29)
     # live vars: $t0, $t2, $t28
 31: $t30 := 0
     # live vars: $t0, $t2, $t28, $t30
 32: $t27 := vector::borrow<u64>($t28, $t30)
     # live vars: $t0, $t2, $t27
 33: $t26 := read_ref($t27)
     # live vars: $t0, $t2, $t26
 34: $t34 := borrow_local($t2)
     # live vars: $t0, $t2, $t26, $t34
 35: $t33 := borrow_field<0xc0ffee::m::Test2>.a($t34)
     # live vars: $t0, $t2, $t26, $t33
 36: $t35 := 0
     # live vars: $t0, $t2, $t26, $t33, $t35
 37: $t32 := vector::borrow<u64>($t33, $t35)
     # live vars: $t0, $t2, $t26, $t32
 38: $t31 := read_ref($t32)
     # live vars: $t0, $t2, $t26, $t31
 39: $t25 := ==($t26, $t31)
     # live vars: $t0, $t2, $t25
 40: if ($t25) goto 41 else goto 57
     # live vars: $t0, $t2
 41: label L12
     # live vars: $t0, $t2
 42: $t40 := borrow_local($t0)
     # live vars: $t2, $t40
 43: $t39 := borrow_field<0xc0ffee::m::Test2>.a($t40)
     # live vars: $t2, $t39
 44: $t41 := 0
     # live vars: $t2, $t39, $t41
 45: $t38 := vector::borrow<u64>($t39, $t41)
     # live vars: $t2, $t38
 46: $t44 := borrow_local($t2)
     # live vars: $t38, $t44
 47: $t43 := borrow_field<0xc0ffee::m::Test2>.a($t44)
     # live vars: $t38, $t43
 48: $t45 := 0
     # live vars: $t38, $t43, $t45
 49: $t42 := vector::borrow<u64>($t43, $t45)
     # live vars: $t38, $t42
 50: $t37 := ==($t38, $t42)
     # live vars: $t37
 51: if ($t37) goto 52 else goto 54
     # live vars:
 52: label L15
     # live vars:
 53: return ()
     # live vars:
 54: label L16
     # live vars:
 55: $t46 := 0
     # live vars: $t46
 56: abort($t46)
     # live vars: $t0, $t2
 57: label L13
     # live vars:
 58: $t36 := 0
     # live vars: $t36
 59: abort($t36)
     # live vars: $t0, $t2
 60: label L10
     # live vars:
 61: $t24 := 0
     # live vars: $t24
 62: abort($t24)
     # live vars: $t0, $t2
 63: label L7
     # live vars:
 64: $t18 := 0
     # live vars: $t18
 65: abort($t18)
     # live vars: $t0, $t2
 66: label L4
     # live vars:
 67: $t10 := 0
     # live vars: $t10
 68: abort($t10)
     # live vars: $t0, $t2
 69: label L1
     # live vars:
 70: $t6 := 0
     # live vars: $t6
 71: abort($t6)
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1>
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64
     var $t12: u64
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64
     var $t16: bool
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: &0xc0ffee::m::Test3
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3
     var $t26: &vector<0xc0ffee::m::Test1>
     var $t27: u64
     var $t28: bool
     var $t29: &vector<0xc0ffee::m::Test1>
     var $t30: &0xc0ffee::m::Test3
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3
     var $t33: u64
     var $t34: bool
     var $t35: 0xc0ffee::m::Test1
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1>
     var $t38: &0xc0ffee::m::Test3
     var $t39: u64
     var $t40: 0xc0ffee::m::Test1
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: &0xc0ffee::m::Test3
     var $t44: u64
     var $t45: u64
     var $t46: bool
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: &0xc0ffee::m::Test3
     var $t50: u64
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: u64
     var $t55: u64
     # live vars:
  0: $t3 := 1
     # live vars: $t3
  1: $t4 := 2
     # live vars: $t3, $t4
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t2
  3: $t1 := vector($t2)
     # live vars: $t1
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
     # live vars: $t0
  5: $t8 := 1
     # live vars: $t0, $t8
  6: $t9 := 2
     # live vars: $t0, $t8, $t9
  7: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t0, $t7
  8: $t11 := 1
     # live vars: $t0, $t7, $t11
  9: $t12 := 2
     # live vars: $t0, $t7, $t11, $t12
 10: $t10 := pack 0xc0ffee::m::Test1($t11, $t12)
     # live vars: $t0, $t7, $t10
 11: $t6 := vector($t7, $t10)
     # live vars: $t0, $t6
 12: $t5 := pack 0xc0ffee::m::Test3($t6)
     # live vars: $t0, $t5
 13: $t14 := copy($t0)
     # live vars: $t0, $t5, $t14
 14: $t13 := !=($t14, $t5)
     # live vars: $t0, $t5, $t13
 15: if ($t13) goto 16 else goto 78
     # live vars: $t0, $t5
 16: label L0
     # live vars: $t0, $t5
 17: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 18: $t18 := borrow_local($t5)
     # live vars: $t0, $t5, $t17, $t18
 19: $t16 := !=($t17, $t18)
     # live vars: $t0, $t5, $t16
 20: if ($t16) goto 21 else goto 75
     # live vars: $t0, $t5
 21: label L3
     # live vars: $t0, $t5
 22: $t22 := borrow_local($t0)
     # live vars: $t0, $t5, $t22
 23: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t22)
     # live vars: $t0, $t5, $t23
 24: $t21 := read_ref($t23)
     # live vars: $t0, $t5, $t21
 25: $t25 := borrow_local($t5)
     # live vars: $t0, $t5, $t21, $t25
 26: $t26 := borrow_field<0xc0ffee::m::Test3>.a($t25)
     # live vars: $t0, $t5, $t21, $t26
 27: $t24 := read_ref($t26)
     # live vars: $t0, $t5, $t21, $t24
 28: $t20 := !=($t21, $t24)
     # live vars: $t0, $t5, $t20
 29: if ($t20) goto 30 else goto 72
     # live vars: $t0, $t5
 30: label L6
     # live vars: $t0, $t5
 31: $t30 := borrow_local($t0)
     # live vars: $t0, $t5, $t30
 32: $t29 := borrow_field<0xc0ffee::m::Test3>.a($t30)
     # live vars: $t0, $t5, $t29
 33: $t32 := borrow_local($t5)
     # live vars: $t0, $t5, $t29, $t32
 34: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t32)
     # live vars: $t0, $t5, $t29, $t31
 35: $t28 := !=($t29, $t31)
     # live vars: $t0, $t5, $t28
 36: if ($t28) goto 37 else goto 69
     # live vars: $t0, $t5
 37: label L9
     # live vars: $t0, $t5
 38: $t38 := borrow_local($t0)
     # live vars: $t0, $t5, $t38
 39: $t37 := borrow_field<0xc0ffee::m::Test3>.a($t38)
     # live vars: $t0, $t5, $t37
 40: $t39 := 0
     # live vars: $t0, $t5, $t37, $t39
 41: $t36 := vector::borrow<0xc0ffee::m::Test1>($t37, $t39)
     # live vars: $t0, $t5, $t36
 42: $t35 := read_ref($t36)
     # live vars: $t0, $t5, $t35
 43: $t43 := borrow_local($t5)
     # live vars: $t0, $t5, $t35, $t43
 44: $t42 := borrow_field<0xc0ffee::m::Test3>.a($t43)
     # live vars: $t0, $t5, $t35, $t42
 45: $t44 := 0
     # live vars: $t0, $t5, $t35, $t42, $t44
 46: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t44)
     # live vars: $t0, $t5, $t35, $t41
 47: $t40 := read_ref($t41)
     # live vars: $t0, $t5, $t35, $t40
 48: $t34 := ==($t35, $t40)
     # live vars: $t0, $t5, $t34
 49: if ($t34) goto 50 else goto 66
     # live vars: $t0, $t5
 50: label L12
     # live vars: $t0, $t5
 51: $t49 := borrow_local($t0)
     # live vars: $t5, $t49
 52: $t48 := borrow_field<0xc0ffee::m::Test3>.a($t49)
     # live vars: $t5, $t48
 53: $t50 := 0
     # live vars: $t5, $t48, $t50
 54: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t50)
     # live vars: $t5, $t47
 55: $t53 := borrow_local($t5)
     # live vars: $t47, $t53
 56: $t52 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t47, $t52
 57: $t54 := 0
     # live vars: $t47, $t52, $t54
 58: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t54)
     # live vars: $t47, $t51
 59: $t46 := ==($t47, $t51)
     # live vars: $t46
 60: if ($t46) goto 61 else goto 63
     # live vars:
 61: label L15
     # live vars:
 62: return ()
     # live vars:
 63: label L16
     # live vars:
 64: $t55 := 0
     # live vars: $t55
 65: abort($t55)
     # live vars: $t0, $t5
 66: label L13
     # live vars:
 67: $t45 := 0
     # live vars: $t45
 68: abort($t45)
     # live vars: $t0, $t5
 69: label L10
     # live vars:
 70: $t33 := 0
     # live vars: $t33
 71: abort($t33)
     # live vars: $t0, $t5
 72: label L7
     # live vars:
 73: $t27 := 0
     # live vars: $t27
 74: abort($t27)
     # live vars: $t0, $t5
 75: label L4
     # live vars:
 76: $t19 := 0
     # live vars: $t19
 77: abort($t19)
     # live vars: $t0, $t5
 78: label L1
     # live vars:
 79: $t15 := 0
     # live vars: $t15
 80: abort($t15)
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64
     var $t6: u64
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64
     var $t9: u64
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1
     var $t12: u64
     var $t13: u64
     var $t14: 0xc0ffee::m::Test1
     var $t15: u64
     var $t16: u64
     var $t17: 0xc0ffee::m::Test1
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64
     var $t23: bool
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64
     var $t27: bool
     var $t28: 0xc0ffee::m::Test1
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1>
     var $t31: u64
     var $t32: 0xc0ffee::m::Test1
     var $t33: &0xc0ffee::m::Test1
     var $t34: &vector<0xc0ffee::m::Test1>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: &0xc0ffee::m::Test1
     var $t39: &vector<0xc0ffee::m::Test1>
     var $t40: u64
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1>
     var $t43: u64
     var $t44: u64
     var $t45: bool
     var $t46: 0xc0ffee::m::Test1
     var $t47: &0xc0ffee::m::Test1
     var $t48: &vector<0xc0ffee::m::Test1>
     var $t49: u64
     var $t50: 0xc0ffee::m::Test1
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1>
     var $t53: u64
     var $t54: u64
     var $t55: bool
     var $t56: &0xc0ffee::m::Test1
     var $t57: &vector<0xc0ffee::m::Test1>
     var $t58: u64
     var $t59: &0xc0ffee::m::Test1
     var $t60: &vector<0xc0ffee::m::Test1>
     var $t61: u64
     var $t62: u64
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t3 := 2
     # live vars: $t2, $t3
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1
  3: $t5 := 1
     # live vars: $t1, $t5
  4: $t6 := 2
     # live vars: $t1, $t5, $t6
  5: $t4 := pack 0xc0ffee::m::Test1($t5, $t6)
     # live vars: $t1, $t4
  6: $t8 := 1
     # live vars: $t1, $t4, $t8
  7: $t9 := 2
     # live vars: $t1, $t4, $t8, $t9
  8: $t7 := pack 0xc0ffee::m::Test1($t8, $t9)
     # live vars: $t1, $t4, $t7
  9: $t0 := vector($t1, $t4, $t7)
     # live vars: $t0
 10: $t12 := 1
     # live vars: $t0, $t12
 11: $t13 := 2
     # live vars: $t0, $t12, $t13
 12: $t11 := pack 0xc0ffee::m::Test1($t12, $t13)
     # live vars: $t0, $t11
 13: $t15 := 1
     # live vars: $t0, $t11, $t15
 14: $t16 := 2
     # live vars: $t0, $t11, $t15, $t16
 15: $t14 := pack 0xc0ffee::m::Test1($t15, $t16)
     # live vars: $t0, $t11, $t14
 16: $t18 := 1
     # live vars: $t0, $t11, $t14, $t18
 17: $t19 := 2
     # live vars: $t0, $t11, $t14, $t18, $t19
 18: $t17 := pack 0xc0ffee::m::Test1($t18, $t19)
     # live vars: $t0, $t11, $t14, $t17
 19: $t10 := vector($t11, $t14, $t17)
     # live vars: $t0, $t10
 20: $t21 := copy($t0)
     # live vars: $t0, $t10, $t21
 21: $t20 := ==($t21, $t10)
     # live vars: $t0, $t10, $t20
 22: if ($t20) goto 23 else goto 85
     # live vars: $t0, $t10
 23: label L0
     # live vars: $t0, $t10
 24: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 25: $t25 := borrow_local($t10)
     # live vars: $t0, $t10, $t24, $t25
 26: $t23 := ==($t24, $t25)
     # live vars: $t0, $t10, $t23
 27: if ($t23) goto 28 else goto 82
     # live vars: $t0, $t10
 28: label L3
     # live vars: $t0, $t10
 29: $t30 := borrow_local($t0)
     # live vars: $t0, $t10, $t30
 30: $t31 := 0
     # live vars: $t0, $t10, $t30, $t31
 31: $t29 := vector::borrow<0xc0ffee::m::Test1>($t30, $t31)
     # live vars: $t0, $t10, $t29
 32: $t28 := read_ref($t29)
     # live vars: $t0, $t10, $t28
 33: $t34 := borrow_local($t10)
     # live vars: $t0, $t10, $t28, $t34
 34: $t35 := 0
     # live vars: $t0, $t10, $t28, $t34, $t35
 35: $t33 := vector::borrow<0xc0ffee::m::Test1>($t34, $t35)
     # live vars: $t0, $t10, $t28, $t33
 36: $t32 := read_ref($t33)
     # live vars: $t0, $t10, $t28, $t32
 37: $t27 := ==($t28, $t32)
     # live vars: $t0, $t10, $t27
 38: if ($t27) goto 39 else goto 79
     # live vars: $t0, $t10
 39: label L6
     # live vars: $t0, $t10
 40: $t39 := borrow_local($t0)
     # live vars: $t0, $t10, $t39
 41: $t40 := 0
     # live vars: $t0, $t10, $t39, $t40
 42: $t38 := vector::borrow<0xc0ffee::m::Test1>($t39, $t40)
     # live vars: $t0, $t10, $t38
 43: $t42 := borrow_local($t10)
     # live vars: $t0, $t10, $t38, $t42
 44: $t43 := 0
     # live vars: $t0, $t10, $t38, $t42, $t43
 45: $t41 := vector::borrow<0xc0ffee::m::Test1>($t42, $t43)
     # live vars: $t0, $t10, $t38, $t41
 46: $t37 := ==($t38, $t41)
     # live vars: $t0, $t10, $t37
 47: if ($t37) goto 48 else goto 76
     # live vars: $t0, $t10
 48: label L9
     # live vars: $t0, $t10
 49: $t48 := borrow_local($t0)
     # live vars: $t0, $t10, $t48
 50: $t49 := 1
     # live vars: $t0, $t10, $t48, $t49
 51: $t47 := vector::borrow<0xc0ffee::m::Test1>($t48, $t49)
     # live vars: $t0, $t10, $t47
 52: $t46 := read_ref($t47)
     # live vars: $t0, $t10, $t46
 53: $t52 := borrow_local($t10)
     # live vars: $t0, $t10, $t46, $t52
 54: $t53 := 1
     # live vars: $t0, $t10, $t46, $t52, $t53
 55: $t51 := vector::borrow<0xc0ffee::m::Test1>($t52, $t53)
     # live vars: $t0, $t10, $t46, $t51
 56: $t50 := read_ref($t51)
     # live vars: $t0, $t10, $t46, $t50
 57: $t45 := ==($t46, $t50)
     # live vars: $t0, $t10, $t45
 58: if ($t45) goto 59 else goto 73
     # live vars: $t0, $t10
 59: label L12
     # live vars: $t0, $t10
 60: $t57 := borrow_local($t0)
     # live vars: $t10, $t57
 61: $t58 := 1
     # live vars: $t10, $t57, $t58
 62: $t56 := vector::borrow<0xc0ffee::m::Test1>($t57, $t58)
     # live vars: $t10, $t56
 63: $t60 := borrow_local($t10)
     # live vars: $t56, $t60
 64: $t61 := 1
     # live vars: $t56, $t60, $t61
 65: $t59 := vector::borrow<0xc0ffee::m::Test1>($t60, $t61)
     # live vars: $t56, $t59
 66: $t55 := ==($t56, $t59)
     # live vars: $t55
 67: if ($t55) goto 68 else goto 70
     # live vars:
 68: label L15
     # live vars:
 69: return ()
     # live vars:
 70: label L16
     # live vars:
 71: $t62 := 0
     # live vars: $t62
 72: abort($t62)
     # live vars: $t0, $t10
 73: label L13
     # live vars:
 74: $t54 := 0
     # live vars: $t54
 75: abort($t54)
     # live vars: $t0, $t10
 76: label L10
     # live vars:
 77: $t44 := 0
     # live vars: $t44
 78: abort($t44)
     # live vars: $t0, $t10
 79: label L7
     # live vars:
 80: $t36 := 0
     # live vars: $t36
 81: abort($t36)
     # live vars: $t0, $t10
 82: label L4
     # live vars:
 83: $t26 := 0
     # live vars: $t26
 84: abort($t26)
     # live vars: $t0, $t10
 85: label L1
     # live vars:
 86: $t22 := 0
     # live vars: $t22
 87: abort($t22)
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64>
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2
     var $t7: vector<u64>
     var $t8: 0xc0ffee::m::Test2
     var $t9: vector<u64>
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64>
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64
     var $t15: bool
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64
     var $t19: bool
     var $t20: 0xc0ffee::m::Test2
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2>
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2
     var $t25: &0xc0ffee::m::Test2
     var $t26: &vector<0xc0ffee::m::Test2>
     var $t27: u64
     var $t28: u64
     var $t29: bool
     var $t30: &0xc0ffee::m::Test2
     var $t31: &vector<0xc0ffee::m::Test2>
     var $t32: u64
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2>
     var $t35: u64
     var $t36: u64
     var $t37: bool
     var $t38: 0xc0ffee::m::Test2
     var $t39: &0xc0ffee::m::Test2
     var $t40: &vector<0xc0ffee::m::Test2>
     var $t41: u64
     var $t42: 0xc0ffee::m::Test2
     var $t43: &0xc0ffee::m::Test2
     var $t44: &vector<0xc0ffee::m::Test2>
     var $t45: u64
     var $t46: u64
     var $t47: bool
     var $t48: &0xc0ffee::m::Test2
     var $t49: &vector<0xc0ffee::m::Test2>
     var $t50: u64
     var $t51: &0xc0ffee::m::Test2
     var $t52: &vector<0xc0ffee::m::Test2>
     var $t53: u64
     var $t54: u64
     # live vars:
  0: $t2 := ["1", "2", "3"]
     # live vars: $t2
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t1
  2: $t4 := ["1", "2", "3"]
     # live vars: $t1, $t4
  3: $t3 := pack 0xc0ffee::m::Test2($t4)
     # live vars: $t1, $t3
  4: $t0 := vector($t1, $t3)
     # live vars: $t0
  5: $t7 := ["1", "2", "3"]
     # live vars: $t0, $t7
  6: $t6 := pack 0xc0ffee::m::Test2($t7)
     # live vars: $t0, $t6
  7: $t9 := ["2", "2", "2"]
     # live vars: $t0, $t6, $t9
  8: $t8 := pack 0xc0ffee::m::Test2($t9)
     # live vars: $t0, $t6, $t8
  9: $t11 := ["1", "2", "3"]
     # live vars: $t0, $t6, $t8, $t11
 10: $t10 := pack 0xc0ffee::m::Test2($t11)
     # live vars: $t0, $t6, $t8, $t10
 11: $t5 := vector($t6, $t8, $t10)
     # live vars: $t0, $t5
 12: $t13 := copy($t0)
     # live vars: $t0, $t5, $t13
 13: $t12 := !=($t13, $t5)
     # live vars: $t0, $t5, $t12
 14: if ($t12) goto 15 else goto 77
     # live vars: $t0, $t5
 15: label L0
     # live vars: $t0, $t5
 16: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 17: $t17 := borrow_local($t5)
     # live vars: $t0, $t5, $t16, $t17
 18: $t15 := !=($t16, $t17)
     # live vars: $t0, $t5, $t15
 19: if ($t15) goto 20 else goto 74
     # live vars: $t0, $t5
 20: label L3
     # live vars: $t0, $t5
 21: $t22 := borrow_local($t0)
     # live vars: $t0, $t5, $t22
 22: $t23 := 0
     # live vars: $t0, $t5, $t22, $t23
 23: $t21 := vector::borrow<0xc0ffee::m::Test2>($t22, $t23)
     # live vars: $t0, $t5, $t21
 24: $t20 := read_ref($t21)
     # live vars: $t0, $t5, $t20
 25: $t26 := borrow_local($t5)
     # live vars: $t0, $t5, $t20, $t26
 26: $t27 := 0
     # live vars: $t0, $t5, $t20, $t26, $t27
 27: $t25 := vector::borrow<0xc0ffee::m::Test2>($t26, $t27)
     # live vars: $t0, $t5, $t20, $t25
 28: $t24 := read_ref($t25)
     # live vars: $t0, $t5, $t20, $t24
 29: $t19 := ==($t20, $t24)
     # live vars: $t0, $t5, $t19
 30: if ($t19) goto 31 else goto 71
     # live vars: $t0, $t5
 31: label L6
     # live vars: $t0, $t5
 32: $t31 := borrow_local($t0)
     # live vars: $t0, $t5, $t31
 33: $t32 := 0
     # live vars: $t0, $t5, $t31, $t32
 34: $t30 := vector::borrow<0xc0ffee::m::Test2>($t31, $t32)
     # live vars: $t0, $t5, $t30
 35: $t34 := borrow_local($t5)
     # live vars: $t0, $t5, $t30, $t34
 36: $t35 := 0
     # live vars: $t0, $t5, $t30, $t34, $t35
 37: $t33 := vector::borrow<0xc0ffee::m::Test2>($t34, $t35)
     # live vars: $t0, $t5, $t30, $t33
 38: $t29 := ==($t30, $t33)
     # live vars: $t0, $t5, $t29
 39: if ($t29) goto 40 else goto 68
     # live vars: $t0, $t5
 40: label L9
     # live vars: $t0, $t5
 41: $t40 := borrow_local($t0)
     # live vars: $t0, $t5, $t40
 42: $t41 := 1
     # live vars: $t0, $t5, $t40, $t41
 43: $t39 := vector::borrow<0xc0ffee::m::Test2>($t40, $t41)
     # live vars: $t0, $t5, $t39
 44: $t38 := read_ref($t39)
     # live vars: $t0, $t5, $t38
 45: $t44 := borrow_local($t5)
     # live vars: $t0, $t5, $t38, $t44
 46: $t45 := 1
     # live vars: $t0, $t5, $t38, $t44, $t45
 47: $t43 := vector::borrow<0xc0ffee::m::Test2>($t44, $t45)
     # live vars: $t0, $t5, $t38, $t43
 48: $t42 := read_ref($t43)
     # live vars: $t0, $t5, $t38, $t42
 49: $t37 := !=($t38, $t42)
     # live vars: $t0, $t5, $t37
 50: if ($t37) goto 51 else goto 65
     # live vars: $t0, $t5
 51: label L12
     # live vars: $t0, $t5
 52: $t49 := borrow_local($t0)
     # live vars: $t5, $t49
 53: $t50 := 1
     # live vars: $t5, $t49, $t50
 54: $t48 := vector::borrow<0xc0ffee::m::Test2>($t49, $t50)
     # live vars: $t5, $t48
 55: $t52 := borrow_local($t5)
     # live vars: $t48, $t52
 56: $t53 := 1
     # live vars: $t48, $t52, $t53
 57: $t51 := vector::borrow<0xc0ffee::m::Test2>($t52, $t53)
     # live vars: $t48, $t51
 58: $t47 := !=($t48, $t51)
     # live vars: $t47
 59: if ($t47) goto 60 else goto 62
     # live vars:
 60: label L15
     # live vars:
 61: return ()
     # live vars:
 62: label L16
     # live vars:
 63: $t54 := 0
     # live vars: $t54
 64: abort($t54)
     # live vars: $t0, $t5
 65: label L13
     # live vars:
 66: $t46 := 0
     # live vars: $t46
 67: abort($t46)
     # live vars: $t0, $t5
 68: label L10
     # live vars:
 69: $t36 := 0
     # live vars: $t36
 70: abort($t36)
     # live vars: $t0, $t5
 71: label L7
     # live vars:
 72: $t28 := 0
     # live vars: $t28
 73: abort($t28)
     # live vars: $t0, $t5
 74: label L4
     # live vars:
 75: $t18 := 0
     # live vars: $t18
 76: abort($t18)
     # live vars: $t0, $t5
 77: label L1
     # live vars:
 78: $t14 := 0
     # live vars: $t14
 79: abort($t14)
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64
     var $t8: u64
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3
     var $t11: vector<0xc0ffee::m::Test1>
     var $t12: 0xc0ffee::m::Test1
     var $t13: u64
     var $t14: u64
     var $t15: 0xc0ffee::m::Test1
     var $t16: u64
     var $t17: u64
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1>
     var $t20: 0xc0ffee::m::Test1
     var $t21: u64
     var $t22: u64
     var $t23: 0xc0ffee::m::Test1
     var $t24: u64
     var $t25: u64
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64
     var $t29: bool
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64
     var $t33: bool
     var $t34: 0xc0ffee::m::Test3
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3>
     var $t37: u64
     var $t38: 0xc0ffee::m::Test3
     var $t39: &0xc0ffee::m::Test3
     var $t40: &vector<0xc0ffee::m::Test3>
     var $t41: u64
     var $t42: u64
     var $t43: bool
     var $t44: &0xc0ffee::m::Test3
     var $t45: &vector<0xc0ffee::m::Test3>
     var $t46: u64
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3>
     var $t49: u64
     var $t50: u64
     var $t51: bool
     var $t52: vector<0xc0ffee::m::Test1>
     var $t53: &0xc0ffee::m::Test3
     var $t54: &vector<0xc0ffee::m::Test3>
     var $t55: u64
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3
     var $t59: &vector<0xc0ffee::m::Test3>
     var $t60: u64
     var $t61: &vector<0xc0ffee::m::Test1>
     var $t62: u64
     var $t63: bool
     var $t64: &vector<0xc0ffee::m::Test1>
     var $t65: &0xc0ffee::m::Test3
     var $t66: &vector<0xc0ffee::m::Test3>
     var $t67: u64
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3
     var $t70: &vector<0xc0ffee::m::Test3>
     var $t71: u64
     var $t72: u64
     # live vars:
  0: $t4 := 1
     # live vars: $t4
  1: $t5 := 2
     # live vars: $t4, $t5
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t3
  3: $t7 := 1
     # live vars: $t3, $t7
  4: $t8 := 2
     # live vars: $t3, $t7, $t8
  5: $t6 := pack 0xc0ffee::m::Test1($t7, $t8)
     # live vars: $t3, $t6
  6: $t2 := vector($t3, $t6)
     # live vars: $t2
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t1
  8: $t0 := vector($t1)
     # live vars: $t0
  9: $t13 := 1
     # live vars: $t0, $t13
 10: $t14 := 2
     # live vars: $t0, $t13, $t14
 11: $t12 := pack 0xc0ffee::m::Test1($t13, $t14)
     # live vars: $t0, $t12
 12: $t16 := 1
     # live vars: $t0, $t12, $t16
 13: $t17 := 2
     # live vars: $t0, $t12, $t16, $t17
 14: $t15 := pack 0xc0ffee::m::Test1($t16, $t17)
     # live vars: $t0, $t12, $t15
 15: $t11 := vector($t12, $t15)
     # live vars: $t0, $t11
 16: $t10 := pack 0xc0ffee::m::Test3($t11)
     # live vars: $t0, $t10
 17: $t21 := 1
     # live vars: $t0, $t10, $t21
 18: $t22 := 2
     # live vars: $t0, $t10, $t21, $t22
 19: $t20 := pack 0xc0ffee::m::Test1($t21, $t22)
     # live vars: $t0, $t10, $t20
 20: $t24 := 1
     # live vars: $t0, $t10, $t20, $t24
 21: $t25 := 2
     # live vars: $t0, $t10, $t20, $t24, $t25
 22: $t23 := pack 0xc0ffee::m::Test1($t24, $t25)
     # live vars: $t0, $t10, $t20, $t23
 23: $t19 := vector($t20, $t23)
     # live vars: $t0, $t10, $t19
 24: $t18 := pack 0xc0ffee::m::Test3($t19)
     # live vars: $t0, $t10, $t18
 25: $t9 := vector($t10, $t18)
     # live vars: $t0, $t9
 26: $t27 := copy($t0)
     # live vars: $t0, $t9, $t27
 27: $t26 := !=($t27, $t9)
     # live vars: $t0, $t9, $t26
 28: if ($t26) goto 29 else goto 95
     # live vars: $t0, $t9
 29: label L0
     # live vars: $t0, $t9
 30: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 31: $t31 := borrow_local($t9)
     # live vars: $t0, $t9, $t30, $t31
 32: $t29 := !=($t30, $t31)
     # live vars: $t0, $t9, $t29
 33: if ($t29) goto 34 else goto 92
     # live vars: $t0, $t9
 34: label L3
     # live vars: $t0, $t9
 35: $t36 := borrow_local($t0)
     # live vars: $t0, $t9, $t36
 36: $t37 := 0
     # live vars: $t0, $t9, $t36, $t37
 37: $t35 := vector::borrow<0xc0ffee::m::Test3>($t36, $t37)
     # live vars: $t0, $t9, $t35
 38: $t34 := read_ref($t35)
     # live vars: $t0, $t9, $t34
 39: $t40 := borrow_local($t9)
     # live vars: $t0, $t9, $t34, $t40
 40: $t41 := 0
     # live vars: $t0, $t9, $t34, $t40, $t41
 41: $t39 := vector::borrow<0xc0ffee::m::Test3>($t40, $t41)
     # live vars: $t0, $t9, $t34, $t39
 42: $t38 := read_ref($t39)
     # live vars: $t0, $t9, $t34, $t38
 43: $t33 := ==($t34, $t38)
     # live vars: $t0, $t9, $t33
 44: if ($t33) goto 45 else goto 89
     # live vars: $t0, $t9
 45: label L6
     # live vars: $t0, $t9
 46: $t45 := borrow_local($t0)
     # live vars: $t0, $t9, $t45
 47: $t46 := 0
     # live vars: $t0, $t9, $t45, $t46
 48: $t44 := vector::borrow<0xc0ffee::m::Test3>($t45, $t46)
     # live vars: $t0, $t9, $t44
 49: $t48 := borrow_local($t9)
     # live vars: $t0, $t9, $t44, $t48
 50: $t49 := 0
     # live vars: $t0, $t9, $t44, $t48, $t49
 51: $t47 := vector::borrow<0xc0ffee::m::Test3>($t48, $t49)
     # live vars: $t0, $t9, $t44, $t47
 52: $t43 := ==($t44, $t47)
     # live vars: $t0, $t9, $t43
 53: if ($t43) goto 54 else goto 86
     # live vars: $t0, $t9
 54: label L9
     # live vars: $t0, $t9
 55: $t54 := borrow_local($t0)
     # live vars: $t0, $t9, $t54
 56: $t55 := 0
     # live vars: $t0, $t9, $t54, $t55
 57: $t53 := vector::borrow<0xc0ffee::m::Test3>($t54, $t55)
     # live vars: $t0, $t9, $t53
 58: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t53)
     # live vars: $t0, $t9, $t56
 59: $t52 := read_ref($t56)
     # live vars: $t0, $t9, $t52
 60: $t59 := borrow_local($t9)
     # live vars: $t0, $t9, $t52, $t59
 61: $t60 := 0
     # live vars: $t0, $t9, $t52, $t59, $t60
 62: $t58 := vector::borrow<0xc0ffee::m::Test3>($t59, $t60)
     # live vars: $t0, $t9, $t52, $t58
 63: $t61 := borrow_field<0xc0ffee::m::Test3>.a($t58)
     # live vars: $t0, $t9, $t52, $t61
 64: $t57 := read_ref($t61)
     # live vars: $t0, $t9, $t52, $t57
 65: $t51 := ==($t52, $t57)
     # live vars: $t0, $t9, $t51
 66: if ($t51) goto 67 else goto 83
     # live vars: $t0, $t9
 67: label L12
     # live vars: $t0, $t9
 68: $t66 := borrow_local($t0)
     # live vars: $t9, $t66
 69: $t67 := 0
     # live vars: $t9, $t66, $t67
 70: $t65 := vector::borrow<0xc0ffee::m::Test3>($t66, $t67)
     # live vars: $t9, $t65
 71: $t64 := borrow_field<0xc0ffee::m::Test3>.a($t65)
     # live vars: $t9, $t64
 72: $t70 := borrow_local($t9)
     # live vars: $t64, $t70
 73: $t71 := 0
     # live vars: $t64, $t70, $t71
 74: $t69 := vector::borrow<0xc0ffee::m::Test3>($t70, $t71)
     # live vars: $t64, $t69
 75: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t69)
     # live vars: $t64, $t68
 76: $t63 := ==($t64, $t68)
     # live vars: $t63
 77: if ($t63) goto 78 else goto 80
     # live vars:
 78: label L15
     # live vars:
 79: return ()
     # live vars:
 80: label L16
     # live vars:
 81: $t72 := 0
     # live vars: $t72
 82: abort($t72)
     # live vars: $t0, $t9
 83: label L13
     # live vars:
 84: $t62 := 0
     # live vars: $t62
 85: abort($t62)
     # live vars: $t0, $t9
 86: label L10
     # live vars:
 87: $t50 := 0
     # live vars: $t50
 88: abort($t50)
     # live vars: $t0, $t9
 89: label L7
     # live vars:
 90: $t42 := 0
     # live vars: $t42
 91: abort($t42)
     # live vars: $t0, $t9
 92: label L4
     # live vars:
 93: $t32 := 0
     # live vars: $t32
 94: abort($t32)
     # live vars: $t0, $t9
 95: label L1
     # live vars:
 96: $t28 := 0
     # live vars: $t28
 97: abort($t28)
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64 [unused]
     var $t5: u64 [unused]
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64 [unused]
     var $t9: bool [unused]
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64 [unused]
     var $t13: bool [unused]
     var $t14: u64 [unused]
     var $t15: &0xc0ffee::m::Test1 [unused]
     var $t16: &u64
     var $t17: u64 [unused]
     var $t18: &0xc0ffee::m::Test1 [unused]
     var $t19: &u64 [unused]
     var $t20: u64 [unused]
     var $t21: bool [unused]
     var $t22: &u64 [unused]
     var $t23: &0xc0ffee::m::Test1 [unused]
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1 [unused]
     var $t26: u64 [unused]
     var $t27: bool [unused]
     var $t28: u64 [unused]
     var $t29: &0xc0ffee::m::Test1 [unused]
     var $t30: &u64 [unused]
     var $t31: u64 [unused]
     var $t32: &0xc0ffee::m::Test1 [unused]
     var $t33: &u64 [unused]
     var $t34: u64 [unused]
     var $t35: bool [unused]
     var $t36: &u64 [unused]
     var $t37: &0xc0ffee::m::Test1 [unused]
     var $t38: &u64 [unused]
     var $t39: &0xc0ffee::m::Test1 [unused]
     var $t40: u64 [unused]
  0: $t1 := 1
  1: $t2 := 2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
  3: $t1 := 1
  4: $t2 := 2
  5: $t3 := pack 0xc0ffee::m::Test1($t1, $t2)
  6: $t7 := copy($t0)
  7: $t6 := ==($t7, $t3)
  8: if ($t6) goto 9 else goto 63
  9: label L0
 10: $t10 := borrow_local($t0)
 11: $t11 := borrow_local($t3)
 12: $t6 := ==($t10, $t11)
 13: if ($t6) goto 14 else goto 60
 14: label L3
 15: $t10 := borrow_local($t0)
 16: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
 17: $t1 := read_ref($t16)
 18: $t10 := borrow_local($t3)
 19: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
 20: $t2 := read_ref($t16)
 21: $t6 := ==($t1, $t2)
 22: if ($t6) goto 23 else goto 57
 23: label L6
 24: $t10 := borrow_local($t0)
 25: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
 26: $t10 := borrow_local($t3)
 27: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t10)
 28: $t6 := ==($t16, $t24)
 29: if ($t6) goto 30 else goto 54
 30: label L9
 31: $t10 := borrow_local($t0)
 32: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
 33: $t1 := read_ref($t16)
 34: $t10 := borrow_local($t3)
 35: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
 36: $t2 := read_ref($t16)
 37: $t6 := ==($t1, $t2)
 38: if ($t6) goto 39 else goto 51
 39: label L12
 40: $t10 := borrow_local($t0)
 41: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
 42: $t10 := borrow_local($t3)
 43: $t24 := borrow_field<0xc0ffee::m::Test1>.b($t10)
 44: $t6 := ==($t16, $t24)
 45: if ($t6) goto 46 else goto 48
 46: label L15
 47: return ()
 48: label L16
 49: $t1 := 0
 50: abort($t1)
 51: label L13
 52: $t1 := 0
 53: abort($t1)
 54: label L10
 55: $t1 := 0
 56: abort($t1)
 57: label L7
 58: $t1 := 0
 59: abort($t1)
 60: label L4
 61: $t1 := 0
 62: abort($t1)
 63: label L1
 64: $t1 := 0
 65: abort($t1)
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64> [unused]
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64 [unused]
     var $t7: bool [unused]
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64 [unused]
     var $t11: bool [unused]
     var $t12: vector<u64> [unused]
     var $t13: &0xc0ffee::m::Test2 [unused]
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2 [unused]
     var $t17: &vector<u64> [unused]
     var $t18: u64 [unused]
     var $t19: bool [unused]
     var $t20: &vector<u64> [unused]
     var $t21: &0xc0ffee::m::Test2 [unused]
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2 [unused]
     var $t24: u64 [unused]
     var $t25: bool [unused]
     var $t26: u64 [unused]
     var $t27: &u64
     var $t28: &vector<u64> [unused]
     var $t29: &0xc0ffee::m::Test2 [unused]
     var $t30: u64
     var $t31: u64 [unused]
     var $t32: &u64 [unused]
     var $t33: &vector<u64> [unused]
     var $t34: &0xc0ffee::m::Test2 [unused]
     var $t35: u64
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: &u64 [unused]
     var $t39: &vector<u64> [unused]
     var $t40: &0xc0ffee::m::Test2 [unused]
     var $t41: u64 [unused]
     var $t42: &u64
     var $t43: &vector<u64> [unused]
     var $t44: &0xc0ffee::m::Test2 [unused]
     var $t45: u64 [unused]
     var $t46: u64 [unused]
  0: $t1 := ["1", "2", "3"]
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
  2: $t1 := ["1", "2", "3"]
  3: $t2 := pack 0xc0ffee::m::Test2($t1)
  4: $t5 := copy($t0)
  5: $t4 := ==($t5, $t2)
  6: if ($t4) goto 7 else goto 69
  7: label L0
  8: $t8 := borrow_local($t0)
  9: $t9 := borrow_local($t2)
 10: $t4 := ==($t8, $t9)
 11: if ($t4) goto 12 else goto 66
 12: label L3
 13: $t8 := borrow_local($t0)
 14: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 15: $t1 := read_ref($t14)
 16: $t8 := borrow_local($t2)
 17: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 18: $t15 := read_ref($t14)
 19: $t4 := ==($t1, $t15)
 20: if ($t4) goto 21 else goto 63
 21: label L6
 22: $t8 := borrow_local($t0)
 23: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 24: $t8 := borrow_local($t2)
 25: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 26: $t4 := ==($t14, $t22)
 27: if ($t4) goto 28 else goto 60
 28: label L9
 29: $t8 := borrow_local($t0)
 30: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 31: $t30 := 0
 32: $t27 := vector::borrow<u64>($t14, $t30)
 33: $t30 := read_ref($t27)
 34: $t8 := borrow_local($t2)
 35: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 36: $t35 := 0
 37: $t27 := vector::borrow<u64>($t14, $t35)
 38: $t35 := read_ref($t27)
 39: $t4 := ==($t30, $t35)
 40: if ($t4) goto 41 else goto 57
 41: label L12
 42: $t8 := borrow_local($t0)
 43: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 44: $t30 := 0
 45: $t27 := vector::borrow<u64>($t14, $t30)
 46: $t8 := borrow_local($t2)
 47: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 48: $t30 := 0
 49: $t42 := vector::borrow<u64>($t14, $t30)
 50: $t4 := ==($t27, $t42)
 51: if ($t4) goto 52 else goto 54
 52: label L15
 53: return ()
 54: label L16
 55: $t30 := 0
 56: abort($t30)
 57: label L13
 58: $t30 := 0
 59: abort($t30)
 60: label L10
 61: $t30 := 0
 62: abort($t30)
 63: label L7
 64: $t30 := 0
 65: abort($t30)
 66: label L4
 67: $t30 := 0
 68: abort($t30)
 69: label L1
 70: $t30 := 0
 71: abort($t30)
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1> [unused]
     var $t7: 0xc0ffee::m::Test1 [unused]
     var $t8: u64 [unused]
     var $t9: u64 [unused]
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64 [unused]
     var $t12: u64 [unused]
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64 [unused]
     var $t16: bool [unused]
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64 [unused]
     var $t20: bool [unused]
     var $t21: vector<0xc0ffee::m::Test1> [unused]
     var $t22: &0xc0ffee::m::Test3 [unused]
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3 [unused]
     var $t26: &vector<0xc0ffee::m::Test1> [unused]
     var $t27: u64 [unused]
     var $t28: bool [unused]
     var $t29: &vector<0xc0ffee::m::Test1> [unused]
     var $t30: &0xc0ffee::m::Test3 [unused]
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3 [unused]
     var $t33: u64 [unused]
     var $t34: bool [unused]
     var $t35: 0xc0ffee::m::Test1 [unused]
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1> [unused]
     var $t38: &0xc0ffee::m::Test3 [unused]
     var $t39: u64 [unused]
     var $t40: 0xc0ffee::m::Test1 [unused]
     var $t41: &0xc0ffee::m::Test1 [unused]
     var $t42: &vector<0xc0ffee::m::Test1> [unused]
     var $t43: &0xc0ffee::m::Test3 [unused]
     var $t44: u64 [unused]
     var $t45: u64 [unused]
     var $t46: bool [unused]
     var $t47: &0xc0ffee::m::Test1 [unused]
     var $t48: &vector<0xc0ffee::m::Test1> [unused]
     var $t49: &0xc0ffee::m::Test3 [unused]
     var $t50: u64 [unused]
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1> [unused]
     var $t53: &0xc0ffee::m::Test3 [unused]
     var $t54: u64 [unused]
     var $t55: u64 [unused]
  0: $t3 := 1
  1: $t4 := 2
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  3: $t1 := vector($t2)
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
  5: $t3 := 1
  6: $t4 := 2
  7: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  8: $t3 := 1
  9: $t4 := 2
 10: $t10 := pack 0xc0ffee::m::Test1($t3, $t4)
 11: $t1 := vector($t2, $t10)
 12: $t5 := pack 0xc0ffee::m::Test3($t1)
 13: $t14 := copy($t0)
 14: $t13 := !=($t14, $t5)
 15: if ($t13) goto 16 else goto 78
 16: label L0
 17: $t17 := borrow_local($t0)
 18: $t18 := borrow_local($t5)
 19: $t13 := !=($t17, $t18)
 20: if ($t13) goto 21 else goto 75
 21: label L3
 22: $t17 := borrow_local($t0)
 23: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 24: $t1 := read_ref($t23)
 25: $t17 := borrow_local($t5)
 26: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 27: $t24 := read_ref($t23)
 28: $t13 := !=($t1, $t24)
 29: if ($t13) goto 30 else goto 72
 30: label L6
 31: $t17 := borrow_local($t0)
 32: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 33: $t17 := borrow_local($t5)
 34: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 35: $t13 := !=($t23, $t31)
 36: if ($t13) goto 37 else goto 69
 37: label L9
 38: $t17 := borrow_local($t0)
 39: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 40: $t3 := 0
 41: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
 42: $t2 := read_ref($t36)
 43: $t17 := borrow_local($t5)
 44: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 45: $t3 := 0
 46: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
 47: $t10 := read_ref($t36)
 48: $t13 := ==($t2, $t10)
 49: if ($t13) goto 50 else goto 66
 50: label L12
 51: $t17 := borrow_local($t0)
 52: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 53: $t3 := 0
 54: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
 55: $t17 := borrow_local($t5)
 56: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 57: $t3 := 0
 58: $t51 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
 59: $t13 := ==($t36, $t51)
 60: if ($t13) goto 61 else goto 63
 61: label L15
 62: return ()
 63: label L16
 64: $t3 := 0
 65: abort($t3)
 66: label L13
 67: $t3 := 0
 68: abort($t3)
 69: label L10
 70: $t3 := 0
 71: abort($t3)
 72: label L7
 73: $t3 := 0
 74: abort($t3)
 75: label L4
 76: $t3 := 0
 77: abort($t3)
 78: label L1
 79: $t3 := 0
 80: abort($t3)
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64 [unused]
     var $t6: u64 [unused]
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64 [unused]
     var $t9: u64 [unused]
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1 [unused]
     var $t12: u64 [unused]
     var $t13: u64 [unused]
     var $t14: 0xc0ffee::m::Test1 [unused]
     var $t15: u64 [unused]
     var $t16: u64 [unused]
     var $t17: 0xc0ffee::m::Test1 [unused]
     var $t18: u64 [unused]
     var $t19: u64 [unused]
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64 [unused]
     var $t23: bool [unused]
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64 [unused]
     var $t27: bool [unused]
     var $t28: 0xc0ffee::m::Test1 [unused]
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1> [unused]
     var $t31: u64 [unused]
     var $t32: 0xc0ffee::m::Test1 [unused]
     var $t33: &0xc0ffee::m::Test1 [unused]
     var $t34: &vector<0xc0ffee::m::Test1> [unused]
     var $t35: u64 [unused]
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: &0xc0ffee::m::Test1 [unused]
     var $t39: &vector<0xc0ffee::m::Test1> [unused]
     var $t40: u64 [unused]
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1> [unused]
     var $t43: u64 [unused]
     var $t44: u64 [unused]
     var $t45: bool [unused]
     var $t46: 0xc0ffee::m::Test1 [unused]
     var $t47: &0xc0ffee::m::Test1 [unused]
     var $t48: &vector<0xc0ffee::m::Test1> [unused]
     var $t49: u64 [unused]
     var $t50: 0xc0ffee::m::Test1 [unused]
     var $t51: &0xc0ffee::m::Test1 [unused]
     var $t52: &vector<0xc0ffee::m::Test1> [unused]
     var $t53: u64 [unused]
     var $t54: u64 [unused]
     var $t55: bool [unused]
     var $t56: &0xc0ffee::m::Test1 [unused]
     var $t57: &vector<0xc0ffee::m::Test1> [unused]
     var $t58: u64 [unused]
     var $t59: &0xc0ffee::m::Test1 [unused]
     var $t60: &vector<0xc0ffee::m::Test1> [unused]
     var $t61: u64 [unused]
     var $t62: u64 [unused]
  0: $t2 := 1
  1: $t3 := 2
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
  3: $t2 := 1
  4: $t3 := 2
  5: $t4 := pack 0xc0ffee::m::Test1($t2, $t3)
  6: $t2 := 1
  7: $t3 := 2
  8: $t7 := pack 0xc0ffee::m::Test1($t2, $t3)
  9: $t0 := vector($t1, $t4, $t7)
 10: $t2 := 1
 11: $t3 := 2
 12: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
 13: $t2 := 1
 14: $t3 := 2
 15: $t4 := pack 0xc0ffee::m::Test1($t2, $t3)
 16: $t2 := 1
 17: $t3 := 2
 18: $t7 := pack 0xc0ffee::m::Test1($t2, $t3)
 19: $t10 := vector($t1, $t4, $t7)
 20: $t21 := copy($t0)
 21: $t20 := ==($t21, $t10)
 22: if ($t20) goto 23 else goto 85
 23: label L0
 24: $t24 := borrow_local($t0)
 25: $t25 := borrow_local($t10)
 26: $t20 := ==($t24, $t25)
 27: if ($t20) goto 28 else goto 82
 28: label L3
 29: $t24 := borrow_local($t0)
 30: $t2 := 0
 31: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 32: $t1 := read_ref($t29)
 33: $t24 := borrow_local($t10)
 34: $t2 := 0
 35: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 36: $t4 := read_ref($t29)
 37: $t20 := ==($t1, $t4)
 38: if ($t20) goto 39 else goto 79
 39: label L6
 40: $t24 := borrow_local($t0)
 41: $t2 := 0
 42: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 43: $t24 := borrow_local($t10)
 44: $t2 := 0
 45: $t41 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 46: $t20 := ==($t29, $t41)
 47: if ($t20) goto 48 else goto 76
 48: label L9
 49: $t24 := borrow_local($t0)
 50: $t2 := 1
 51: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 52: $t1 := read_ref($t29)
 53: $t24 := borrow_local($t10)
 54: $t2 := 1
 55: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 56: $t4 := read_ref($t29)
 57: $t20 := ==($t1, $t4)
 58: if ($t20) goto 59 else goto 73
 59: label L12
 60: $t24 := borrow_local($t0)
 61: $t2 := 1
 62: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 63: $t24 := borrow_local($t10)
 64: $t2 := 1
 65: $t41 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 66: $t20 := ==($t29, $t41)
 67: if ($t20) goto 68 else goto 70
 68: label L15
 69: return ()
 70: label L16
 71: $t2 := 0
 72: abort($t2)
 73: label L13
 74: $t2 := 0
 75: abort($t2)
 76: label L10
 77: $t2 := 0
 78: abort($t2)
 79: label L7
 80: $t2 := 0
 81: abort($t2)
 82: label L4
 83: $t2 := 0
 84: abort($t2)
 85: label L1
 86: $t2 := 0
 87: abort($t2)
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64> [unused]
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2 [unused]
     var $t7: vector<u64> [unused]
     var $t8: 0xc0ffee::m::Test2 [unused]
     var $t9: vector<u64> [unused]
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64> [unused]
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64 [unused]
     var $t15: bool [unused]
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64 [unused]
     var $t19: bool [unused]
     var $t20: 0xc0ffee::m::Test2 [unused]
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2> [unused]
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2 [unused]
     var $t25: &0xc0ffee::m::Test2 [unused]
     var $t26: &vector<0xc0ffee::m::Test2> [unused]
     var $t27: u64 [unused]
     var $t28: u64 [unused]
     var $t29: bool [unused]
     var $t30: &0xc0ffee::m::Test2 [unused]
     var $t31: &vector<0xc0ffee::m::Test2> [unused]
     var $t32: u64 [unused]
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2> [unused]
     var $t35: u64 [unused]
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: 0xc0ffee::m::Test2 [unused]
     var $t39: &0xc0ffee::m::Test2 [unused]
     var $t40: &vector<0xc0ffee::m::Test2> [unused]
     var $t41: u64 [unused]
     var $t42: 0xc0ffee::m::Test2 [unused]
     var $t43: &0xc0ffee::m::Test2 [unused]
     var $t44: &vector<0xc0ffee::m::Test2> [unused]
     var $t45: u64 [unused]
     var $t46: u64 [unused]
     var $t47: bool [unused]
     var $t48: &0xc0ffee::m::Test2 [unused]
     var $t49: &vector<0xc0ffee::m::Test2> [unused]
     var $t50: u64 [unused]
     var $t51: &0xc0ffee::m::Test2 [unused]
     var $t52: &vector<0xc0ffee::m::Test2> [unused]
     var $t53: u64 [unused]
     var $t54: u64 [unused]
  0: $t2 := ["1", "2", "3"]
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
  2: $t2 := ["1", "2", "3"]
  3: $t3 := pack 0xc0ffee::m::Test2($t2)
  4: $t0 := vector($t1, $t3)
  5: $t2 := ["1", "2", "3"]
  6: $t1 := pack 0xc0ffee::m::Test2($t2)
  7: $t2 := ["2", "2", "2"]
  8: $t3 := pack 0xc0ffee::m::Test2($t2)
  9: $t2 := ["1", "2", "3"]
 10: $t10 := pack 0xc0ffee::m::Test2($t2)
 11: $t5 := vector($t1, $t3, $t10)
 12: $t13 := copy($t0)
 13: $t12 := !=($t13, $t5)
 14: if ($t12) goto 15 else goto 77
 15: label L0
 16: $t16 := borrow_local($t0)
 17: $t17 := borrow_local($t5)
 18: $t12 := !=($t16, $t17)
 19: if ($t12) goto 20 else goto 74
 20: label L3
 21: $t16 := borrow_local($t0)
 22: $t23 := 0
 23: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 24: $t1 := read_ref($t21)
 25: $t16 := borrow_local($t5)
 26: $t23 := 0
 27: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 28: $t3 := read_ref($t21)
 29: $t12 := ==($t1, $t3)
 30: if ($t12) goto 31 else goto 71
 31: label L6
 32: $t16 := borrow_local($t0)
 33: $t23 := 0
 34: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 35: $t16 := borrow_local($t5)
 36: $t23 := 0
 37: $t33 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 38: $t12 := ==($t21, $t33)
 39: if ($t12) goto 40 else goto 68
 40: label L9
 41: $t16 := borrow_local($t0)
 42: $t23 := 1
 43: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 44: $t1 := read_ref($t21)
 45: $t16 := borrow_local($t5)
 46: $t23 := 1
 47: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 48: $t3 := read_ref($t21)
 49: $t12 := !=($t1, $t3)
 50: if ($t12) goto 51 else goto 65
 51: label L12
 52: $t16 := borrow_local($t0)
 53: $t23 := 1
 54: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 55: $t16 := borrow_local($t5)
 56: $t23 := 1
 57: $t33 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 58: $t12 := !=($t21, $t33)
 59: if ($t12) goto 60 else goto 62
 60: label L15
 61: return ()
 62: label L16
 63: $t23 := 0
 64: abort($t23)
 65: label L13
 66: $t23 := 0
 67: abort($t23)
 68: label L10
 69: $t23 := 0
 70: abort($t23)
 71: label L7
 72: $t23 := 0
 73: abort($t23)
 74: label L4
 75: $t23 := 0
 76: abort($t23)
 77: label L1
 78: $t23 := 0
 79: abort($t23)
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64 [unused]
     var $t8: u64 [unused]
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3 [unused]
     var $t11: vector<0xc0ffee::m::Test1> [unused]
     var $t12: 0xc0ffee::m::Test1 [unused]
     var $t13: u64 [unused]
     var $t14: u64 [unused]
     var $t15: 0xc0ffee::m::Test1 [unused]
     var $t16: u64 [unused]
     var $t17: u64 [unused]
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1> [unused]
     var $t20: 0xc0ffee::m::Test1 [unused]
     var $t21: u64 [unused]
     var $t22: u64 [unused]
     var $t23: 0xc0ffee::m::Test1 [unused]
     var $t24: u64 [unused]
     var $t25: u64 [unused]
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64 [unused]
     var $t29: bool [unused]
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64 [unused]
     var $t33: bool [unused]
     var $t34: 0xc0ffee::m::Test3 [unused]
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3> [unused]
     var $t37: u64 [unused]
     var $t38: 0xc0ffee::m::Test3 [unused]
     var $t39: &0xc0ffee::m::Test3 [unused]
     var $t40: &vector<0xc0ffee::m::Test3> [unused]
     var $t41: u64 [unused]
     var $t42: u64 [unused]
     var $t43: bool [unused]
     var $t44: &0xc0ffee::m::Test3 [unused]
     var $t45: &vector<0xc0ffee::m::Test3> [unused]
     var $t46: u64 [unused]
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3> [unused]
     var $t49: u64 [unused]
     var $t50: u64 [unused]
     var $t51: bool [unused]
     var $t52: vector<0xc0ffee::m::Test1> [unused]
     var $t53: &0xc0ffee::m::Test3 [unused]
     var $t54: &vector<0xc0ffee::m::Test3> [unused]
     var $t55: u64 [unused]
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3 [unused]
     var $t59: &vector<0xc0ffee::m::Test3> [unused]
     var $t60: u64 [unused]
     var $t61: &vector<0xc0ffee::m::Test1> [unused]
     var $t62: u64 [unused]
     var $t63: bool [unused]
     var $t64: &vector<0xc0ffee::m::Test1> [unused]
     var $t65: &0xc0ffee::m::Test3 [unused]
     var $t66: &vector<0xc0ffee::m::Test3> [unused]
     var $t67: u64 [unused]
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3 [unused]
     var $t70: &vector<0xc0ffee::m::Test3> [unused]
     var $t71: u64 [unused]
     var $t72: u64 [unused]
  0: $t4 := 1
  1: $t5 := 2
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  3: $t4 := 1
  4: $t5 := 2
  5: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
  6: $t2 := vector($t3, $t6)
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
  8: $t0 := vector($t1)
  9: $t4 := 1
 10: $t5 := 2
 11: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
 12: $t4 := 1
 13: $t5 := 2
 14: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
 15: $t2 := vector($t3, $t6)
 16: $t1 := pack 0xc0ffee::m::Test3($t2)
 17: $t4 := 1
 18: $t5 := 2
 19: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
 20: $t4 := 1
 21: $t5 := 2
 22: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
 23: $t2 := vector($t3, $t6)
 24: $t18 := pack 0xc0ffee::m::Test3($t2)
 25: $t9 := vector($t1, $t18)
 26: $t27 := copy($t0)
 27: $t26 := !=($t27, $t9)
 28: if ($t26) goto 29 else goto 95
 29: label L0
 30: $t30 := borrow_local($t0)
 31: $t31 := borrow_local($t9)
 32: $t26 := !=($t30, $t31)
 33: if ($t26) goto 34 else goto 92
 34: label L3
 35: $t30 := borrow_local($t0)
 36: $t4 := 0
 37: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 38: $t1 := read_ref($t35)
 39: $t30 := borrow_local($t9)
 40: $t4 := 0
 41: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 42: $t18 := read_ref($t35)
 43: $t26 := ==($t1, $t18)
 44: if ($t26) goto 45 else goto 89
 45: label L6
 46: $t30 := borrow_local($t0)
 47: $t4 := 0
 48: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 49: $t30 := borrow_local($t9)
 50: $t4 := 0
 51: $t47 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 52: $t26 := ==($t35, $t47)
 53: if ($t26) goto 54 else goto 86
 54: label L9
 55: $t30 := borrow_local($t0)
 56: $t4 := 0
 57: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 58: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
 59: $t2 := read_ref($t56)
 60: $t30 := borrow_local($t9)
 61: $t4 := 0
 62: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 63: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
 64: $t57 := read_ref($t56)
 65: $t26 := ==($t2, $t57)
 66: if ($t26) goto 67 else goto 83
 67: label L12
 68: $t30 := borrow_local($t0)
 69: $t4 := 0
 70: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 71: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
 72: $t30 := borrow_local($t9)
 73: $t4 := 0
 74: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 75: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t35)
 76: $t26 := ==($t56, $t68)
 77: if ($t26) goto 78 else goto 80
 78: label L15
 79: return ()
 80: label L16
 81: $t4 := 0
 82: abort($t4)
 83: label L13
 84: $t4 := 0
 85: abort($t4)
 86: label L10
 87: $t4 := 0
 88: abort($t4)
 89: label L7
 90: $t4 := 0
 91: abort($t4)
 92: label L4
 93: $t4 := 0
 94: abort($t4)
 95: label L1
 96: $t4 := 0
 97: abort($t4)
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64 [unused]
     var $t5: u64 [unused]
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64 [unused]
     var $t9: bool [unused]
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64 [unused]
     var $t13: bool [unused]
     var $t14: u64 [unused]
     var $t15: &0xc0ffee::m::Test1 [unused]
     var $t16: &u64
     var $t17: u64 [unused]
     var $t18: &0xc0ffee::m::Test1 [unused]
     var $t19: &u64 [unused]
     var $t20: u64 [unused]
     var $t21: bool [unused]
     var $t22: &u64 [unused]
     var $t23: &0xc0ffee::m::Test1 [unused]
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1 [unused]
     var $t26: u64 [unused]
     var $t27: bool [unused]
     var $t28: u64 [unused]
     var $t29: &0xc0ffee::m::Test1 [unused]
     var $t30: &u64 [unused]
     var $t31: u64 [unused]
     var $t32: &0xc0ffee::m::Test1 [unused]
     var $t33: &u64 [unused]
     var $t34: u64 [unused]
     var $t35: bool [unused]
     var $t36: &u64 [unused]
     var $t37: &0xc0ffee::m::Test1 [unused]
     var $t38: &u64 [unused]
     var $t39: &0xc0ffee::m::Test1 [unused]
     var $t40: u64 [unused]
     # live vars:
  0: $t1 := 1
     # live vars: $t1
  1: $t2 := 2
     # live vars: $t1, $t2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
     # live vars: $t0
  3: $t1 := 1
     # live vars: $t0, $t1
  4: $t2 := 2
     # live vars: $t0, $t1, $t2
  5: $t3 := pack 0xc0ffee::m::Test1($t1, $t2)
     # live vars: $t0, $t3
  6: $t7 := copy($t0)
     # live vars: $t0, $t3, $t7
  7: $t6 := ==($t7, $t3)
     # live vars: $t0, $t3, $t6
  8: if ($t6) goto 9 else goto 63
     # live vars: $t0, $t3
  9: label L0
     # live vars: $t0, $t3
 10: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 11: $t11 := borrow_local($t3)
     # live vars: $t0, $t3, $t10, $t11
 12: $t6 := ==($t10, $t11)
     # live vars: $t0, $t3, $t6
 13: if ($t6) goto 14 else goto 60
     # live vars: $t0, $t3
 14: label L3
     # live vars: $t0, $t3
 15: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 16: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
     # live vars: $t0, $t3, $t16
 17: $t1 := read_ref($t16)
     # live vars: $t0, $t1, $t3
 18: $t10 := borrow_local($t3)
     # live vars: $t0, $t1, $t3, $t10
 19: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
     # live vars: $t0, $t1, $t3, $t16
 20: $t2 := read_ref($t16)
     # live vars: $t0, $t1, $t2, $t3
 21: $t6 := ==($t1, $t2)
     # live vars: $t0, $t3, $t6
 22: if ($t6) goto 23 else goto 57
     # live vars: $t0, $t3
 23: label L6
     # live vars: $t0, $t3
 24: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 25: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
     # live vars: $t0, $t3, $t16
 26: $t10 := borrow_local($t3)
     # live vars: $t0, $t3, $t10, $t16
 27: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t10)
     # live vars: $t0, $t3, $t16, $t24
 28: $t6 := ==($t16, $t24)
     # live vars: $t0, $t3, $t6
 29: if ($t6) goto 30 else goto 54
     # live vars: $t0, $t3
 30: label L9
     # live vars: $t0, $t3
 31: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 32: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
     # live vars: $t0, $t3, $t16
 33: $t1 := read_ref($t16)
     # live vars: $t0, $t1, $t3
 34: $t10 := borrow_local($t3)
     # live vars: $t0, $t1, $t3, $t10
 35: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
     # live vars: $t0, $t1, $t3, $t16
 36: $t2 := read_ref($t16)
     # live vars: $t0, $t1, $t2, $t3
 37: $t6 := ==($t1, $t2)
     # live vars: $t0, $t3, $t6
 38: if ($t6) goto 39 else goto 51
     # live vars: $t0, $t3
 39: label L12
     # live vars: $t0, $t3
 40: $t10 := borrow_local($t0)
     # live vars: $t3, $t10
 41: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
     # live vars: $t3, $t16
 42: $t10 := borrow_local($t3)
     # live vars: $t10, $t16
 43: $t24 := borrow_field<0xc0ffee::m::Test1>.b($t10)
     # live vars: $t16, $t24
 44: $t6 := ==($t16, $t24)
     # live vars: $t6
 45: if ($t6) goto 46 else goto 48
     # live vars:
 46: label L15
     # live vars:
 47: return ()
     # live vars:
 48: label L16
     # live vars:
 49: $t1 := 0
     # live vars: $t1
 50: abort($t1)
     # live vars: $t0, $t3
 51: label L13
     # live vars:
 52: $t1 := 0
     # live vars: $t1
 53: abort($t1)
     # live vars: $t0, $t3
 54: label L10
     # live vars:
 55: $t1 := 0
     # live vars: $t1
 56: abort($t1)
     # live vars: $t0, $t3
 57: label L7
     # live vars:
 58: $t1 := 0
     # live vars: $t1
 59: abort($t1)
     # live vars: $t0, $t3
 60: label L4
     # live vars:
 61: $t1 := 0
     # live vars: $t1
 62: abort($t1)
     # live vars: $t0, $t3
 63: label L1
     # live vars:
 64: $t1 := 0
     # live vars: $t1
 65: abort($t1)
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64> [unused]
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64 [unused]
     var $t7: bool [unused]
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64 [unused]
     var $t11: bool [unused]
     var $t12: vector<u64> [unused]
     var $t13: &0xc0ffee::m::Test2 [unused]
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2 [unused]
     var $t17: &vector<u64> [unused]
     var $t18: u64 [unused]
     var $t19: bool [unused]
     var $t20: &vector<u64> [unused]
     var $t21: &0xc0ffee::m::Test2 [unused]
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2 [unused]
     var $t24: u64 [unused]
     var $t25: bool [unused]
     var $t26: u64 [unused]
     var $t27: &u64
     var $t28: &vector<u64> [unused]
     var $t29: &0xc0ffee::m::Test2 [unused]
     var $t30: u64
     var $t31: u64 [unused]
     var $t32: &u64 [unused]
     var $t33: &vector<u64> [unused]
     var $t34: &0xc0ffee::m::Test2 [unused]
     var $t35: u64
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: &u64 [unused]
     var $t39: &vector<u64> [unused]
     var $t40: &0xc0ffee::m::Test2 [unused]
     var $t41: u64 [unused]
     var $t42: &u64
     var $t43: &vector<u64> [unused]
     var $t44: &0xc0ffee::m::Test2 [unused]
     var $t45: u64 [unused]
     var $t46: u64 [unused]
     # live vars:
  0: $t1 := ["1", "2", "3"]
     # live vars: $t1
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
     # live vars: $t0
  2: $t1 := ["1", "2", "3"]
     # live vars: $t0, $t1
  3: $t2 := pack 0xc0ffee::m::Test2($t1)
     # live vars: $t0, $t2
  4: $t5 := copy($t0)
     # live vars: $t0, $t2, $t5
  5: $t4 := ==($t5, $t2)
     # live vars: $t0, $t2, $t4
  6: if ($t4) goto 7 else goto 69
     # live vars: $t0, $t2
  7: label L0
     # live vars: $t0, $t2
  8: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
  9: $t9 := borrow_local($t2)
     # live vars: $t0, $t2, $t8, $t9
 10: $t4 := ==($t8, $t9)
     # live vars: $t0, $t2, $t4
 11: if ($t4) goto 12 else goto 66
     # live vars: $t0, $t2
 12: label L3
     # live vars: $t0, $t2
 13: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
 14: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14
 15: $t1 := read_ref($t14)
     # live vars: $t0, $t1, $t2
 16: $t8 := borrow_local($t2)
     # live vars: $t0, $t1, $t2, $t8
 17: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t1, $t2, $t14
 18: $t15 := read_ref($t14)
     # live vars: $t0, $t1, $t2, $t15
 19: $t4 := ==($t1, $t15)
     # live vars: $t0, $t2, $t4
 20: if ($t4) goto 21 else goto 63
     # live vars: $t0, $t2
 21: label L6
     # live vars: $t0, $t2
 22: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
 23: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14
 24: $t8 := borrow_local($t2)
     # live vars: $t0, $t2, $t8, $t14
 25: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14, $t22
 26: $t4 := ==($t14, $t22)
     # live vars: $t0, $t2, $t4
 27: if ($t4) goto 28 else goto 60
     # live vars: $t0, $t2
 28: label L9
     # live vars: $t0, $t2
 29: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
 30: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14
 31: $t30 := 0
     # live vars: $t0, $t2, $t14, $t30
 32: $t27 := vector::borrow<u64>($t14, $t30)
     # live vars: $t0, $t2, $t27
 33: $t30 := read_ref($t27)
     # live vars: $t0, $t2, $t30
 34: $t8 := borrow_local($t2)
     # live vars: $t0, $t2, $t8, $t30
 35: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14, $t30
 36: $t35 := 0
     # live vars: $t0, $t2, $t14, $t30, $t35
 37: $t27 := vector::borrow<u64>($t14, $t35)
     # live vars: $t0, $t2, $t27, $t30
 38: $t35 := read_ref($t27)
     # live vars: $t0, $t2, $t30, $t35
 39: $t4 := ==($t30, $t35)
     # live vars: $t0, $t2, $t4
 40: if ($t4) goto 41 else goto 57
     # live vars: $t0, $t2
 41: label L12
     # live vars: $t0, $t2
 42: $t8 := borrow_local($t0)
     # live vars: $t2, $t8
 43: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t2, $t14
 44: $t30 := 0
     # live vars: $t2, $t14, $t30
 45: $t27 := vector::borrow<u64>($t14, $t30)
     # live vars: $t2, $t27
 46: $t8 := borrow_local($t2)
     # live vars: $t8, $t27
 47: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t14, $t27
 48: $t30 := 0
     # live vars: $t14, $t27, $t30
 49: $t42 := vector::borrow<u64>($t14, $t30)
     # live vars: $t27, $t42
 50: $t4 := ==($t27, $t42)
     # live vars: $t4
 51: if ($t4) goto 52 else goto 54
     # live vars:
 52: label L15
     # live vars:
 53: return ()
     # live vars:
 54: label L16
     # live vars:
 55: $t30 := 0
     # live vars: $t30
 56: abort($t30)
     # live vars: $t0, $t2
 57: label L13
     # live vars:
 58: $t30 := 0
     # live vars: $t30
 59: abort($t30)
     # live vars: $t0, $t2
 60: label L10
     # live vars:
 61: $t30 := 0
     # live vars: $t30
 62: abort($t30)
     # live vars: $t0, $t2
 63: label L7
     # live vars:
 64: $t30 := 0
     # live vars: $t30
 65: abort($t30)
     # live vars: $t0, $t2
 66: label L4
     # live vars:
 67: $t30 := 0
     # live vars: $t30
 68: abort($t30)
     # live vars: $t0, $t2
 69: label L1
     # live vars:
 70: $t30 := 0
     # live vars: $t30
 71: abort($t30)
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1> [unused]
     var $t7: 0xc0ffee::m::Test1 [unused]
     var $t8: u64 [unused]
     var $t9: u64 [unused]
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64 [unused]
     var $t12: u64 [unused]
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64 [unused]
     var $t16: bool [unused]
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64 [unused]
     var $t20: bool [unused]
     var $t21: vector<0xc0ffee::m::Test1> [unused]
     var $t22: &0xc0ffee::m::Test3 [unused]
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3 [unused]
     var $t26: &vector<0xc0ffee::m::Test1> [unused]
     var $t27: u64 [unused]
     var $t28: bool [unused]
     var $t29: &vector<0xc0ffee::m::Test1> [unused]
     var $t30: &0xc0ffee::m::Test3 [unused]
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3 [unused]
     var $t33: u64 [unused]
     var $t34: bool [unused]
     var $t35: 0xc0ffee::m::Test1 [unused]
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1> [unused]
     var $t38: &0xc0ffee::m::Test3 [unused]
     var $t39: u64 [unused]
     var $t40: 0xc0ffee::m::Test1 [unused]
     var $t41: &0xc0ffee::m::Test1 [unused]
     var $t42: &vector<0xc0ffee::m::Test1> [unused]
     var $t43: &0xc0ffee::m::Test3 [unused]
     var $t44: u64 [unused]
     var $t45: u64 [unused]
     var $t46: bool [unused]
     var $t47: &0xc0ffee::m::Test1 [unused]
     var $t48: &vector<0xc0ffee::m::Test1> [unused]
     var $t49: &0xc0ffee::m::Test3 [unused]
     var $t50: u64 [unused]
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1> [unused]
     var $t53: &0xc0ffee::m::Test3 [unused]
     var $t54: u64 [unused]
     var $t55: u64 [unused]
     # live vars:
  0: $t3 := 1
     # live vars: $t3
  1: $t4 := 2
     # live vars: $t3, $t4
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t2
  3: $t1 := vector($t2)
     # live vars: $t1
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
     # live vars: $t0
  5: $t3 := 1
     # live vars: $t0, $t3
  6: $t4 := 2
     # live vars: $t0, $t3, $t4
  7: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t0, $t2
  8: $t3 := 1
     # live vars: $t0, $t2, $t3
  9: $t4 := 2
     # live vars: $t0, $t2, $t3, $t4
 10: $t10 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t0, $t2, $t10
 11: $t1 := vector($t2, $t10)
     # live vars: $t0, $t1
 12: $t5 := pack 0xc0ffee::m::Test3($t1)
     # live vars: $t0, $t5
 13: $t14 := copy($t0)
     # live vars: $t0, $t5, $t14
 14: $t13 := !=($t14, $t5)
     # live vars: $t0, $t5, $t13
 15: if ($t13) goto 16 else goto 78
     # live vars: $t0, $t5
 16: label L0
     # live vars: $t0, $t5
 17: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 18: $t18 := borrow_local($t5)
     # live vars: $t0, $t5, $t17, $t18
 19: $t13 := !=($t17, $t18)
     # live vars: $t0, $t5, $t13
 20: if ($t13) goto 21 else goto 75
     # live vars: $t0, $t5
 21: label L3
     # live vars: $t0, $t5
 22: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 23: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t5, $t23
 24: $t1 := read_ref($t23)
     # live vars: $t0, $t1, $t5
 25: $t17 := borrow_local($t5)
     # live vars: $t0, $t1, $t5, $t17
 26: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t1, $t5, $t23
 27: $t24 := read_ref($t23)
     # live vars: $t0, $t1, $t5, $t24
 28: $t13 := !=($t1, $t24)
     # live vars: $t0, $t5, $t13
 29: if ($t13) goto 30 else goto 72
     # live vars: $t0, $t5
 30: label L6
     # live vars: $t0, $t5
 31: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 32: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t5, $t23
 33: $t17 := borrow_local($t5)
     # live vars: $t0, $t5, $t17, $t23
 34: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t5, $t23, $t31
 35: $t13 := !=($t23, $t31)
     # live vars: $t0, $t5, $t13
 36: if ($t13) goto 37 else goto 69
     # live vars: $t0, $t5
 37: label L9
     # live vars: $t0, $t5
 38: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 39: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t5, $t23
 40: $t3 := 0
     # live vars: $t0, $t3, $t5, $t23
 41: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
     # live vars: $t0, $t5, $t36
 42: $t2 := read_ref($t36)
     # live vars: $t0, $t2, $t5
 43: $t17 := borrow_local($t5)
     # live vars: $t0, $t2, $t5, $t17
 44: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t2, $t5, $t23
 45: $t3 := 0
     # live vars: $t0, $t2, $t3, $t5, $t23
 46: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
     # live vars: $t0, $t2, $t5, $t36
 47: $t10 := read_ref($t36)
     # live vars: $t0, $t2, $t5, $t10
 48: $t13 := ==($t2, $t10)
     # live vars: $t0, $t5, $t13
 49: if ($t13) goto 50 else goto 66
     # live vars: $t0, $t5
 50: label L12
     # live vars: $t0, $t5
 51: $t17 := borrow_local($t0)
     # live vars: $t5, $t17
 52: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t5, $t23
 53: $t3 := 0
     # live vars: $t3, $t5, $t23
 54: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
     # live vars: $t5, $t36
 55: $t17 := borrow_local($t5)
     # live vars: $t17, $t36
 56: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t23, $t36
 57: $t3 := 0
     # live vars: $t3, $t23, $t36
 58: $t51 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
     # live vars: $t36, $t51
 59: $t13 := ==($t36, $t51)
     # live vars: $t13
 60: if ($t13) goto 61 else goto 63
     # live vars:
 61: label L15
     # live vars:
 62: return ()
     # live vars:
 63: label L16
     # live vars:
 64: $t3 := 0
     # live vars: $t3
 65: abort($t3)
     # live vars: $t0, $t5
 66: label L13
     # live vars:
 67: $t3 := 0
     # live vars: $t3
 68: abort($t3)
     # live vars: $t0, $t5
 69: label L10
     # live vars:
 70: $t3 := 0
     # live vars: $t3
 71: abort($t3)
     # live vars: $t0, $t5
 72: label L7
     # live vars:
 73: $t3 := 0
     # live vars: $t3
 74: abort($t3)
     # live vars: $t0, $t5
 75: label L4
     # live vars:
 76: $t3 := 0
     # live vars: $t3
 77: abort($t3)
     # live vars: $t0, $t5
 78: label L1
     # live vars:
 79: $t3 := 0
     # live vars: $t3
 80: abort($t3)
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64 [unused]
     var $t6: u64 [unused]
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64 [unused]
     var $t9: u64 [unused]
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1 [unused]
     var $t12: u64 [unused]
     var $t13: u64 [unused]
     var $t14: 0xc0ffee::m::Test1 [unused]
     var $t15: u64 [unused]
     var $t16: u64 [unused]
     var $t17: 0xc0ffee::m::Test1 [unused]
     var $t18: u64 [unused]
     var $t19: u64 [unused]
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64 [unused]
     var $t23: bool [unused]
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64 [unused]
     var $t27: bool [unused]
     var $t28: 0xc0ffee::m::Test1 [unused]
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1> [unused]
     var $t31: u64 [unused]
     var $t32: 0xc0ffee::m::Test1 [unused]
     var $t33: &0xc0ffee::m::Test1 [unused]
     var $t34: &vector<0xc0ffee::m::Test1> [unused]
     var $t35: u64 [unused]
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: &0xc0ffee::m::Test1 [unused]
     var $t39: &vector<0xc0ffee::m::Test1> [unused]
     var $t40: u64 [unused]
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1> [unused]
     var $t43: u64 [unused]
     var $t44: u64 [unused]
     var $t45: bool [unused]
     var $t46: 0xc0ffee::m::Test1 [unused]
     var $t47: &0xc0ffee::m::Test1 [unused]
     var $t48: &vector<0xc0ffee::m::Test1> [unused]
     var $t49: u64 [unused]
     var $t50: 0xc0ffee::m::Test1 [unused]
     var $t51: &0xc0ffee::m::Test1 [unused]
     var $t52: &vector<0xc0ffee::m::Test1> [unused]
     var $t53: u64 [unused]
     var $t54: u64 [unused]
     var $t55: bool [unused]
     var $t56: &0xc0ffee::m::Test1 [unused]
     var $t57: &vector<0xc0ffee::m::Test1> [unused]
     var $t58: u64 [unused]
     var $t59: &0xc0ffee::m::Test1 [unused]
     var $t60: &vector<0xc0ffee::m::Test1> [unused]
     var $t61: u64 [unused]
     var $t62: u64 [unused]
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t3 := 2
     # live vars: $t2, $t3
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1
  3: $t2 := 1
     # live vars: $t1, $t2
  4: $t3 := 2
     # live vars: $t1, $t2, $t3
  5: $t4 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1, $t4
  6: $t2 := 1
     # live vars: $t1, $t2, $t4
  7: $t3 := 2
     # live vars: $t1, $t2, $t3, $t4
  8: $t7 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1, $t4, $t7
  9: $t0 := vector($t1, $t4, $t7)
     # live vars: $t0
 10: $t2 := 1
     # live vars: $t0, $t2
 11: $t3 := 2
     # live vars: $t0, $t2, $t3
 12: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t0, $t1
 13: $t2 := 1
     # live vars: $t0, $t1, $t2
 14: $t3 := 2
     # live vars: $t0, $t1, $t2, $t3
 15: $t4 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t0, $t1, $t4
 16: $t2 := 1
     # live vars: $t0, $t1, $t2, $t4
 17: $t3 := 2
     # live vars: $t0, $t1, $t2, $t3, $t4
 18: $t7 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t0, $t1, $t4, $t7
 19: $t10 := vector($t1, $t4, $t7)
     # live vars: $t0, $t10
 20: $t21 := copy($t0)
     # live vars: $t0, $t10, $t21
 21: $t20 := ==($t21, $t10)
     # live vars: $t0, $t10, $t20
 22: if ($t20) goto 23 else goto 85
     # live vars: $t0, $t10
 23: label L0
     # live vars: $t0, $t10
 24: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 25: $t25 := borrow_local($t10)
     # live vars: $t0, $t10, $t24, $t25
 26: $t20 := ==($t24, $t25)
     # live vars: $t0, $t10, $t20
 27: if ($t20) goto 28 else goto 82
     # live vars: $t0, $t10
 28: label L3
     # live vars: $t0, $t10
 29: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 30: $t2 := 0
     # live vars: $t0, $t2, $t10, $t24
 31: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t10, $t29
 32: $t1 := read_ref($t29)
     # live vars: $t0, $t1, $t10
 33: $t24 := borrow_local($t10)
     # live vars: $t0, $t1, $t10, $t24
 34: $t2 := 0
     # live vars: $t0, $t1, $t2, $t10, $t24
 35: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t1, $t10, $t29
 36: $t4 := read_ref($t29)
     # live vars: $t0, $t1, $t4, $t10
 37: $t20 := ==($t1, $t4)
     # live vars: $t0, $t10, $t20
 38: if ($t20) goto 39 else goto 79
     # live vars: $t0, $t10
 39: label L6
     # live vars: $t0, $t10
 40: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 41: $t2 := 0
     # live vars: $t0, $t2, $t10, $t24
 42: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t10, $t29
 43: $t24 := borrow_local($t10)
     # live vars: $t0, $t10, $t24, $t29
 44: $t2 := 0
     # live vars: $t0, $t2, $t10, $t24, $t29
 45: $t41 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t10, $t29, $t41
 46: $t20 := ==($t29, $t41)
     # live vars: $t0, $t10, $t20
 47: if ($t20) goto 48 else goto 76
     # live vars: $t0, $t10
 48: label L9
     # live vars: $t0, $t10
 49: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 50: $t2 := 1
     # live vars: $t0, $t2, $t10, $t24
 51: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t10, $t29
 52: $t1 := read_ref($t29)
     # live vars: $t0, $t1, $t10
 53: $t24 := borrow_local($t10)
     # live vars: $t0, $t1, $t10, $t24
 54: $t2 := 1
     # live vars: $t0, $t1, $t2, $t10, $t24
 55: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t1, $t10, $t29
 56: $t4 := read_ref($t29)
     # live vars: $t0, $t1, $t4, $t10
 57: $t20 := ==($t1, $t4)
     # live vars: $t0, $t10, $t20
 58: if ($t20) goto 59 else goto 73
     # live vars: $t0, $t10
 59: label L12
     # live vars: $t0, $t10
 60: $t24 := borrow_local($t0)
     # live vars: $t10, $t24
 61: $t2 := 1
     # live vars: $t2, $t10, $t24
 62: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t10, $t29
 63: $t24 := borrow_local($t10)
     # live vars: $t24, $t29
 64: $t2 := 1
     # live vars: $t2, $t24, $t29
 65: $t41 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t29, $t41
 66: $t20 := ==($t29, $t41)
     # live vars: $t20
 67: if ($t20) goto 68 else goto 70
     # live vars:
 68: label L15
     # live vars:
 69: return ()
     # live vars:
 70: label L16
     # live vars:
 71: $t2 := 0
     # live vars: $t2
 72: abort($t2)
     # live vars: $t0, $t10
 73: label L13
     # live vars:
 74: $t2 := 0
     # live vars: $t2
 75: abort($t2)
     # live vars: $t0, $t10
 76: label L10
     # live vars:
 77: $t2 := 0
     # live vars: $t2
 78: abort($t2)
     # live vars: $t0, $t10
 79: label L7
     # live vars:
 80: $t2 := 0
     # live vars: $t2
 81: abort($t2)
     # live vars: $t0, $t10
 82: label L4
     # live vars:
 83: $t2 := 0
     # live vars: $t2
 84: abort($t2)
     # live vars: $t0, $t10
 85: label L1
     # live vars:
 86: $t2 := 0
     # live vars: $t2
 87: abort($t2)
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64> [unused]
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2 [unused]
     var $t7: vector<u64> [unused]
     var $t8: 0xc0ffee::m::Test2 [unused]
     var $t9: vector<u64> [unused]
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64> [unused]
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64 [unused]
     var $t15: bool [unused]
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64 [unused]
     var $t19: bool [unused]
     var $t20: 0xc0ffee::m::Test2 [unused]
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2> [unused]
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2 [unused]
     var $t25: &0xc0ffee::m::Test2 [unused]
     var $t26: &vector<0xc0ffee::m::Test2> [unused]
     var $t27: u64 [unused]
     var $t28: u64 [unused]
     var $t29: bool [unused]
     var $t30: &0xc0ffee::m::Test2 [unused]
     var $t31: &vector<0xc0ffee::m::Test2> [unused]
     var $t32: u64 [unused]
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2> [unused]
     var $t35: u64 [unused]
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: 0xc0ffee::m::Test2 [unused]
     var $t39: &0xc0ffee::m::Test2 [unused]
     var $t40: &vector<0xc0ffee::m::Test2> [unused]
     var $t41: u64 [unused]
     var $t42: 0xc0ffee::m::Test2 [unused]
     var $t43: &0xc0ffee::m::Test2 [unused]
     var $t44: &vector<0xc0ffee::m::Test2> [unused]
     var $t45: u64 [unused]
     var $t46: u64 [unused]
     var $t47: bool [unused]
     var $t48: &0xc0ffee::m::Test2 [unused]
     var $t49: &vector<0xc0ffee::m::Test2> [unused]
     var $t50: u64 [unused]
     var $t51: &0xc0ffee::m::Test2 [unused]
     var $t52: &vector<0xc0ffee::m::Test2> [unused]
     var $t53: u64 [unused]
     var $t54: u64 [unused]
     # live vars:
  0: $t2 := ["1", "2", "3"]
     # live vars: $t2
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t1
  2: $t2 := ["1", "2", "3"]
     # live vars: $t1, $t2
  3: $t3 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t1, $t3
  4: $t0 := vector($t1, $t3)
     # live vars: $t0
  5: $t2 := ["1", "2", "3"]
     # live vars: $t0, $t2
  6: $t1 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t0, $t1
  7: $t2 := ["2", "2", "2"]
     # live vars: $t0, $t1, $t2
  8: $t3 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t0, $t1, $t3
  9: $t2 := ["1", "2", "3"]
     # live vars: $t0, $t1, $t2, $t3
 10: $t10 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t0, $t1, $t3, $t10
 11: $t5 := vector($t1, $t3, $t10)
     # live vars: $t0, $t5
 12: $t13 := copy($t0)
     # live vars: $t0, $t5, $t13
 13: $t12 := !=($t13, $t5)
     # live vars: $t0, $t5, $t12
 14: if ($t12) goto 15 else goto 77
     # live vars: $t0, $t5
 15: label L0
     # live vars: $t0, $t5
 16: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 17: $t17 := borrow_local($t5)
     # live vars: $t0, $t5, $t16, $t17
 18: $t12 := !=($t16, $t17)
     # live vars: $t0, $t5, $t12
 19: if ($t12) goto 20 else goto 74
     # live vars: $t0, $t5
 20: label L3
     # live vars: $t0, $t5
 21: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 22: $t23 := 0
     # live vars: $t0, $t5, $t16, $t23
 23: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t5, $t21
 24: $t1 := read_ref($t21)
     # live vars: $t0, $t1, $t5
 25: $t16 := borrow_local($t5)
     # live vars: $t0, $t1, $t5, $t16
 26: $t23 := 0
     # live vars: $t0, $t1, $t5, $t16, $t23
 27: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t1, $t5, $t21
 28: $t3 := read_ref($t21)
     # live vars: $t0, $t1, $t3, $t5
 29: $t12 := ==($t1, $t3)
     # live vars: $t0, $t5, $t12
 30: if ($t12) goto 31 else goto 71
     # live vars: $t0, $t5
 31: label L6
     # live vars: $t0, $t5
 32: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 33: $t23 := 0
     # live vars: $t0, $t5, $t16, $t23
 34: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t5, $t21
 35: $t16 := borrow_local($t5)
     # live vars: $t0, $t5, $t16, $t21
 36: $t23 := 0
     # live vars: $t0, $t5, $t16, $t21, $t23
 37: $t33 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t5, $t21, $t33
 38: $t12 := ==($t21, $t33)
     # live vars: $t0, $t5, $t12
 39: if ($t12) goto 40 else goto 68
     # live vars: $t0, $t5
 40: label L9
     # live vars: $t0, $t5
 41: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 42: $t23 := 1
     # live vars: $t0, $t5, $t16, $t23
 43: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t5, $t21
 44: $t1 := read_ref($t21)
     # live vars: $t0, $t1, $t5
 45: $t16 := borrow_local($t5)
     # live vars: $t0, $t1, $t5, $t16
 46: $t23 := 1
     # live vars: $t0, $t1, $t5, $t16, $t23
 47: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t1, $t5, $t21
 48: $t3 := read_ref($t21)
     # live vars: $t0, $t1, $t3, $t5
 49: $t12 := !=($t1, $t3)
     # live vars: $t0, $t5, $t12
 50: if ($t12) goto 51 else goto 65
     # live vars: $t0, $t5
 51: label L12
     # live vars: $t0, $t5
 52: $t16 := borrow_local($t0)
     # live vars: $t5, $t16
 53: $t23 := 1
     # live vars: $t5, $t16, $t23
 54: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t5, $t21
 55: $t16 := borrow_local($t5)
     # live vars: $t16, $t21
 56: $t23 := 1
     # live vars: $t16, $t21, $t23
 57: $t33 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t21, $t33
 58: $t12 := !=($t21, $t33)
     # live vars: $t12
 59: if ($t12) goto 60 else goto 62
     # live vars:
 60: label L15
     # live vars:
 61: return ()
     # live vars:
 62: label L16
     # live vars:
 63: $t23 := 0
     # live vars: $t23
 64: abort($t23)
     # live vars: $t0, $t5
 65: label L13
     # live vars:
 66: $t23 := 0
     # live vars: $t23
 67: abort($t23)
     # live vars: $t0, $t5
 68: label L10
     # live vars:
 69: $t23 := 0
     # live vars: $t23
 70: abort($t23)
     # live vars: $t0, $t5
 71: label L7
     # live vars:
 72: $t23 := 0
     # live vars: $t23
 73: abort($t23)
     # live vars: $t0, $t5
 74: label L4
     # live vars:
 75: $t23 := 0
     # live vars: $t23
 76: abort($t23)
     # live vars: $t0, $t5
 77: label L1
     # live vars:
 78: $t23 := 0
     # live vars: $t23
 79: abort($t23)
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64 [unused]
     var $t8: u64 [unused]
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3 [unused]
     var $t11: vector<0xc0ffee::m::Test1> [unused]
     var $t12: 0xc0ffee::m::Test1 [unused]
     var $t13: u64 [unused]
     var $t14: u64 [unused]
     var $t15: 0xc0ffee::m::Test1 [unused]
     var $t16: u64 [unused]
     var $t17: u64 [unused]
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1> [unused]
     var $t20: 0xc0ffee::m::Test1 [unused]
     var $t21: u64 [unused]
     var $t22: u64 [unused]
     var $t23: 0xc0ffee::m::Test1 [unused]
     var $t24: u64 [unused]
     var $t25: u64 [unused]
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64 [unused]
     var $t29: bool [unused]
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64 [unused]
     var $t33: bool [unused]
     var $t34: 0xc0ffee::m::Test3 [unused]
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3> [unused]
     var $t37: u64 [unused]
     var $t38: 0xc0ffee::m::Test3 [unused]
     var $t39: &0xc0ffee::m::Test3 [unused]
     var $t40: &vector<0xc0ffee::m::Test3> [unused]
     var $t41: u64 [unused]
     var $t42: u64 [unused]
     var $t43: bool [unused]
     var $t44: &0xc0ffee::m::Test3 [unused]
     var $t45: &vector<0xc0ffee::m::Test3> [unused]
     var $t46: u64 [unused]
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3> [unused]
     var $t49: u64 [unused]
     var $t50: u64 [unused]
     var $t51: bool [unused]
     var $t52: vector<0xc0ffee::m::Test1> [unused]
     var $t53: &0xc0ffee::m::Test3 [unused]
     var $t54: &vector<0xc0ffee::m::Test3> [unused]
     var $t55: u64 [unused]
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3 [unused]
     var $t59: &vector<0xc0ffee::m::Test3> [unused]
     var $t60: u64 [unused]
     var $t61: &vector<0xc0ffee::m::Test1> [unused]
     var $t62: u64 [unused]
     var $t63: bool [unused]
     var $t64: &vector<0xc0ffee::m::Test1> [unused]
     var $t65: &0xc0ffee::m::Test3 [unused]
     var $t66: &vector<0xc0ffee::m::Test3> [unused]
     var $t67: u64 [unused]
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3 [unused]
     var $t70: &vector<0xc0ffee::m::Test3> [unused]
     var $t71: u64 [unused]
     var $t72: u64 [unused]
     # live vars:
  0: $t4 := 1
     # live vars: $t4
  1: $t5 := 2
     # live vars: $t4, $t5
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t3
  3: $t4 := 1
     # live vars: $t3, $t4
  4: $t5 := 2
     # live vars: $t3, $t4, $t5
  5: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t3, $t6
  6: $t2 := vector($t3, $t6)
     # live vars: $t2
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t1
  8: $t0 := vector($t1)
     # live vars: $t0
  9: $t4 := 1
     # live vars: $t0, $t4
 10: $t5 := 2
     # live vars: $t0, $t4, $t5
 11: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t3
 12: $t4 := 1
     # live vars: $t0, $t3, $t4
 13: $t5 := 2
     # live vars: $t0, $t3, $t4, $t5
 14: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t3, $t6
 15: $t2 := vector($t3, $t6)
     # live vars: $t0, $t2
 16: $t1 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t0, $t1
 17: $t4 := 1
     # live vars: $t0, $t1, $t4
 18: $t5 := 2
     # live vars: $t0, $t1, $t4, $t5
 19: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t1, $t3
 20: $t4 := 1
     # live vars: $t0, $t1, $t3, $t4
 21: $t5 := 2
     # live vars: $t0, $t1, $t3, $t4, $t5
 22: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t1, $t3, $t6
 23: $t2 := vector($t3, $t6)
     # live vars: $t0, $t1, $t2
 24: $t18 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t0, $t1, $t18
 25: $t9 := vector($t1, $t18)
     # live vars: $t0, $t9
 26: $t27 := copy($t0)
     # live vars: $t0, $t9, $t27
 27: $t26 := !=($t27, $t9)
     # live vars: $t0, $t9, $t26
 28: if ($t26) goto 29 else goto 95
     # live vars: $t0, $t9
 29: label L0
     # live vars: $t0, $t9
 30: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 31: $t31 := borrow_local($t9)
     # live vars: $t0, $t9, $t30, $t31
 32: $t26 := !=($t30, $t31)
     # live vars: $t0, $t9, $t26
 33: if ($t26) goto 34 else goto 92
     # live vars: $t0, $t9
 34: label L3
     # live vars: $t0, $t9
 35: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 36: $t4 := 0
     # live vars: $t0, $t4, $t9, $t30
 37: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t9, $t35
 38: $t1 := read_ref($t35)
     # live vars: $t0, $t1, $t9
 39: $t30 := borrow_local($t9)
     # live vars: $t0, $t1, $t9, $t30
 40: $t4 := 0
     # live vars: $t0, $t1, $t4, $t9, $t30
 41: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t1, $t9, $t35
 42: $t18 := read_ref($t35)
     # live vars: $t0, $t1, $t9, $t18
 43: $t26 := ==($t1, $t18)
     # live vars: $t0, $t9, $t26
 44: if ($t26) goto 45 else goto 89
     # live vars: $t0, $t9
 45: label L6
     # live vars: $t0, $t9
 46: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 47: $t4 := 0
     # live vars: $t0, $t4, $t9, $t30
 48: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t9, $t35
 49: $t30 := borrow_local($t9)
     # live vars: $t0, $t9, $t30, $t35
 50: $t4 := 0
     # live vars: $t0, $t4, $t9, $t30, $t35
 51: $t47 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t9, $t35, $t47
 52: $t26 := ==($t35, $t47)
     # live vars: $t0, $t9, $t26
 53: if ($t26) goto 54 else goto 86
     # live vars: $t0, $t9
 54: label L9
     # live vars: $t0, $t9
 55: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 56: $t4 := 0
     # live vars: $t0, $t4, $t9, $t30
 57: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t9, $t35
 58: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
     # live vars: $t0, $t9, $t56
 59: $t2 := read_ref($t56)
     # live vars: $t0, $t2, $t9
 60: $t30 := borrow_local($t9)
     # live vars: $t0, $t2, $t9, $t30
 61: $t4 := 0
     # live vars: $t0, $t2, $t4, $t9, $t30
 62: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t2, $t9, $t35
 63: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
     # live vars: $t0, $t2, $t9, $t56
 64: $t57 := read_ref($t56)
     # live vars: $t0, $t2, $t9, $t57
 65: $t26 := ==($t2, $t57)
     # live vars: $t0, $t9, $t26
 66: if ($t26) goto 67 else goto 83
     # live vars: $t0, $t9
 67: label L12
     # live vars: $t0, $t9
 68: $t30 := borrow_local($t0)
     # live vars: $t9, $t30
 69: $t4 := 0
     # live vars: $t4, $t9, $t30
 70: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t9, $t35
 71: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
     # live vars: $t9, $t56
 72: $t30 := borrow_local($t9)
     # live vars: $t30, $t56
 73: $t4 := 0
     # live vars: $t4, $t30, $t56
 74: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t35, $t56
 75: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t35)
     # live vars: $t56, $t68
 76: $t26 := ==($t56, $t68)
     # live vars: $t26
 77: if ($t26) goto 78 else goto 80
     # live vars:
 78: label L15
     # live vars:
 79: return ()
     # live vars:
 80: label L16
     # live vars:
 81: $t4 := 0
     # live vars: $t4
 82: abort($t4)
     # live vars: $t0, $t9
 83: label L13
     # live vars:
 84: $t4 := 0
     # live vars: $t4
 85: abort($t4)
     # live vars: $t0, $t9
 86: label L10
     # live vars:
 87: $t4 := 0
     # live vars: $t4
 88: abort($t4)
     # live vars: $t0, $t9
 89: label L7
     # live vars:
 90: $t4 := 0
     # live vars: $t4
 91: abort($t4)
     # live vars: $t0, $t9
 92: label L4
     # live vars:
 93: $t4 := 0
     # live vars: $t4
 94: abort($t4)
     # live vars: $t0, $t9
 95: label L1
     # live vars:
 96: $t4 := 0
     # live vars: $t4
 97: abort($t4)
}

============ after DeadStoreElimination: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64 [unused]
     var $t5: u64 [unused]
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64 [unused]
     var $t9: bool [unused]
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64 [unused]
     var $t13: bool [unused]
     var $t14: u64 [unused]
     var $t15: &0xc0ffee::m::Test1 [unused]
     var $t16: &u64
     var $t17: u64 [unused]
     var $t18: &0xc0ffee::m::Test1 [unused]
     var $t19: &u64 [unused]
     var $t20: u64 [unused]
     var $t21: bool [unused]
     var $t22: &u64 [unused]
     var $t23: &0xc0ffee::m::Test1 [unused]
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1 [unused]
     var $t26: u64 [unused]
     var $t27: bool [unused]
     var $t28: u64 [unused]
     var $t29: &0xc0ffee::m::Test1 [unused]
     var $t30: &u64 [unused]
     var $t31: u64 [unused]
     var $t32: &0xc0ffee::m::Test1 [unused]
     var $t33: &u64 [unused]
     var $t34: u64 [unused]
     var $t35: bool [unused]
     var $t36: &u64 [unused]
     var $t37: &0xc0ffee::m::Test1 [unused]
     var $t38: &u64 [unused]
     var $t39: &0xc0ffee::m::Test1 [unused]
     var $t40: u64 [unused]
  0: $t1 := 1
  1: $t2 := 2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
  3: $t1 := 1
  4: $t2 := 2
  5: $t3 := pack 0xc0ffee::m::Test1($t1, $t2)
  6: $t7 := copy($t0)
  7: $t6 := ==($t7, $t3)
  8: if ($t6) goto 9 else goto 63
  9: label L0
 10: $t10 := borrow_local($t0)
 11: $t11 := borrow_local($t3)
 12: $t6 := ==($t10, $t11)
 13: if ($t6) goto 14 else goto 60
 14: label L3
 15: $t10 := borrow_local($t0)
 16: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
 17: $t1 := read_ref($t16)
 18: $t10 := borrow_local($t3)
 19: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
 20: $t2 := read_ref($t16)
 21: $t6 := ==($t1, $t2)
 22: if ($t6) goto 23 else goto 57
 23: label L6
 24: $t10 := borrow_local($t0)
 25: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
 26: $t10 := borrow_local($t3)
 27: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t10)
 28: $t6 := ==($t16, $t24)
 29: if ($t6) goto 30 else goto 54
 30: label L9
 31: $t10 := borrow_local($t0)
 32: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
 33: $t1 := read_ref($t16)
 34: $t10 := borrow_local($t3)
 35: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
 36: $t2 := read_ref($t16)
 37: $t6 := ==($t1, $t2)
 38: if ($t6) goto 39 else goto 51
 39: label L12
 40: $t10 := borrow_local($t0)
 41: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
 42: $t10 := borrow_local($t3)
 43: $t24 := borrow_field<0xc0ffee::m::Test1>.b($t10)
 44: $t6 := ==($t16, $t24)
 45: if ($t6) goto 46 else goto 48
 46: label L15
 47: return ()
 48: label L16
 49: $t1 := 0
 50: abort($t1)
 51: label L13
 52: $t1 := 0
 53: abort($t1)
 54: label L10
 55: $t1 := 0
 56: abort($t1)
 57: label L7
 58: $t1 := 0
 59: abort($t1)
 60: label L4
 61: $t1 := 0
 62: abort($t1)
 63: label L1
 64: $t1 := 0
 65: abort($t1)
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64> [unused]
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64 [unused]
     var $t7: bool [unused]
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64 [unused]
     var $t11: bool [unused]
     var $t12: vector<u64> [unused]
     var $t13: &0xc0ffee::m::Test2 [unused]
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2 [unused]
     var $t17: &vector<u64> [unused]
     var $t18: u64 [unused]
     var $t19: bool [unused]
     var $t20: &vector<u64> [unused]
     var $t21: &0xc0ffee::m::Test2 [unused]
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2 [unused]
     var $t24: u64 [unused]
     var $t25: bool [unused]
     var $t26: u64 [unused]
     var $t27: &u64
     var $t28: &vector<u64> [unused]
     var $t29: &0xc0ffee::m::Test2 [unused]
     var $t30: u64
     var $t31: u64 [unused]
     var $t32: &u64 [unused]
     var $t33: &vector<u64> [unused]
     var $t34: &0xc0ffee::m::Test2 [unused]
     var $t35: u64
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: &u64 [unused]
     var $t39: &vector<u64> [unused]
     var $t40: &0xc0ffee::m::Test2 [unused]
     var $t41: u64 [unused]
     var $t42: &u64
     var $t43: &vector<u64> [unused]
     var $t44: &0xc0ffee::m::Test2 [unused]
     var $t45: u64 [unused]
     var $t46: u64 [unused]
  0: $t1 := ["1", "2", "3"]
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
  2: $t1 := ["1", "2", "3"]
  3: $t2 := pack 0xc0ffee::m::Test2($t1)
  4: $t5 := copy($t0)
  5: $t4 := ==($t5, $t2)
  6: if ($t4) goto 7 else goto 69
  7: label L0
  8: $t8 := borrow_local($t0)
  9: $t9 := borrow_local($t2)
 10: $t4 := ==($t8, $t9)
 11: if ($t4) goto 12 else goto 66
 12: label L3
 13: $t8 := borrow_local($t0)
 14: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 15: $t1 := read_ref($t14)
 16: $t8 := borrow_local($t2)
 17: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 18: $t15 := read_ref($t14)
 19: $t4 := ==($t1, $t15)
 20: if ($t4) goto 21 else goto 63
 21: label L6
 22: $t8 := borrow_local($t0)
 23: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 24: $t8 := borrow_local($t2)
 25: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 26: $t4 := ==($t14, $t22)
 27: if ($t4) goto 28 else goto 60
 28: label L9
 29: $t8 := borrow_local($t0)
 30: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 31: $t30 := 0
 32: $t27 := vector::borrow<u64>($t14, $t30)
 33: $t30 := read_ref($t27)
 34: $t8 := borrow_local($t2)
 35: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 36: $t35 := 0
 37: $t27 := vector::borrow<u64>($t14, $t35)
 38: $t35 := read_ref($t27)
 39: $t4 := ==($t30, $t35)
 40: if ($t4) goto 41 else goto 57
 41: label L12
 42: $t8 := borrow_local($t0)
 43: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 44: $t30 := 0
 45: $t27 := vector::borrow<u64>($t14, $t30)
 46: $t8 := borrow_local($t2)
 47: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
 48: $t30 := 0
 49: $t42 := vector::borrow<u64>($t14, $t30)
 50: $t4 := ==($t27, $t42)
 51: if ($t4) goto 52 else goto 54
 52: label L15
 53: return ()
 54: label L16
 55: $t30 := 0
 56: abort($t30)
 57: label L13
 58: $t30 := 0
 59: abort($t30)
 60: label L10
 61: $t30 := 0
 62: abort($t30)
 63: label L7
 64: $t30 := 0
 65: abort($t30)
 66: label L4
 67: $t30 := 0
 68: abort($t30)
 69: label L1
 70: $t30 := 0
 71: abort($t30)
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1> [unused]
     var $t7: 0xc0ffee::m::Test1 [unused]
     var $t8: u64 [unused]
     var $t9: u64 [unused]
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64 [unused]
     var $t12: u64 [unused]
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64 [unused]
     var $t16: bool [unused]
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64 [unused]
     var $t20: bool [unused]
     var $t21: vector<0xc0ffee::m::Test1> [unused]
     var $t22: &0xc0ffee::m::Test3 [unused]
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3 [unused]
     var $t26: &vector<0xc0ffee::m::Test1> [unused]
     var $t27: u64 [unused]
     var $t28: bool [unused]
     var $t29: &vector<0xc0ffee::m::Test1> [unused]
     var $t30: &0xc0ffee::m::Test3 [unused]
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3 [unused]
     var $t33: u64 [unused]
     var $t34: bool [unused]
     var $t35: 0xc0ffee::m::Test1 [unused]
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1> [unused]
     var $t38: &0xc0ffee::m::Test3 [unused]
     var $t39: u64 [unused]
     var $t40: 0xc0ffee::m::Test1 [unused]
     var $t41: &0xc0ffee::m::Test1 [unused]
     var $t42: &vector<0xc0ffee::m::Test1> [unused]
     var $t43: &0xc0ffee::m::Test3 [unused]
     var $t44: u64 [unused]
     var $t45: u64 [unused]
     var $t46: bool [unused]
     var $t47: &0xc0ffee::m::Test1 [unused]
     var $t48: &vector<0xc0ffee::m::Test1> [unused]
     var $t49: &0xc0ffee::m::Test3 [unused]
     var $t50: u64 [unused]
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1> [unused]
     var $t53: &0xc0ffee::m::Test3 [unused]
     var $t54: u64 [unused]
     var $t55: u64 [unused]
  0: $t3 := 1
  1: $t4 := 2
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  3: $t1 := vector($t2)
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
  5: $t3 := 1
  6: $t4 := 2
  7: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
  8: $t3 := 1
  9: $t4 := 2
 10: $t10 := pack 0xc0ffee::m::Test1($t3, $t4)
 11: $t1 := vector($t2, $t10)
 12: $t5 := pack 0xc0ffee::m::Test3($t1)
 13: $t14 := copy($t0)
 14: $t13 := !=($t14, $t5)
 15: if ($t13) goto 16 else goto 78
 16: label L0
 17: $t17 := borrow_local($t0)
 18: $t18 := borrow_local($t5)
 19: $t13 := !=($t17, $t18)
 20: if ($t13) goto 21 else goto 75
 21: label L3
 22: $t17 := borrow_local($t0)
 23: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 24: $t1 := read_ref($t23)
 25: $t17 := borrow_local($t5)
 26: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 27: $t24 := read_ref($t23)
 28: $t13 := !=($t1, $t24)
 29: if ($t13) goto 30 else goto 72
 30: label L6
 31: $t17 := borrow_local($t0)
 32: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 33: $t17 := borrow_local($t5)
 34: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 35: $t13 := !=($t23, $t31)
 36: if ($t13) goto 37 else goto 69
 37: label L9
 38: $t17 := borrow_local($t0)
 39: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 40: $t3 := 0
 41: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
 42: $t2 := read_ref($t36)
 43: $t17 := borrow_local($t5)
 44: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 45: $t3 := 0
 46: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
 47: $t10 := read_ref($t36)
 48: $t13 := ==($t2, $t10)
 49: if ($t13) goto 50 else goto 66
 50: label L12
 51: $t17 := borrow_local($t0)
 52: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 53: $t3 := 0
 54: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
 55: $t17 := borrow_local($t5)
 56: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
 57: $t3 := 0
 58: $t51 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
 59: $t13 := ==($t36, $t51)
 60: if ($t13) goto 61 else goto 63
 61: label L15
 62: return ()
 63: label L16
 64: $t3 := 0
 65: abort($t3)
 66: label L13
 67: $t3 := 0
 68: abort($t3)
 69: label L10
 70: $t3 := 0
 71: abort($t3)
 72: label L7
 73: $t3 := 0
 74: abort($t3)
 75: label L4
 76: $t3 := 0
 77: abort($t3)
 78: label L1
 79: $t3 := 0
 80: abort($t3)
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64 [unused]
     var $t6: u64 [unused]
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64 [unused]
     var $t9: u64 [unused]
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1 [unused]
     var $t12: u64 [unused]
     var $t13: u64 [unused]
     var $t14: 0xc0ffee::m::Test1 [unused]
     var $t15: u64 [unused]
     var $t16: u64 [unused]
     var $t17: 0xc0ffee::m::Test1 [unused]
     var $t18: u64 [unused]
     var $t19: u64 [unused]
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64 [unused]
     var $t23: bool [unused]
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64 [unused]
     var $t27: bool [unused]
     var $t28: 0xc0ffee::m::Test1 [unused]
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1> [unused]
     var $t31: u64 [unused]
     var $t32: 0xc0ffee::m::Test1 [unused]
     var $t33: &0xc0ffee::m::Test1 [unused]
     var $t34: &vector<0xc0ffee::m::Test1> [unused]
     var $t35: u64 [unused]
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: &0xc0ffee::m::Test1 [unused]
     var $t39: &vector<0xc0ffee::m::Test1> [unused]
     var $t40: u64 [unused]
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1> [unused]
     var $t43: u64 [unused]
     var $t44: u64 [unused]
     var $t45: bool [unused]
     var $t46: 0xc0ffee::m::Test1 [unused]
     var $t47: &0xc0ffee::m::Test1 [unused]
     var $t48: &vector<0xc0ffee::m::Test1> [unused]
     var $t49: u64 [unused]
     var $t50: 0xc0ffee::m::Test1 [unused]
     var $t51: &0xc0ffee::m::Test1 [unused]
     var $t52: &vector<0xc0ffee::m::Test1> [unused]
     var $t53: u64 [unused]
     var $t54: u64 [unused]
     var $t55: bool [unused]
     var $t56: &0xc0ffee::m::Test1 [unused]
     var $t57: &vector<0xc0ffee::m::Test1> [unused]
     var $t58: u64 [unused]
     var $t59: &0xc0ffee::m::Test1 [unused]
     var $t60: &vector<0xc0ffee::m::Test1> [unused]
     var $t61: u64 [unused]
     var $t62: u64 [unused]
  0: $t2 := 1
  1: $t3 := 2
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
  3: $t2 := 1
  4: $t3 := 2
  5: $t4 := pack 0xc0ffee::m::Test1($t2, $t3)
  6: $t2 := 1
  7: $t3 := 2
  8: $t7 := pack 0xc0ffee::m::Test1($t2, $t3)
  9: $t0 := vector($t1, $t4, $t7)
 10: $t2 := 1
 11: $t3 := 2
 12: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
 13: $t2 := 1
 14: $t3 := 2
 15: $t4 := pack 0xc0ffee::m::Test1($t2, $t3)
 16: $t2 := 1
 17: $t3 := 2
 18: $t7 := pack 0xc0ffee::m::Test1($t2, $t3)
 19: $t10 := vector($t1, $t4, $t7)
 20: $t21 := copy($t0)
 21: $t20 := ==($t21, $t10)
 22: if ($t20) goto 23 else goto 85
 23: label L0
 24: $t24 := borrow_local($t0)
 25: $t25 := borrow_local($t10)
 26: $t20 := ==($t24, $t25)
 27: if ($t20) goto 28 else goto 82
 28: label L3
 29: $t24 := borrow_local($t0)
 30: $t2 := 0
 31: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 32: $t1 := read_ref($t29)
 33: $t24 := borrow_local($t10)
 34: $t2 := 0
 35: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 36: $t4 := read_ref($t29)
 37: $t20 := ==($t1, $t4)
 38: if ($t20) goto 39 else goto 79
 39: label L6
 40: $t24 := borrow_local($t0)
 41: $t2 := 0
 42: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 43: $t24 := borrow_local($t10)
 44: $t2 := 0
 45: $t41 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 46: $t20 := ==($t29, $t41)
 47: if ($t20) goto 48 else goto 76
 48: label L9
 49: $t24 := borrow_local($t0)
 50: $t2 := 1
 51: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 52: $t1 := read_ref($t29)
 53: $t24 := borrow_local($t10)
 54: $t2 := 1
 55: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 56: $t4 := read_ref($t29)
 57: $t20 := ==($t1, $t4)
 58: if ($t20) goto 59 else goto 73
 59: label L12
 60: $t24 := borrow_local($t0)
 61: $t2 := 1
 62: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 63: $t24 := borrow_local($t10)
 64: $t2 := 1
 65: $t41 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
 66: $t20 := ==($t29, $t41)
 67: if ($t20) goto 68 else goto 70
 68: label L15
 69: return ()
 70: label L16
 71: $t2 := 0
 72: abort($t2)
 73: label L13
 74: $t2 := 0
 75: abort($t2)
 76: label L10
 77: $t2 := 0
 78: abort($t2)
 79: label L7
 80: $t2 := 0
 81: abort($t2)
 82: label L4
 83: $t2 := 0
 84: abort($t2)
 85: label L1
 86: $t2 := 0
 87: abort($t2)
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64> [unused]
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2 [unused]
     var $t7: vector<u64> [unused]
     var $t8: 0xc0ffee::m::Test2 [unused]
     var $t9: vector<u64> [unused]
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64> [unused]
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64 [unused]
     var $t15: bool [unused]
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64 [unused]
     var $t19: bool [unused]
     var $t20: 0xc0ffee::m::Test2 [unused]
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2> [unused]
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2 [unused]
     var $t25: &0xc0ffee::m::Test2 [unused]
     var $t26: &vector<0xc0ffee::m::Test2> [unused]
     var $t27: u64 [unused]
     var $t28: u64 [unused]
     var $t29: bool [unused]
     var $t30: &0xc0ffee::m::Test2 [unused]
     var $t31: &vector<0xc0ffee::m::Test2> [unused]
     var $t32: u64 [unused]
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2> [unused]
     var $t35: u64 [unused]
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: 0xc0ffee::m::Test2 [unused]
     var $t39: &0xc0ffee::m::Test2 [unused]
     var $t40: &vector<0xc0ffee::m::Test2> [unused]
     var $t41: u64 [unused]
     var $t42: 0xc0ffee::m::Test2 [unused]
     var $t43: &0xc0ffee::m::Test2 [unused]
     var $t44: &vector<0xc0ffee::m::Test2> [unused]
     var $t45: u64 [unused]
     var $t46: u64 [unused]
     var $t47: bool [unused]
     var $t48: &0xc0ffee::m::Test2 [unused]
     var $t49: &vector<0xc0ffee::m::Test2> [unused]
     var $t50: u64 [unused]
     var $t51: &0xc0ffee::m::Test2 [unused]
     var $t52: &vector<0xc0ffee::m::Test2> [unused]
     var $t53: u64 [unused]
     var $t54: u64 [unused]
  0: $t2 := ["1", "2", "3"]
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
  2: $t2 := ["1", "2", "3"]
  3: $t3 := pack 0xc0ffee::m::Test2($t2)
  4: $t0 := vector($t1, $t3)
  5: $t2 := ["1", "2", "3"]
  6: $t1 := pack 0xc0ffee::m::Test2($t2)
  7: $t2 := ["2", "2", "2"]
  8: $t3 := pack 0xc0ffee::m::Test2($t2)
  9: $t2 := ["1", "2", "3"]
 10: $t10 := pack 0xc0ffee::m::Test2($t2)
 11: $t5 := vector($t1, $t3, $t10)
 12: $t13 := copy($t0)
 13: $t12 := !=($t13, $t5)
 14: if ($t12) goto 15 else goto 77
 15: label L0
 16: $t16 := borrow_local($t0)
 17: $t17 := borrow_local($t5)
 18: $t12 := !=($t16, $t17)
 19: if ($t12) goto 20 else goto 74
 20: label L3
 21: $t16 := borrow_local($t0)
 22: $t23 := 0
 23: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 24: $t1 := read_ref($t21)
 25: $t16 := borrow_local($t5)
 26: $t23 := 0
 27: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 28: $t3 := read_ref($t21)
 29: $t12 := ==($t1, $t3)
 30: if ($t12) goto 31 else goto 71
 31: label L6
 32: $t16 := borrow_local($t0)
 33: $t23 := 0
 34: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 35: $t16 := borrow_local($t5)
 36: $t23 := 0
 37: $t33 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 38: $t12 := ==($t21, $t33)
 39: if ($t12) goto 40 else goto 68
 40: label L9
 41: $t16 := borrow_local($t0)
 42: $t23 := 1
 43: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 44: $t1 := read_ref($t21)
 45: $t16 := borrow_local($t5)
 46: $t23 := 1
 47: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 48: $t3 := read_ref($t21)
 49: $t12 := !=($t1, $t3)
 50: if ($t12) goto 51 else goto 65
 51: label L12
 52: $t16 := borrow_local($t0)
 53: $t23 := 1
 54: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 55: $t16 := borrow_local($t5)
 56: $t23 := 1
 57: $t33 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
 58: $t12 := !=($t21, $t33)
 59: if ($t12) goto 60 else goto 62
 60: label L15
 61: return ()
 62: label L16
 63: $t23 := 0
 64: abort($t23)
 65: label L13
 66: $t23 := 0
 67: abort($t23)
 68: label L10
 69: $t23 := 0
 70: abort($t23)
 71: label L7
 72: $t23 := 0
 73: abort($t23)
 74: label L4
 75: $t23 := 0
 76: abort($t23)
 77: label L1
 78: $t23 := 0
 79: abort($t23)
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64 [unused]
     var $t8: u64 [unused]
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3 [unused]
     var $t11: vector<0xc0ffee::m::Test1> [unused]
     var $t12: 0xc0ffee::m::Test1 [unused]
     var $t13: u64 [unused]
     var $t14: u64 [unused]
     var $t15: 0xc0ffee::m::Test1 [unused]
     var $t16: u64 [unused]
     var $t17: u64 [unused]
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1> [unused]
     var $t20: 0xc0ffee::m::Test1 [unused]
     var $t21: u64 [unused]
     var $t22: u64 [unused]
     var $t23: 0xc0ffee::m::Test1 [unused]
     var $t24: u64 [unused]
     var $t25: u64 [unused]
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64 [unused]
     var $t29: bool [unused]
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64 [unused]
     var $t33: bool [unused]
     var $t34: 0xc0ffee::m::Test3 [unused]
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3> [unused]
     var $t37: u64 [unused]
     var $t38: 0xc0ffee::m::Test3 [unused]
     var $t39: &0xc0ffee::m::Test3 [unused]
     var $t40: &vector<0xc0ffee::m::Test3> [unused]
     var $t41: u64 [unused]
     var $t42: u64 [unused]
     var $t43: bool [unused]
     var $t44: &0xc0ffee::m::Test3 [unused]
     var $t45: &vector<0xc0ffee::m::Test3> [unused]
     var $t46: u64 [unused]
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3> [unused]
     var $t49: u64 [unused]
     var $t50: u64 [unused]
     var $t51: bool [unused]
     var $t52: vector<0xc0ffee::m::Test1> [unused]
     var $t53: &0xc0ffee::m::Test3 [unused]
     var $t54: &vector<0xc0ffee::m::Test3> [unused]
     var $t55: u64 [unused]
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3 [unused]
     var $t59: &vector<0xc0ffee::m::Test3> [unused]
     var $t60: u64 [unused]
     var $t61: &vector<0xc0ffee::m::Test1> [unused]
     var $t62: u64 [unused]
     var $t63: bool [unused]
     var $t64: &vector<0xc0ffee::m::Test1> [unused]
     var $t65: &0xc0ffee::m::Test3 [unused]
     var $t66: &vector<0xc0ffee::m::Test3> [unused]
     var $t67: u64 [unused]
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3 [unused]
     var $t70: &vector<0xc0ffee::m::Test3> [unused]
     var $t71: u64 [unused]
     var $t72: u64 [unused]
  0: $t4 := 1
  1: $t5 := 2
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
  3: $t4 := 1
  4: $t5 := 2
  5: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
  6: $t2 := vector($t3, $t6)
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
  8: $t0 := vector($t1)
  9: $t4 := 1
 10: $t5 := 2
 11: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
 12: $t4 := 1
 13: $t5 := 2
 14: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
 15: $t2 := vector($t3, $t6)
 16: $t1 := pack 0xc0ffee::m::Test3($t2)
 17: $t4 := 1
 18: $t5 := 2
 19: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
 20: $t4 := 1
 21: $t5 := 2
 22: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
 23: $t2 := vector($t3, $t6)
 24: $t18 := pack 0xc0ffee::m::Test3($t2)
 25: $t9 := vector($t1, $t18)
 26: $t27 := copy($t0)
 27: $t26 := !=($t27, $t9)
 28: if ($t26) goto 29 else goto 95
 29: label L0
 30: $t30 := borrow_local($t0)
 31: $t31 := borrow_local($t9)
 32: $t26 := !=($t30, $t31)
 33: if ($t26) goto 34 else goto 92
 34: label L3
 35: $t30 := borrow_local($t0)
 36: $t4 := 0
 37: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 38: $t1 := read_ref($t35)
 39: $t30 := borrow_local($t9)
 40: $t4 := 0
 41: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 42: $t18 := read_ref($t35)
 43: $t26 := ==($t1, $t18)
 44: if ($t26) goto 45 else goto 89
 45: label L6
 46: $t30 := borrow_local($t0)
 47: $t4 := 0
 48: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 49: $t30 := borrow_local($t9)
 50: $t4 := 0
 51: $t47 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 52: $t26 := ==($t35, $t47)
 53: if ($t26) goto 54 else goto 86
 54: label L9
 55: $t30 := borrow_local($t0)
 56: $t4 := 0
 57: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 58: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
 59: $t2 := read_ref($t56)
 60: $t30 := borrow_local($t9)
 61: $t4 := 0
 62: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 63: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
 64: $t57 := read_ref($t56)
 65: $t26 := ==($t2, $t57)
 66: if ($t26) goto 67 else goto 83
 67: label L12
 68: $t30 := borrow_local($t0)
 69: $t4 := 0
 70: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 71: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
 72: $t30 := borrow_local($t9)
 73: $t4 := 0
 74: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
 75: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t35)
 76: $t26 := ==($t56, $t68)
 77: if ($t26) goto 78 else goto 80
 78: label L15
 79: return ()
 80: label L16
 81: $t4 := 0
 82: abort($t4)
 83: label L13
 84: $t4 := 0
 85: abort($t4)
 86: label L10
 87: $t4 := 0
 88: abort($t4)
 89: label L7
 90: $t4 := 0
 91: abort($t4)
 92: label L4
 93: $t4 := 0
 94: abort($t4)
 95: label L1
 96: $t4 := 0
 97: abort($t4)
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64 [unused]
     var $t5: u64 [unused]
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64 [unused]
     var $t9: bool [unused]
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64 [unused]
     var $t13: bool [unused]
     var $t14: u64 [unused]
     var $t15: &0xc0ffee::m::Test1 [unused]
     var $t16: &u64
     var $t17: u64 [unused]
     var $t18: &0xc0ffee::m::Test1 [unused]
     var $t19: &u64 [unused]
     var $t20: u64 [unused]
     var $t21: bool [unused]
     var $t22: &u64 [unused]
     var $t23: &0xc0ffee::m::Test1 [unused]
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1 [unused]
     var $t26: u64 [unused]
     var $t27: bool [unused]
     var $t28: u64 [unused]
     var $t29: &0xc0ffee::m::Test1 [unused]
     var $t30: &u64 [unused]
     var $t31: u64 [unused]
     var $t32: &0xc0ffee::m::Test1 [unused]
     var $t33: &u64 [unused]
     var $t34: u64 [unused]
     var $t35: bool [unused]
     var $t36: &u64 [unused]
     var $t37: &0xc0ffee::m::Test1 [unused]
     var $t38: &u64 [unused]
     var $t39: &0xc0ffee::m::Test1 [unused]
     var $t40: u64 [unused]
     # live vars:
  0: $t1 := 1
     # live vars: $t1
  1: $t2 := 2
     # live vars: $t1, $t2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
     # live vars: $t0
  3: $t1 := 1
     # live vars: $t0, $t1
  4: $t2 := 2
     # live vars: $t0, $t1, $t2
  5: $t3 := pack 0xc0ffee::m::Test1($t1, $t2)
     # live vars: $t0, $t3
  6: $t7 := copy($t0)
     # live vars: $t0, $t3, $t7
  7: $t6 := ==($t7, $t3)
     # live vars: $t0, $t3, $t6
  8: if ($t6) goto 9 else goto 63
     # live vars: $t0, $t3
  9: label L0
     # live vars: $t0, $t3
 10: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 11: $t11 := borrow_local($t3)
     # live vars: $t0, $t3, $t10, $t11
 12: $t6 := ==($t10, $t11)
     # live vars: $t0, $t3, $t6
 13: if ($t6) goto 14 else goto 60
     # live vars: $t0, $t3
 14: label L3
     # live vars: $t0, $t3
 15: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 16: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
     # live vars: $t0, $t3, $t16
 17: $t1 := read_ref($t16)
     # live vars: $t0, $t1, $t3
 18: $t10 := borrow_local($t3)
     # live vars: $t0, $t1, $t3, $t10
 19: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
     # live vars: $t0, $t1, $t3, $t16
 20: $t2 := read_ref($t16)
     # live vars: $t0, $t1, $t2, $t3
 21: $t6 := ==($t1, $t2)
     # live vars: $t0, $t3, $t6
 22: if ($t6) goto 23 else goto 57
     # live vars: $t0, $t3
 23: label L6
     # live vars: $t0, $t3
 24: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 25: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
     # live vars: $t0, $t3, $t16
 26: $t10 := borrow_local($t3)
     # live vars: $t0, $t3, $t10, $t16
 27: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t10)
     # live vars: $t0, $t3, $t16, $t24
 28: $t6 := ==($t16, $t24)
     # live vars: $t0, $t3, $t6
 29: if ($t6) goto 30 else goto 54
     # live vars: $t0, $t3
 30: label L9
     # live vars: $t0, $t3
 31: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 32: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
     # live vars: $t0, $t3, $t16
 33: $t1 := read_ref($t16)
     # live vars: $t0, $t1, $t3
 34: $t10 := borrow_local($t3)
     # live vars: $t0, $t1, $t3, $t10
 35: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
     # live vars: $t0, $t1, $t3, $t16
 36: $t2 := read_ref($t16)
     # live vars: $t0, $t1, $t2, $t3
 37: $t6 := ==($t1, $t2)
     # live vars: $t0, $t3, $t6
 38: if ($t6) goto 39 else goto 51
     # live vars: $t0, $t3
 39: label L12
     # live vars: $t0, $t3
 40: $t10 := borrow_local($t0)
     # live vars: $t3, $t10
 41: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
     # live vars: $t3, $t16
 42: $t10 := borrow_local($t3)
     # live vars: $t10, $t16
 43: $t24 := borrow_field<0xc0ffee::m::Test1>.b($t10)
     # live vars: $t16, $t24
 44: $t6 := ==($t16, $t24)
     # live vars: $t6
 45: if ($t6) goto 46 else goto 48
     # live vars:
 46: label L15
     # live vars:
 47: return ()
     # live vars:
 48: label L16
     # live vars:
 49: $t1 := 0
     # live vars: $t1
 50: abort($t1)
     # live vars: $t0, $t3
 51: label L13
     # live vars:
 52: $t1 := 0
     # live vars: $t1
 53: abort($t1)
     # live vars: $t0, $t3
 54: label L10
     # live vars:
 55: $t1 := 0
     # live vars: $t1
 56: abort($t1)
     # live vars: $t0, $t3
 57: label L7
     # live vars:
 58: $t1 := 0
     # live vars: $t1
 59: abort($t1)
     # live vars: $t0, $t3
 60: label L4
     # live vars:
 61: $t1 := 0
     # live vars: $t1
 62: abort($t1)
     # live vars: $t0, $t3
 63: label L1
     # live vars:
 64: $t1 := 0
     # live vars: $t1
 65: abort($t1)
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64> [unused]
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64 [unused]
     var $t7: bool [unused]
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64 [unused]
     var $t11: bool [unused]
     var $t12: vector<u64> [unused]
     var $t13: &0xc0ffee::m::Test2 [unused]
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2 [unused]
     var $t17: &vector<u64> [unused]
     var $t18: u64 [unused]
     var $t19: bool [unused]
     var $t20: &vector<u64> [unused]
     var $t21: &0xc0ffee::m::Test2 [unused]
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2 [unused]
     var $t24: u64 [unused]
     var $t25: bool [unused]
     var $t26: u64 [unused]
     var $t27: &u64
     var $t28: &vector<u64> [unused]
     var $t29: &0xc0ffee::m::Test2 [unused]
     var $t30: u64
     var $t31: u64 [unused]
     var $t32: &u64 [unused]
     var $t33: &vector<u64> [unused]
     var $t34: &0xc0ffee::m::Test2 [unused]
     var $t35: u64
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: &u64 [unused]
     var $t39: &vector<u64> [unused]
     var $t40: &0xc0ffee::m::Test2 [unused]
     var $t41: u64 [unused]
     var $t42: &u64
     var $t43: &vector<u64> [unused]
     var $t44: &0xc0ffee::m::Test2 [unused]
     var $t45: u64 [unused]
     var $t46: u64 [unused]
     # live vars:
  0: $t1 := ["1", "2", "3"]
     # live vars: $t1
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
     # live vars: $t0
  2: $t1 := ["1", "2", "3"]
     # live vars: $t0, $t1
  3: $t2 := pack 0xc0ffee::m::Test2($t1)
     # live vars: $t0, $t2
  4: $t5 := copy($t0)
     # live vars: $t0, $t2, $t5
  5: $t4 := ==($t5, $t2)
     # live vars: $t0, $t2, $t4
  6: if ($t4) goto 7 else goto 69
     # live vars: $t0, $t2
  7: label L0
     # live vars: $t0, $t2
  8: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
  9: $t9 := borrow_local($t2)
     # live vars: $t0, $t2, $t8, $t9
 10: $t4 := ==($t8, $t9)
     # live vars: $t0, $t2, $t4
 11: if ($t4) goto 12 else goto 66
     # live vars: $t0, $t2
 12: label L3
     # live vars: $t0, $t2
 13: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
 14: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14
 15: $t1 := read_ref($t14)
     # live vars: $t0, $t1, $t2
 16: $t8 := borrow_local($t2)
     # live vars: $t0, $t1, $t2, $t8
 17: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t1, $t2, $t14
 18: $t15 := read_ref($t14)
     # live vars: $t0, $t1, $t2, $t15
 19: $t4 := ==($t1, $t15)
     # live vars: $t0, $t2, $t4
 20: if ($t4) goto 21 else goto 63
     # live vars: $t0, $t2
 21: label L6
     # live vars: $t0, $t2
 22: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
 23: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14
 24: $t8 := borrow_local($t2)
     # live vars: $t0, $t2, $t8, $t14
 25: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14, $t22
 26: $t4 := ==($t14, $t22)
     # live vars: $t0, $t2, $t4
 27: if ($t4) goto 28 else goto 60
     # live vars: $t0, $t2
 28: label L9
     # live vars: $t0, $t2
 29: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
 30: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14
 31: $t30 := 0
     # live vars: $t0, $t2, $t14, $t30
 32: $t27 := vector::borrow<u64>($t14, $t30)
     # live vars: $t0, $t2, $t27
 33: $t30 := read_ref($t27)
     # live vars: $t0, $t2, $t30
 34: $t8 := borrow_local($t2)
     # live vars: $t0, $t2, $t8, $t30
 35: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14, $t30
 36: $t35 := 0
     # live vars: $t0, $t2, $t14, $t30, $t35
 37: $t27 := vector::borrow<u64>($t14, $t35)
     # live vars: $t0, $t2, $t27, $t30
 38: $t35 := read_ref($t27)
     # live vars: $t0, $t2, $t30, $t35
 39: $t4 := ==($t30, $t35)
     # live vars: $t0, $t2, $t4
 40: if ($t4) goto 41 else goto 57
     # live vars: $t0, $t2
 41: label L12
     # live vars: $t0, $t2
 42: $t8 := borrow_local($t0)
     # live vars: $t2, $t8
 43: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t2, $t14
 44: $t30 := 0
     # live vars: $t2, $t14, $t30
 45: $t27 := vector::borrow<u64>($t14, $t30)
     # live vars: $t2, $t27
 46: $t8 := borrow_local($t2)
     # live vars: $t8, $t27
 47: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t14, $t27
 48: $t30 := 0
     # live vars: $t14, $t27, $t30
 49: $t42 := vector::borrow<u64>($t14, $t30)
     # live vars: $t27, $t42
 50: $t4 := ==($t27, $t42)
     # live vars: $t4
 51: if ($t4) goto 52 else goto 54
     # live vars:
 52: label L15
     # live vars:
 53: return ()
     # live vars:
 54: label L16
     # live vars:
 55: $t30 := 0
     # live vars: $t30
 56: abort($t30)
     # live vars: $t0, $t2
 57: label L13
     # live vars:
 58: $t30 := 0
     # live vars: $t30
 59: abort($t30)
     # live vars: $t0, $t2
 60: label L10
     # live vars:
 61: $t30 := 0
     # live vars: $t30
 62: abort($t30)
     # live vars: $t0, $t2
 63: label L7
     # live vars:
 64: $t30 := 0
     # live vars: $t30
 65: abort($t30)
     # live vars: $t0, $t2
 66: label L4
     # live vars:
 67: $t30 := 0
     # live vars: $t30
 68: abort($t30)
     # live vars: $t0, $t2
 69: label L1
     # live vars:
 70: $t30 := 0
     # live vars: $t30
 71: abort($t30)
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1> [unused]
     var $t7: 0xc0ffee::m::Test1 [unused]
     var $t8: u64 [unused]
     var $t9: u64 [unused]
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64 [unused]
     var $t12: u64 [unused]
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64 [unused]
     var $t16: bool [unused]
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64 [unused]
     var $t20: bool [unused]
     var $t21: vector<0xc0ffee::m::Test1> [unused]
     var $t22: &0xc0ffee::m::Test3 [unused]
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3 [unused]
     var $t26: &vector<0xc0ffee::m::Test1> [unused]
     var $t27: u64 [unused]
     var $t28: bool [unused]
     var $t29: &vector<0xc0ffee::m::Test1> [unused]
     var $t30: &0xc0ffee::m::Test3 [unused]
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3 [unused]
     var $t33: u64 [unused]
     var $t34: bool [unused]
     var $t35: 0xc0ffee::m::Test1 [unused]
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1> [unused]
     var $t38: &0xc0ffee::m::Test3 [unused]
     var $t39: u64 [unused]
     var $t40: 0xc0ffee::m::Test1 [unused]
     var $t41: &0xc0ffee::m::Test1 [unused]
     var $t42: &vector<0xc0ffee::m::Test1> [unused]
     var $t43: &0xc0ffee::m::Test3 [unused]
     var $t44: u64 [unused]
     var $t45: u64 [unused]
     var $t46: bool [unused]
     var $t47: &0xc0ffee::m::Test1 [unused]
     var $t48: &vector<0xc0ffee::m::Test1> [unused]
     var $t49: &0xc0ffee::m::Test3 [unused]
     var $t50: u64 [unused]
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1> [unused]
     var $t53: &0xc0ffee::m::Test3 [unused]
     var $t54: u64 [unused]
     var $t55: u64 [unused]
     # live vars:
  0: $t3 := 1
     # live vars: $t3
  1: $t4 := 2
     # live vars: $t3, $t4
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t2
  3: $t1 := vector($t2)
     # live vars: $t1
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
     # live vars: $t0
  5: $t3 := 1
     # live vars: $t0, $t3
  6: $t4 := 2
     # live vars: $t0, $t3, $t4
  7: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t0, $t2
  8: $t3 := 1
     # live vars: $t0, $t2, $t3
  9: $t4 := 2
     # live vars: $t0, $t2, $t3, $t4
 10: $t10 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t0, $t2, $t10
 11: $t1 := vector($t2, $t10)
     # live vars: $t0, $t1
 12: $t5 := pack 0xc0ffee::m::Test3($t1)
     # live vars: $t0, $t5
 13: $t14 := copy($t0)
     # live vars: $t0, $t5, $t14
 14: $t13 := !=($t14, $t5)
     # live vars: $t0, $t5, $t13
 15: if ($t13) goto 16 else goto 78
     # live vars: $t0, $t5
 16: label L0
     # live vars: $t0, $t5
 17: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 18: $t18 := borrow_local($t5)
     # live vars: $t0, $t5, $t17, $t18
 19: $t13 := !=($t17, $t18)
     # live vars: $t0, $t5, $t13
 20: if ($t13) goto 21 else goto 75
     # live vars: $t0, $t5
 21: label L3
     # live vars: $t0, $t5
 22: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 23: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t5, $t23
 24: $t1 := read_ref($t23)
     # live vars: $t0, $t1, $t5
 25: $t17 := borrow_local($t5)
     # live vars: $t0, $t1, $t5, $t17
 26: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t1, $t5, $t23
 27: $t24 := read_ref($t23)
     # live vars: $t0, $t1, $t5, $t24
 28: $t13 := !=($t1, $t24)
     # live vars: $t0, $t5, $t13
 29: if ($t13) goto 30 else goto 72
     # live vars: $t0, $t5
 30: label L6
     # live vars: $t0, $t5
 31: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 32: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t5, $t23
 33: $t17 := borrow_local($t5)
     # live vars: $t0, $t5, $t17, $t23
 34: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t5, $t23, $t31
 35: $t13 := !=($t23, $t31)
     # live vars: $t0, $t5, $t13
 36: if ($t13) goto 37 else goto 69
     # live vars: $t0, $t5
 37: label L9
     # live vars: $t0, $t5
 38: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 39: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t5, $t23
 40: $t3 := 0
     # live vars: $t0, $t3, $t5, $t23
 41: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
     # live vars: $t0, $t5, $t36
 42: $t2 := read_ref($t36)
     # live vars: $t0, $t2, $t5
 43: $t17 := borrow_local($t5)
     # live vars: $t0, $t2, $t5, $t17
 44: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t2, $t5, $t23
 45: $t3 := 0
     # live vars: $t0, $t2, $t3, $t5, $t23
 46: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
     # live vars: $t0, $t2, $t5, $t36
 47: $t10 := read_ref($t36)
     # live vars: $t0, $t2, $t5, $t10
 48: $t13 := ==($t2, $t10)
     # live vars: $t0, $t5, $t13
 49: if ($t13) goto 50 else goto 66
     # live vars: $t0, $t5
 50: label L12
     # live vars: $t0, $t5
 51: $t17 := borrow_local($t0)
     # live vars: $t5, $t17
 52: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t5, $t23
 53: $t3 := 0
     # live vars: $t3, $t5, $t23
 54: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
     # live vars: $t5, $t36
 55: $t17 := borrow_local($t5)
     # live vars: $t17, $t36
 56: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t23, $t36
 57: $t3 := 0
     # live vars: $t3, $t23, $t36
 58: $t51 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
     # live vars: $t36, $t51
 59: $t13 := ==($t36, $t51)
     # live vars: $t13
 60: if ($t13) goto 61 else goto 63
     # live vars:
 61: label L15
     # live vars:
 62: return ()
     # live vars:
 63: label L16
     # live vars:
 64: $t3 := 0
     # live vars: $t3
 65: abort($t3)
     # live vars: $t0, $t5
 66: label L13
     # live vars:
 67: $t3 := 0
     # live vars: $t3
 68: abort($t3)
     # live vars: $t0, $t5
 69: label L10
     # live vars:
 70: $t3 := 0
     # live vars: $t3
 71: abort($t3)
     # live vars: $t0, $t5
 72: label L7
     # live vars:
 73: $t3 := 0
     # live vars: $t3
 74: abort($t3)
     # live vars: $t0, $t5
 75: label L4
     # live vars:
 76: $t3 := 0
     # live vars: $t3
 77: abort($t3)
     # live vars: $t0, $t5
 78: label L1
     # live vars:
 79: $t3 := 0
     # live vars: $t3
 80: abort($t3)
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64 [unused]
     var $t6: u64 [unused]
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64 [unused]
     var $t9: u64 [unused]
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1 [unused]
     var $t12: u64 [unused]
     var $t13: u64 [unused]
     var $t14: 0xc0ffee::m::Test1 [unused]
     var $t15: u64 [unused]
     var $t16: u64 [unused]
     var $t17: 0xc0ffee::m::Test1 [unused]
     var $t18: u64 [unused]
     var $t19: u64 [unused]
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64 [unused]
     var $t23: bool [unused]
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64 [unused]
     var $t27: bool [unused]
     var $t28: 0xc0ffee::m::Test1 [unused]
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1> [unused]
     var $t31: u64 [unused]
     var $t32: 0xc0ffee::m::Test1 [unused]
     var $t33: &0xc0ffee::m::Test1 [unused]
     var $t34: &vector<0xc0ffee::m::Test1> [unused]
     var $t35: u64 [unused]
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: &0xc0ffee::m::Test1 [unused]
     var $t39: &vector<0xc0ffee::m::Test1> [unused]
     var $t40: u64 [unused]
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1> [unused]
     var $t43: u64 [unused]
     var $t44: u64 [unused]
     var $t45: bool [unused]
     var $t46: 0xc0ffee::m::Test1 [unused]
     var $t47: &0xc0ffee::m::Test1 [unused]
     var $t48: &vector<0xc0ffee::m::Test1> [unused]
     var $t49: u64 [unused]
     var $t50: 0xc0ffee::m::Test1 [unused]
     var $t51: &0xc0ffee::m::Test1 [unused]
     var $t52: &vector<0xc0ffee::m::Test1> [unused]
     var $t53: u64 [unused]
     var $t54: u64 [unused]
     var $t55: bool [unused]
     var $t56: &0xc0ffee::m::Test1 [unused]
     var $t57: &vector<0xc0ffee::m::Test1> [unused]
     var $t58: u64 [unused]
     var $t59: &0xc0ffee::m::Test1 [unused]
     var $t60: &vector<0xc0ffee::m::Test1> [unused]
     var $t61: u64 [unused]
     var $t62: u64 [unused]
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t3 := 2
     # live vars: $t2, $t3
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1
  3: $t2 := 1
     # live vars: $t1, $t2
  4: $t3 := 2
     # live vars: $t1, $t2, $t3
  5: $t4 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1, $t4
  6: $t2 := 1
     # live vars: $t1, $t2, $t4
  7: $t3 := 2
     # live vars: $t1, $t2, $t3, $t4
  8: $t7 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1, $t4, $t7
  9: $t0 := vector($t1, $t4, $t7)
     # live vars: $t0
 10: $t2 := 1
     # live vars: $t0, $t2
 11: $t3 := 2
     # live vars: $t0, $t2, $t3
 12: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t0, $t1
 13: $t2 := 1
     # live vars: $t0, $t1, $t2
 14: $t3 := 2
     # live vars: $t0, $t1, $t2, $t3
 15: $t4 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t0, $t1, $t4
 16: $t2 := 1
     # live vars: $t0, $t1, $t2, $t4
 17: $t3 := 2
     # live vars: $t0, $t1, $t2, $t3, $t4
 18: $t7 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t0, $t1, $t4, $t7
 19: $t10 := vector($t1, $t4, $t7)
     # live vars: $t0, $t10
 20: $t21 := copy($t0)
     # live vars: $t0, $t10, $t21
 21: $t20 := ==($t21, $t10)
     # live vars: $t0, $t10, $t20
 22: if ($t20) goto 23 else goto 85
     # live vars: $t0, $t10
 23: label L0
     # live vars: $t0, $t10
 24: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 25: $t25 := borrow_local($t10)
     # live vars: $t0, $t10, $t24, $t25
 26: $t20 := ==($t24, $t25)
     # live vars: $t0, $t10, $t20
 27: if ($t20) goto 28 else goto 82
     # live vars: $t0, $t10
 28: label L3
     # live vars: $t0, $t10
 29: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 30: $t2 := 0
     # live vars: $t0, $t2, $t10, $t24
 31: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t10, $t29
 32: $t1 := read_ref($t29)
     # live vars: $t0, $t1, $t10
 33: $t24 := borrow_local($t10)
     # live vars: $t0, $t1, $t10, $t24
 34: $t2 := 0
     # live vars: $t0, $t1, $t2, $t10, $t24
 35: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t1, $t10, $t29
 36: $t4 := read_ref($t29)
     # live vars: $t0, $t1, $t4, $t10
 37: $t20 := ==($t1, $t4)
     # live vars: $t0, $t10, $t20
 38: if ($t20) goto 39 else goto 79
     # live vars: $t0, $t10
 39: label L6
     # live vars: $t0, $t10
 40: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 41: $t2 := 0
     # live vars: $t0, $t2, $t10, $t24
 42: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t10, $t29
 43: $t24 := borrow_local($t10)
     # live vars: $t0, $t10, $t24, $t29
 44: $t2 := 0
     # live vars: $t0, $t2, $t10, $t24, $t29
 45: $t41 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t10, $t29, $t41
 46: $t20 := ==($t29, $t41)
     # live vars: $t0, $t10, $t20
 47: if ($t20) goto 48 else goto 76
     # live vars: $t0, $t10
 48: label L9
     # live vars: $t0, $t10
 49: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 50: $t2 := 1
     # live vars: $t0, $t2, $t10, $t24
 51: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t10, $t29
 52: $t1 := read_ref($t29)
     # live vars: $t0, $t1, $t10
 53: $t24 := borrow_local($t10)
     # live vars: $t0, $t1, $t10, $t24
 54: $t2 := 1
     # live vars: $t0, $t1, $t2, $t10, $t24
 55: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t1, $t10, $t29
 56: $t4 := read_ref($t29)
     # live vars: $t0, $t1, $t4, $t10
 57: $t20 := ==($t1, $t4)
     # live vars: $t0, $t10, $t20
 58: if ($t20) goto 59 else goto 73
     # live vars: $t0, $t10
 59: label L12
     # live vars: $t0, $t10
 60: $t24 := borrow_local($t0)
     # live vars: $t10, $t24
 61: $t2 := 1
     # live vars: $t2, $t10, $t24
 62: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t10, $t29
 63: $t24 := borrow_local($t10)
     # live vars: $t24, $t29
 64: $t2 := 1
     # live vars: $t2, $t24, $t29
 65: $t41 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t29, $t41
 66: $t20 := ==($t29, $t41)
     # live vars: $t20
 67: if ($t20) goto 68 else goto 70
     # live vars:
 68: label L15
     # live vars:
 69: return ()
     # live vars:
 70: label L16
     # live vars:
 71: $t2 := 0
     # live vars: $t2
 72: abort($t2)
     # live vars: $t0, $t10
 73: label L13
     # live vars:
 74: $t2 := 0
     # live vars: $t2
 75: abort($t2)
     # live vars: $t0, $t10
 76: label L10
     # live vars:
 77: $t2 := 0
     # live vars: $t2
 78: abort($t2)
     # live vars: $t0, $t10
 79: label L7
     # live vars:
 80: $t2 := 0
     # live vars: $t2
 81: abort($t2)
     # live vars: $t0, $t10
 82: label L4
     # live vars:
 83: $t2 := 0
     # live vars: $t2
 84: abort($t2)
     # live vars: $t0, $t10
 85: label L1
     # live vars:
 86: $t2 := 0
     # live vars: $t2
 87: abort($t2)
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64> [unused]
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2 [unused]
     var $t7: vector<u64> [unused]
     var $t8: 0xc0ffee::m::Test2 [unused]
     var $t9: vector<u64> [unused]
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64> [unused]
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64 [unused]
     var $t15: bool [unused]
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64 [unused]
     var $t19: bool [unused]
     var $t20: 0xc0ffee::m::Test2 [unused]
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2> [unused]
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2 [unused]
     var $t25: &0xc0ffee::m::Test2 [unused]
     var $t26: &vector<0xc0ffee::m::Test2> [unused]
     var $t27: u64 [unused]
     var $t28: u64 [unused]
     var $t29: bool [unused]
     var $t30: &0xc0ffee::m::Test2 [unused]
     var $t31: &vector<0xc0ffee::m::Test2> [unused]
     var $t32: u64 [unused]
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2> [unused]
     var $t35: u64 [unused]
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: 0xc0ffee::m::Test2 [unused]
     var $t39: &0xc0ffee::m::Test2 [unused]
     var $t40: &vector<0xc0ffee::m::Test2> [unused]
     var $t41: u64 [unused]
     var $t42: 0xc0ffee::m::Test2 [unused]
     var $t43: &0xc0ffee::m::Test2 [unused]
     var $t44: &vector<0xc0ffee::m::Test2> [unused]
     var $t45: u64 [unused]
     var $t46: u64 [unused]
     var $t47: bool [unused]
     var $t48: &0xc0ffee::m::Test2 [unused]
     var $t49: &vector<0xc0ffee::m::Test2> [unused]
     var $t50: u64 [unused]
     var $t51: &0xc0ffee::m::Test2 [unused]
     var $t52: &vector<0xc0ffee::m::Test2> [unused]
     var $t53: u64 [unused]
     var $t54: u64 [unused]
     # live vars:
  0: $t2 := ["1", "2", "3"]
     # live vars: $t2
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t1
  2: $t2 := ["1", "2", "3"]
     # live vars: $t1, $t2
  3: $t3 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t1, $t3
  4: $t0 := vector($t1, $t3)
     # live vars: $t0
  5: $t2 := ["1", "2", "3"]
     # live vars: $t0, $t2
  6: $t1 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t0, $t1
  7: $t2 := ["2", "2", "2"]
     # live vars: $t0, $t1, $t2
  8: $t3 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t0, $t1, $t3
  9: $t2 := ["1", "2", "3"]
     # live vars: $t0, $t1, $t2, $t3
 10: $t10 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t0, $t1, $t3, $t10
 11: $t5 := vector($t1, $t3, $t10)
     # live vars: $t0, $t5
 12: $t13 := copy($t0)
     # live vars: $t0, $t5, $t13
 13: $t12 := !=($t13, $t5)
     # live vars: $t0, $t5, $t12
 14: if ($t12) goto 15 else goto 77
     # live vars: $t0, $t5
 15: label L0
     # live vars: $t0, $t5
 16: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 17: $t17 := borrow_local($t5)
     # live vars: $t0, $t5, $t16, $t17
 18: $t12 := !=($t16, $t17)
     # live vars: $t0, $t5, $t12
 19: if ($t12) goto 20 else goto 74
     # live vars: $t0, $t5
 20: label L3
     # live vars: $t0, $t5
 21: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 22: $t23 := 0
     # live vars: $t0, $t5, $t16, $t23
 23: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t5, $t21
 24: $t1 := read_ref($t21)
     # live vars: $t0, $t1, $t5
 25: $t16 := borrow_local($t5)
     # live vars: $t0, $t1, $t5, $t16
 26: $t23 := 0
     # live vars: $t0, $t1, $t5, $t16, $t23
 27: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t1, $t5, $t21
 28: $t3 := read_ref($t21)
     # live vars: $t0, $t1, $t3, $t5
 29: $t12 := ==($t1, $t3)
     # live vars: $t0, $t5, $t12
 30: if ($t12) goto 31 else goto 71
     # live vars: $t0, $t5
 31: label L6
     # live vars: $t0, $t5
 32: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 33: $t23 := 0
     # live vars: $t0, $t5, $t16, $t23
 34: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t5, $t21
 35: $t16 := borrow_local($t5)
     # live vars: $t0, $t5, $t16, $t21
 36: $t23 := 0
     # live vars: $t0, $t5, $t16, $t21, $t23
 37: $t33 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t5, $t21, $t33
 38: $t12 := ==($t21, $t33)
     # live vars: $t0, $t5, $t12
 39: if ($t12) goto 40 else goto 68
     # live vars: $t0, $t5
 40: label L9
     # live vars: $t0, $t5
 41: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 42: $t23 := 1
     # live vars: $t0, $t5, $t16, $t23
 43: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t5, $t21
 44: $t1 := read_ref($t21)
     # live vars: $t0, $t1, $t5
 45: $t16 := borrow_local($t5)
     # live vars: $t0, $t1, $t5, $t16
 46: $t23 := 1
     # live vars: $t0, $t1, $t5, $t16, $t23
 47: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t1, $t5, $t21
 48: $t3 := read_ref($t21)
     # live vars: $t0, $t1, $t3, $t5
 49: $t12 := !=($t1, $t3)
     # live vars: $t0, $t5, $t12
 50: if ($t12) goto 51 else goto 65
     # live vars: $t0, $t5
 51: label L12
     # live vars: $t0, $t5
 52: $t16 := borrow_local($t0)
     # live vars: $t5, $t16
 53: $t23 := 1
     # live vars: $t5, $t16, $t23
 54: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t5, $t21
 55: $t16 := borrow_local($t5)
     # live vars: $t16, $t21
 56: $t23 := 1
     # live vars: $t16, $t21, $t23
 57: $t33 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t21, $t33
 58: $t12 := !=($t21, $t33)
     # live vars: $t12
 59: if ($t12) goto 60 else goto 62
     # live vars:
 60: label L15
     # live vars:
 61: return ()
     # live vars:
 62: label L16
     # live vars:
 63: $t23 := 0
     # live vars: $t23
 64: abort($t23)
     # live vars: $t0, $t5
 65: label L13
     # live vars:
 66: $t23 := 0
     # live vars: $t23
 67: abort($t23)
     # live vars: $t0, $t5
 68: label L10
     # live vars:
 69: $t23 := 0
     # live vars: $t23
 70: abort($t23)
     # live vars: $t0, $t5
 71: label L7
     # live vars:
 72: $t23 := 0
     # live vars: $t23
 73: abort($t23)
     # live vars: $t0, $t5
 74: label L4
     # live vars:
 75: $t23 := 0
     # live vars: $t23
 76: abort($t23)
     # live vars: $t0, $t5
 77: label L1
     # live vars:
 78: $t23 := 0
     # live vars: $t23
 79: abort($t23)
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64 [unused]
     var $t8: u64 [unused]
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3 [unused]
     var $t11: vector<0xc0ffee::m::Test1> [unused]
     var $t12: 0xc0ffee::m::Test1 [unused]
     var $t13: u64 [unused]
     var $t14: u64 [unused]
     var $t15: 0xc0ffee::m::Test1 [unused]
     var $t16: u64 [unused]
     var $t17: u64 [unused]
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1> [unused]
     var $t20: 0xc0ffee::m::Test1 [unused]
     var $t21: u64 [unused]
     var $t22: u64 [unused]
     var $t23: 0xc0ffee::m::Test1 [unused]
     var $t24: u64 [unused]
     var $t25: u64 [unused]
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64 [unused]
     var $t29: bool [unused]
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64 [unused]
     var $t33: bool [unused]
     var $t34: 0xc0ffee::m::Test3 [unused]
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3> [unused]
     var $t37: u64 [unused]
     var $t38: 0xc0ffee::m::Test3 [unused]
     var $t39: &0xc0ffee::m::Test3 [unused]
     var $t40: &vector<0xc0ffee::m::Test3> [unused]
     var $t41: u64 [unused]
     var $t42: u64 [unused]
     var $t43: bool [unused]
     var $t44: &0xc0ffee::m::Test3 [unused]
     var $t45: &vector<0xc0ffee::m::Test3> [unused]
     var $t46: u64 [unused]
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3> [unused]
     var $t49: u64 [unused]
     var $t50: u64 [unused]
     var $t51: bool [unused]
     var $t52: vector<0xc0ffee::m::Test1> [unused]
     var $t53: &0xc0ffee::m::Test3 [unused]
     var $t54: &vector<0xc0ffee::m::Test3> [unused]
     var $t55: u64 [unused]
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3 [unused]
     var $t59: &vector<0xc0ffee::m::Test3> [unused]
     var $t60: u64 [unused]
     var $t61: &vector<0xc0ffee::m::Test1> [unused]
     var $t62: u64 [unused]
     var $t63: bool [unused]
     var $t64: &vector<0xc0ffee::m::Test1> [unused]
     var $t65: &0xc0ffee::m::Test3 [unused]
     var $t66: &vector<0xc0ffee::m::Test3> [unused]
     var $t67: u64 [unused]
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3 [unused]
     var $t70: &vector<0xc0ffee::m::Test3> [unused]
     var $t71: u64 [unused]
     var $t72: u64 [unused]
     # live vars:
  0: $t4 := 1
     # live vars: $t4
  1: $t5 := 2
     # live vars: $t4, $t5
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t3
  3: $t4 := 1
     # live vars: $t3, $t4
  4: $t5 := 2
     # live vars: $t3, $t4, $t5
  5: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t3, $t6
  6: $t2 := vector($t3, $t6)
     # live vars: $t2
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t1
  8: $t0 := vector($t1)
     # live vars: $t0
  9: $t4 := 1
     # live vars: $t0, $t4
 10: $t5 := 2
     # live vars: $t0, $t4, $t5
 11: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t3
 12: $t4 := 1
     # live vars: $t0, $t3, $t4
 13: $t5 := 2
     # live vars: $t0, $t3, $t4, $t5
 14: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t3, $t6
 15: $t2 := vector($t3, $t6)
     # live vars: $t0, $t2
 16: $t1 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t0, $t1
 17: $t4 := 1
     # live vars: $t0, $t1, $t4
 18: $t5 := 2
     # live vars: $t0, $t1, $t4, $t5
 19: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t1, $t3
 20: $t4 := 1
     # live vars: $t0, $t1, $t3, $t4
 21: $t5 := 2
     # live vars: $t0, $t1, $t3, $t4, $t5
 22: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t1, $t3, $t6
 23: $t2 := vector($t3, $t6)
     # live vars: $t0, $t1, $t2
 24: $t18 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t0, $t1, $t18
 25: $t9 := vector($t1, $t18)
     # live vars: $t0, $t9
 26: $t27 := copy($t0)
     # live vars: $t0, $t9, $t27
 27: $t26 := !=($t27, $t9)
     # live vars: $t0, $t9, $t26
 28: if ($t26) goto 29 else goto 95
     # live vars: $t0, $t9
 29: label L0
     # live vars: $t0, $t9
 30: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 31: $t31 := borrow_local($t9)
     # live vars: $t0, $t9, $t30, $t31
 32: $t26 := !=($t30, $t31)
     # live vars: $t0, $t9, $t26
 33: if ($t26) goto 34 else goto 92
     # live vars: $t0, $t9
 34: label L3
     # live vars: $t0, $t9
 35: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 36: $t4 := 0
     # live vars: $t0, $t4, $t9, $t30
 37: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t9, $t35
 38: $t1 := read_ref($t35)
     # live vars: $t0, $t1, $t9
 39: $t30 := borrow_local($t9)
     # live vars: $t0, $t1, $t9, $t30
 40: $t4 := 0
     # live vars: $t0, $t1, $t4, $t9, $t30
 41: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t1, $t9, $t35
 42: $t18 := read_ref($t35)
     # live vars: $t0, $t1, $t9, $t18
 43: $t26 := ==($t1, $t18)
     # live vars: $t0, $t9, $t26
 44: if ($t26) goto 45 else goto 89
     # live vars: $t0, $t9
 45: label L6
     # live vars: $t0, $t9
 46: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 47: $t4 := 0
     # live vars: $t0, $t4, $t9, $t30
 48: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t9, $t35
 49: $t30 := borrow_local($t9)
     # live vars: $t0, $t9, $t30, $t35
 50: $t4 := 0
     # live vars: $t0, $t4, $t9, $t30, $t35
 51: $t47 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t9, $t35, $t47
 52: $t26 := ==($t35, $t47)
     # live vars: $t0, $t9, $t26
 53: if ($t26) goto 54 else goto 86
     # live vars: $t0, $t9
 54: label L9
     # live vars: $t0, $t9
 55: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 56: $t4 := 0
     # live vars: $t0, $t4, $t9, $t30
 57: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t9, $t35
 58: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
     # live vars: $t0, $t9, $t56
 59: $t2 := read_ref($t56)
     # live vars: $t0, $t2, $t9
 60: $t30 := borrow_local($t9)
     # live vars: $t0, $t2, $t9, $t30
 61: $t4 := 0
     # live vars: $t0, $t2, $t4, $t9, $t30
 62: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t2, $t9, $t35
 63: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
     # live vars: $t0, $t2, $t9, $t56
 64: $t57 := read_ref($t56)
     # live vars: $t0, $t2, $t9, $t57
 65: $t26 := ==($t2, $t57)
     # live vars: $t0, $t9, $t26
 66: if ($t26) goto 67 else goto 83
     # live vars: $t0, $t9
 67: label L12
     # live vars: $t0, $t9
 68: $t30 := borrow_local($t0)
     # live vars: $t9, $t30
 69: $t4 := 0
     # live vars: $t4, $t9, $t30
 70: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t9, $t35
 71: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
     # live vars: $t9, $t56
 72: $t30 := borrow_local($t9)
     # live vars: $t30, $t56
 73: $t4 := 0
     # live vars: $t4, $t30, $t56
 74: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t35, $t56
 75: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t35)
     # live vars: $t56, $t68
 76: $t26 := ==($t56, $t68)
     # live vars: $t26
 77: if ($t26) goto 78 else goto 80
     # live vars:
 78: label L15
     # live vars:
 79: return ()
     # live vars:
 80: label L16
     # live vars:
 81: $t4 := 0
     # live vars: $t4
 82: abort($t4)
     # live vars: $t0, $t9
 83: label L13
     # live vars:
 84: $t4 := 0
     # live vars: $t4
 85: abort($t4)
     # live vars: $t0, $t9
 86: label L10
     # live vars:
 87: $t4 := 0
     # live vars: $t4
 88: abort($t4)
     # live vars: $t0, $t9
 89: label L7
     # live vars:
 90: $t4 := 0
     # live vars: $t4
 91: abort($t4)
     # live vars: $t0, $t9
 92: label L4
     # live vars:
 93: $t4 := 0
     # live vars: $t4
 94: abort($t4)
     # live vars: $t0, $t9
 95: label L1
     # live vars:
 96: $t4 := 0
     # live vars: $t4
 97: abort($t4)
}

============ after FlushWritesProcessor: ================

[variant baseline]
public fun m::test1() {
     var $t0: 0xc0ffee::m::Test1
     var $t1: u64
     var $t2: u64
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64 [unused]
     var $t5: u64 [unused]
     var $t6: bool
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64 [unused]
     var $t9: bool [unused]
     var $t10: &0xc0ffee::m::Test1
     var $t11: &0xc0ffee::m::Test1
     var $t12: u64 [unused]
     var $t13: bool [unused]
     var $t14: u64 [unused]
     var $t15: &0xc0ffee::m::Test1 [unused]
     var $t16: &u64
     var $t17: u64 [unused]
     var $t18: &0xc0ffee::m::Test1 [unused]
     var $t19: &u64 [unused]
     var $t20: u64 [unused]
     var $t21: bool [unused]
     var $t22: &u64 [unused]
     var $t23: &0xc0ffee::m::Test1 [unused]
     var $t24: &u64
     var $t25: &0xc0ffee::m::Test1 [unused]
     var $t26: u64 [unused]
     var $t27: bool [unused]
     var $t28: u64 [unused]
     var $t29: &0xc0ffee::m::Test1 [unused]
     var $t30: &u64 [unused]
     var $t31: u64 [unused]
     var $t32: &0xc0ffee::m::Test1 [unused]
     var $t33: &u64 [unused]
     var $t34: u64 [unused]
     var $t35: bool [unused]
     var $t36: &u64 [unused]
     var $t37: &0xc0ffee::m::Test1 [unused]
     var $t38: &u64 [unused]
     var $t39: &0xc0ffee::m::Test1 [unused]
     var $t40: u64 [unused]
     # live vars:
  0: $t1 := 1
     # live vars: $t1
  1: $t2 := 2
     # flush: $t0
     # live vars: $t1, $t2
  2: $t0 := pack 0xc0ffee::m::Test1($t1, $t2)
     # live vars: $t0
  3: $t1 := 1
     # live vars: $t0, $t1
  4: $t2 := 2
     # flush: $t3
     # live vars: $t0, $t1, $t2
  5: $t3 := pack 0xc0ffee::m::Test1($t1, $t2)
     # live vars: $t0, $t3
  6: $t7 := copy($t0)
     # live vars: $t0, $t3, $t7
  7: $t6 := ==($t7, $t3)
     # live vars: $t0, $t3, $t6
  8: if ($t6) goto 9 else goto 63
     # live vars: $t0, $t3
  9: label L0
     # live vars: $t0, $t3
 10: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 11: $t11 := borrow_local($t3)
     # live vars: $t0, $t3, $t10, $t11
 12: $t6 := ==($t10, $t11)
     # live vars: $t0, $t3, $t6
 13: if ($t6) goto 14 else goto 60
     # live vars: $t0, $t3
 14: label L3
     # live vars: $t0, $t3
 15: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 16: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
     # live vars: $t0, $t3, $t16
 17: $t1 := read_ref($t16)
     # live vars: $t0, $t1, $t3
 18: $t10 := borrow_local($t3)
     # live vars: $t0, $t1, $t3, $t10
 19: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
     # live vars: $t0, $t1, $t3, $t16
 20: $t2 := read_ref($t16)
     # live vars: $t0, $t1, $t2, $t3
 21: $t6 := ==($t1, $t2)
     # live vars: $t0, $t3, $t6
 22: if ($t6) goto 23 else goto 57
     # live vars: $t0, $t3
 23: label L6
     # live vars: $t0, $t3
 24: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 25: $t16 := borrow_field<0xc0ffee::m::Test1>.a($t10)
     # live vars: $t0, $t3, $t16
 26: $t10 := borrow_local($t3)
     # live vars: $t0, $t3, $t10, $t16
 27: $t24 := borrow_field<0xc0ffee::m::Test1>.a($t10)
     # live vars: $t0, $t3, $t16, $t24
 28: $t6 := ==($t16, $t24)
     # live vars: $t0, $t3, $t6
 29: if ($t6) goto 30 else goto 54
     # live vars: $t0, $t3
 30: label L9
     # live vars: $t0, $t3
 31: $t10 := borrow_local($t0)
     # live vars: $t0, $t3, $t10
 32: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
     # live vars: $t0, $t3, $t16
 33: $t1 := read_ref($t16)
     # live vars: $t0, $t1, $t3
 34: $t10 := borrow_local($t3)
     # live vars: $t0, $t1, $t3, $t10
 35: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
     # live vars: $t0, $t1, $t3, $t16
 36: $t2 := read_ref($t16)
     # live vars: $t0, $t1, $t2, $t3
 37: $t6 := ==($t1, $t2)
     # live vars: $t0, $t3, $t6
 38: if ($t6) goto 39 else goto 51
     # live vars: $t0, $t3
 39: label L12
     # live vars: $t0, $t3
 40: $t10 := borrow_local($t0)
     # live vars: $t3, $t10
 41: $t16 := borrow_field<0xc0ffee::m::Test1>.b($t10)
     # live vars: $t3, $t16
 42: $t10 := borrow_local($t3)
     # live vars: $t10, $t16
 43: $t24 := borrow_field<0xc0ffee::m::Test1>.b($t10)
     # live vars: $t16, $t24
 44: $t6 := ==($t16, $t24)
     # live vars: $t6
 45: if ($t6) goto 46 else goto 48
     # live vars:
 46: label L15
     # live vars:
 47: return ()
     # live vars:
 48: label L16
     # live vars:
 49: $t1 := 0
     # live vars: $t1
 50: abort($t1)
     # live vars: $t0, $t3
 51: label L13
     # live vars:
 52: $t1 := 0
     # live vars: $t1
 53: abort($t1)
     # live vars: $t0, $t3
 54: label L10
     # live vars:
 55: $t1 := 0
     # live vars: $t1
 56: abort($t1)
     # live vars: $t0, $t3
 57: label L7
     # live vars:
 58: $t1 := 0
     # live vars: $t1
 59: abort($t1)
     # live vars: $t0, $t3
 60: label L4
     # live vars:
 61: $t1 := 0
     # live vars: $t1
 62: abort($t1)
     # live vars: $t0, $t3
 63: label L1
     # live vars:
 64: $t1 := 0
     # live vars: $t1
 65: abort($t1)
}


[variant baseline]
public fun m::test2() {
     var $t0: 0xc0ffee::m::Test2
     var $t1: vector<u64>
     var $t2: 0xc0ffee::m::Test2
     var $t3: vector<u64> [unused]
     var $t4: bool
     var $t5: 0xc0ffee::m::Test2
     var $t6: u64 [unused]
     var $t7: bool [unused]
     var $t8: &0xc0ffee::m::Test2
     var $t9: &0xc0ffee::m::Test2
     var $t10: u64 [unused]
     var $t11: bool [unused]
     var $t12: vector<u64> [unused]
     var $t13: &0xc0ffee::m::Test2 [unused]
     var $t14: &vector<u64>
     var $t15: vector<u64>
     var $t16: &0xc0ffee::m::Test2 [unused]
     var $t17: &vector<u64> [unused]
     var $t18: u64 [unused]
     var $t19: bool [unused]
     var $t20: &vector<u64> [unused]
     var $t21: &0xc0ffee::m::Test2 [unused]
     var $t22: &vector<u64>
     var $t23: &0xc0ffee::m::Test2 [unused]
     var $t24: u64 [unused]
     var $t25: bool [unused]
     var $t26: u64 [unused]
     var $t27: &u64
     var $t28: &vector<u64> [unused]
     var $t29: &0xc0ffee::m::Test2 [unused]
     var $t30: u64
     var $t31: u64 [unused]
     var $t32: &u64 [unused]
     var $t33: &vector<u64> [unused]
     var $t34: &0xc0ffee::m::Test2 [unused]
     var $t35: u64
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: &u64 [unused]
     var $t39: &vector<u64> [unused]
     var $t40: &0xc0ffee::m::Test2 [unused]
     var $t41: u64 [unused]
     var $t42: &u64
     var $t43: &vector<u64> [unused]
     var $t44: &0xc0ffee::m::Test2 [unused]
     var $t45: u64 [unused]
     var $t46: u64 [unused]
     # live vars:
  0: $t1 := ["1", "2", "3"]
     # flush: $t0
     # live vars: $t1
  1: $t0 := pack 0xc0ffee::m::Test2($t1)
     # live vars: $t0
  2: $t1 := ["1", "2", "3"]
     # flush: $t2
     # live vars: $t0, $t1
  3: $t2 := pack 0xc0ffee::m::Test2($t1)
     # live vars: $t0, $t2
  4: $t5 := copy($t0)
     # live vars: $t0, $t2, $t5
  5: $t4 := ==($t5, $t2)
     # live vars: $t0, $t2, $t4
  6: if ($t4) goto 7 else goto 69
     # live vars: $t0, $t2
  7: label L0
     # live vars: $t0, $t2
  8: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
  9: $t9 := borrow_local($t2)
     # live vars: $t0, $t2, $t8, $t9
 10: $t4 := ==($t8, $t9)
     # live vars: $t0, $t2, $t4
 11: if ($t4) goto 12 else goto 66
     # live vars: $t0, $t2
 12: label L3
     # live vars: $t0, $t2
 13: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
 14: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14
 15: $t1 := read_ref($t14)
     # live vars: $t0, $t1, $t2
 16: $t8 := borrow_local($t2)
     # live vars: $t0, $t1, $t2, $t8
 17: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t1, $t2, $t14
 18: $t15 := read_ref($t14)
     # live vars: $t0, $t1, $t2, $t15
 19: $t4 := ==($t1, $t15)
     # live vars: $t0, $t2, $t4
 20: if ($t4) goto 21 else goto 63
     # live vars: $t0, $t2
 21: label L6
     # live vars: $t0, $t2
 22: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
 23: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14
 24: $t8 := borrow_local($t2)
     # live vars: $t0, $t2, $t8, $t14
 25: $t22 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14, $t22
 26: $t4 := ==($t14, $t22)
     # live vars: $t0, $t2, $t4
 27: if ($t4) goto 28 else goto 60
     # live vars: $t0, $t2
 28: label L9
     # live vars: $t0, $t2
 29: $t8 := borrow_local($t0)
     # live vars: $t0, $t2, $t8
 30: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14
 31: $t30 := 0
     # live vars: $t0, $t2, $t14, $t30
 32: $t27 := vector::borrow<u64>($t14, $t30)
     # live vars: $t0, $t2, $t27
 33: $t30 := read_ref($t27)
     # live vars: $t0, $t2, $t30
 34: $t8 := borrow_local($t2)
     # live vars: $t0, $t2, $t8, $t30
 35: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t0, $t2, $t14, $t30
 36: $t35 := 0
     # live vars: $t0, $t2, $t14, $t30, $t35
 37: $t27 := vector::borrow<u64>($t14, $t35)
     # live vars: $t0, $t2, $t27, $t30
 38: $t35 := read_ref($t27)
     # live vars: $t0, $t2, $t30, $t35
 39: $t4 := ==($t30, $t35)
     # live vars: $t0, $t2, $t4
 40: if ($t4) goto 41 else goto 57
     # live vars: $t0, $t2
 41: label L12
     # live vars: $t0, $t2
 42: $t8 := borrow_local($t0)
     # live vars: $t2, $t8
 43: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t2, $t14
 44: $t30 := 0
     # live vars: $t2, $t14, $t30
 45: $t27 := vector::borrow<u64>($t14, $t30)
     # live vars: $t2, $t27
 46: $t8 := borrow_local($t2)
     # live vars: $t8, $t27
 47: $t14 := borrow_field<0xc0ffee::m::Test2>.a($t8)
     # live vars: $t14, $t27
 48: $t30 := 0
     # live vars: $t14, $t27, $t30
 49: $t42 := vector::borrow<u64>($t14, $t30)
     # live vars: $t27, $t42
 50: $t4 := ==($t27, $t42)
     # live vars: $t4
 51: if ($t4) goto 52 else goto 54
     # live vars:
 52: label L15
     # live vars:
 53: return ()
     # live vars:
 54: label L16
     # live vars:
 55: $t30 := 0
     # live vars: $t30
 56: abort($t30)
     # live vars: $t0, $t2
 57: label L13
     # live vars:
 58: $t30 := 0
     # live vars: $t30
 59: abort($t30)
     # live vars: $t0, $t2
 60: label L10
     # live vars:
 61: $t30 := 0
     # live vars: $t30
 62: abort($t30)
     # live vars: $t0, $t2
 63: label L7
     # live vars:
 64: $t30 := 0
     # live vars: $t30
 65: abort($t30)
     # live vars: $t0, $t2
 66: label L4
     # live vars:
 67: $t30 := 0
     # live vars: $t30
 68: abort($t30)
     # live vars: $t0, $t2
 69: label L1
     # live vars:
 70: $t30 := 0
     # live vars: $t30
 71: abort($t30)
}


[variant baseline]
public fun m::test3() {
     var $t0: 0xc0ffee::m::Test3
     var $t1: vector<0xc0ffee::m::Test1>
     var $t2: 0xc0ffee::m::Test1
     var $t3: u64
     var $t4: u64
     var $t5: 0xc0ffee::m::Test3
     var $t6: vector<0xc0ffee::m::Test1> [unused]
     var $t7: 0xc0ffee::m::Test1 [unused]
     var $t8: u64 [unused]
     var $t9: u64 [unused]
     var $t10: 0xc0ffee::m::Test1
     var $t11: u64 [unused]
     var $t12: u64 [unused]
     var $t13: bool
     var $t14: 0xc0ffee::m::Test3
     var $t15: u64 [unused]
     var $t16: bool [unused]
     var $t17: &0xc0ffee::m::Test3
     var $t18: &0xc0ffee::m::Test3
     var $t19: u64 [unused]
     var $t20: bool [unused]
     var $t21: vector<0xc0ffee::m::Test1> [unused]
     var $t22: &0xc0ffee::m::Test3 [unused]
     var $t23: &vector<0xc0ffee::m::Test1>
     var $t24: vector<0xc0ffee::m::Test1>
     var $t25: &0xc0ffee::m::Test3 [unused]
     var $t26: &vector<0xc0ffee::m::Test1> [unused]
     var $t27: u64 [unused]
     var $t28: bool [unused]
     var $t29: &vector<0xc0ffee::m::Test1> [unused]
     var $t30: &0xc0ffee::m::Test3 [unused]
     var $t31: &vector<0xc0ffee::m::Test1>
     var $t32: &0xc0ffee::m::Test3 [unused]
     var $t33: u64 [unused]
     var $t34: bool [unused]
     var $t35: 0xc0ffee::m::Test1 [unused]
     var $t36: &0xc0ffee::m::Test1
     var $t37: &vector<0xc0ffee::m::Test1> [unused]
     var $t38: &0xc0ffee::m::Test3 [unused]
     var $t39: u64 [unused]
     var $t40: 0xc0ffee::m::Test1 [unused]
     var $t41: &0xc0ffee::m::Test1 [unused]
     var $t42: &vector<0xc0ffee::m::Test1> [unused]
     var $t43: &0xc0ffee::m::Test3 [unused]
     var $t44: u64 [unused]
     var $t45: u64 [unused]
     var $t46: bool [unused]
     var $t47: &0xc0ffee::m::Test1 [unused]
     var $t48: &vector<0xc0ffee::m::Test1> [unused]
     var $t49: &0xc0ffee::m::Test3 [unused]
     var $t50: u64 [unused]
     var $t51: &0xc0ffee::m::Test1
     var $t52: &vector<0xc0ffee::m::Test1> [unused]
     var $t53: &0xc0ffee::m::Test3 [unused]
     var $t54: u64 [unused]
     var $t55: u64 [unused]
     # live vars:
  0: $t3 := 1
     # live vars: $t3
  1: $t4 := 2
     # live vars: $t3, $t4
  2: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t2
  3: $t1 := vector($t2)
     # flush: $t0
     # live vars: $t1
  4: $t0 := pack 0xc0ffee::m::Test3($t1)
     # live vars: $t0
  5: $t3 := 1
     # live vars: $t0, $t3
  6: $t4 := 2
     # live vars: $t0, $t3, $t4
  7: $t2 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t0, $t2
  8: $t3 := 1
     # live vars: $t0, $t2, $t3
  9: $t4 := 2
     # live vars: $t0, $t2, $t3, $t4
 10: $t10 := pack 0xc0ffee::m::Test1($t3, $t4)
     # live vars: $t0, $t2, $t10
 11: $t1 := vector($t2, $t10)
     # flush: $t5
     # live vars: $t0, $t1
 12: $t5 := pack 0xc0ffee::m::Test3($t1)
     # live vars: $t0, $t5
 13: $t14 := copy($t0)
     # live vars: $t0, $t5, $t14
 14: $t13 := !=($t14, $t5)
     # live vars: $t0, $t5, $t13
 15: if ($t13) goto 16 else goto 78
     # live vars: $t0, $t5
 16: label L0
     # live vars: $t0, $t5
 17: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 18: $t18 := borrow_local($t5)
     # live vars: $t0, $t5, $t17, $t18
 19: $t13 := !=($t17, $t18)
     # live vars: $t0, $t5, $t13
 20: if ($t13) goto 21 else goto 75
     # live vars: $t0, $t5
 21: label L3
     # live vars: $t0, $t5
 22: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 23: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t5, $t23
 24: $t1 := read_ref($t23)
     # live vars: $t0, $t1, $t5
 25: $t17 := borrow_local($t5)
     # live vars: $t0, $t1, $t5, $t17
 26: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t1, $t5, $t23
 27: $t24 := read_ref($t23)
     # live vars: $t0, $t1, $t5, $t24
 28: $t13 := !=($t1, $t24)
     # live vars: $t0, $t5, $t13
 29: if ($t13) goto 30 else goto 72
     # live vars: $t0, $t5
 30: label L6
     # live vars: $t0, $t5
 31: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 32: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t5, $t23
 33: $t17 := borrow_local($t5)
     # live vars: $t0, $t5, $t17, $t23
 34: $t31 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t5, $t23, $t31
 35: $t13 := !=($t23, $t31)
     # live vars: $t0, $t5, $t13
 36: if ($t13) goto 37 else goto 69
     # live vars: $t0, $t5
 37: label L9
     # live vars: $t0, $t5
 38: $t17 := borrow_local($t0)
     # live vars: $t0, $t5, $t17
 39: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t5, $t23
 40: $t3 := 0
     # live vars: $t0, $t3, $t5, $t23
 41: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
     # live vars: $t0, $t5, $t36
 42: $t2 := read_ref($t36)
     # live vars: $t0, $t2, $t5
 43: $t17 := borrow_local($t5)
     # live vars: $t0, $t2, $t5, $t17
 44: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t0, $t2, $t5, $t23
 45: $t3 := 0
     # live vars: $t0, $t2, $t3, $t5, $t23
 46: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
     # live vars: $t0, $t2, $t5, $t36
 47: $t10 := read_ref($t36)
     # live vars: $t0, $t2, $t5, $t10
 48: $t13 := ==($t2, $t10)
     # live vars: $t0, $t5, $t13
 49: if ($t13) goto 50 else goto 66
     # live vars: $t0, $t5
 50: label L12
     # live vars: $t0, $t5
 51: $t17 := borrow_local($t0)
     # live vars: $t5, $t17
 52: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t5, $t23
 53: $t3 := 0
     # live vars: $t3, $t5, $t23
 54: $t36 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
     # live vars: $t5, $t36
 55: $t17 := borrow_local($t5)
     # live vars: $t17, $t36
 56: $t23 := borrow_field<0xc0ffee::m::Test3>.a($t17)
     # live vars: $t23, $t36
 57: $t3 := 0
     # live vars: $t3, $t23, $t36
 58: $t51 := vector::borrow<0xc0ffee::m::Test1>($t23, $t3)
     # live vars: $t36, $t51
 59: $t13 := ==($t36, $t51)
     # live vars: $t13
 60: if ($t13) goto 61 else goto 63
     # live vars:
 61: label L15
     # live vars:
 62: return ()
     # live vars:
 63: label L16
     # live vars:
 64: $t3 := 0
     # live vars: $t3
 65: abort($t3)
     # live vars: $t0, $t5
 66: label L13
     # live vars:
 67: $t3 := 0
     # live vars: $t3
 68: abort($t3)
     # live vars: $t0, $t5
 69: label L10
     # live vars:
 70: $t3 := 0
     # live vars: $t3
 71: abort($t3)
     # live vars: $t0, $t5
 72: label L7
     # live vars:
 73: $t3 := 0
     # live vars: $t3
 74: abort($t3)
     # live vars: $t0, $t5
 75: label L4
     # live vars:
 76: $t3 := 0
     # live vars: $t3
 77: abort($t3)
     # live vars: $t0, $t5
 78: label L1
     # live vars:
 79: $t3 := 0
     # live vars: $t3
 80: abort($t3)
}


[variant baseline]
public fun m::test4() {
     var $t0: vector<0xc0ffee::m::Test1>
     var $t1: 0xc0ffee::m::Test1
     var $t2: u64
     var $t3: u64
     var $t4: 0xc0ffee::m::Test1
     var $t5: u64 [unused]
     var $t6: u64 [unused]
     var $t7: 0xc0ffee::m::Test1
     var $t8: u64 [unused]
     var $t9: u64 [unused]
     var $t10: vector<0xc0ffee::m::Test1>
     var $t11: 0xc0ffee::m::Test1 [unused]
     var $t12: u64 [unused]
     var $t13: u64 [unused]
     var $t14: 0xc0ffee::m::Test1 [unused]
     var $t15: u64 [unused]
     var $t16: u64 [unused]
     var $t17: 0xc0ffee::m::Test1 [unused]
     var $t18: u64 [unused]
     var $t19: u64 [unused]
     var $t20: bool
     var $t21: vector<0xc0ffee::m::Test1>
     var $t22: u64 [unused]
     var $t23: bool [unused]
     var $t24: &vector<0xc0ffee::m::Test1>
     var $t25: &vector<0xc0ffee::m::Test1>
     var $t26: u64 [unused]
     var $t27: bool [unused]
     var $t28: 0xc0ffee::m::Test1 [unused]
     var $t29: &0xc0ffee::m::Test1
     var $t30: &vector<0xc0ffee::m::Test1> [unused]
     var $t31: u64 [unused]
     var $t32: 0xc0ffee::m::Test1 [unused]
     var $t33: &0xc0ffee::m::Test1 [unused]
     var $t34: &vector<0xc0ffee::m::Test1> [unused]
     var $t35: u64 [unused]
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: &0xc0ffee::m::Test1 [unused]
     var $t39: &vector<0xc0ffee::m::Test1> [unused]
     var $t40: u64 [unused]
     var $t41: &0xc0ffee::m::Test1
     var $t42: &vector<0xc0ffee::m::Test1> [unused]
     var $t43: u64 [unused]
     var $t44: u64 [unused]
     var $t45: bool [unused]
     var $t46: 0xc0ffee::m::Test1 [unused]
     var $t47: &0xc0ffee::m::Test1 [unused]
     var $t48: &vector<0xc0ffee::m::Test1> [unused]
     var $t49: u64 [unused]
     var $t50: 0xc0ffee::m::Test1 [unused]
     var $t51: &0xc0ffee::m::Test1 [unused]
     var $t52: &vector<0xc0ffee::m::Test1> [unused]
     var $t53: u64 [unused]
     var $t54: u64 [unused]
     var $t55: bool [unused]
     var $t56: &0xc0ffee::m::Test1 [unused]
     var $t57: &vector<0xc0ffee::m::Test1> [unused]
     var $t58: u64 [unused]
     var $t59: &0xc0ffee::m::Test1 [unused]
     var $t60: &vector<0xc0ffee::m::Test1> [unused]
     var $t61: u64 [unused]
     var $t62: u64 [unused]
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t3 := 2
     # live vars: $t2, $t3
  2: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1
  3: $t2 := 1
     # live vars: $t1, $t2
  4: $t3 := 2
     # live vars: $t1, $t2, $t3
  5: $t4 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t1, $t4
  6: $t2 := 1
     # live vars: $t1, $t2, $t4
  7: $t3 := 2
     # live vars: $t1, $t2, $t3, $t4
  8: $t7 := pack 0xc0ffee::m::Test1($t2, $t3)
     # flush: $t0
     # live vars: $t1, $t4, $t7
  9: $t0 := vector($t1, $t4, $t7)
     # live vars: $t0
 10: $t2 := 1
     # live vars: $t0, $t2
 11: $t3 := 2
     # live vars: $t0, $t2, $t3
 12: $t1 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t0, $t1
 13: $t2 := 1
     # live vars: $t0, $t1, $t2
 14: $t3 := 2
     # live vars: $t0, $t1, $t2, $t3
 15: $t4 := pack 0xc0ffee::m::Test1($t2, $t3)
     # live vars: $t0, $t1, $t4
 16: $t2 := 1
     # live vars: $t0, $t1, $t2, $t4
 17: $t3 := 2
     # live vars: $t0, $t1, $t2, $t3, $t4
 18: $t7 := pack 0xc0ffee::m::Test1($t2, $t3)
     # flush: $t10
     # live vars: $t0, $t1, $t4, $t7
 19: $t10 := vector($t1, $t4, $t7)
     # live vars: $t0, $t10
 20: $t21 := copy($t0)
     # live vars: $t0, $t10, $t21
 21: $t20 := ==($t21, $t10)
     # live vars: $t0, $t10, $t20
 22: if ($t20) goto 23 else goto 85
     # live vars: $t0, $t10
 23: label L0
     # live vars: $t0, $t10
 24: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 25: $t25 := borrow_local($t10)
     # live vars: $t0, $t10, $t24, $t25
 26: $t20 := ==($t24, $t25)
     # live vars: $t0, $t10, $t20
 27: if ($t20) goto 28 else goto 82
     # live vars: $t0, $t10
 28: label L3
     # live vars: $t0, $t10
 29: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 30: $t2 := 0
     # live vars: $t0, $t2, $t10, $t24
 31: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t10, $t29
 32: $t1 := read_ref($t29)
     # live vars: $t0, $t1, $t10
 33: $t24 := borrow_local($t10)
     # live vars: $t0, $t1, $t10, $t24
 34: $t2 := 0
     # live vars: $t0, $t1, $t2, $t10, $t24
 35: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t1, $t10, $t29
 36: $t4 := read_ref($t29)
     # live vars: $t0, $t1, $t4, $t10
 37: $t20 := ==($t1, $t4)
     # live vars: $t0, $t10, $t20
 38: if ($t20) goto 39 else goto 79
     # live vars: $t0, $t10
 39: label L6
     # live vars: $t0, $t10
 40: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 41: $t2 := 0
     # live vars: $t0, $t2, $t10, $t24
 42: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t10, $t29
 43: $t24 := borrow_local($t10)
     # live vars: $t0, $t10, $t24, $t29
 44: $t2 := 0
     # live vars: $t0, $t2, $t10, $t24, $t29
 45: $t41 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t10, $t29, $t41
 46: $t20 := ==($t29, $t41)
     # live vars: $t0, $t10, $t20
 47: if ($t20) goto 48 else goto 76
     # live vars: $t0, $t10
 48: label L9
     # live vars: $t0, $t10
 49: $t24 := borrow_local($t0)
     # live vars: $t0, $t10, $t24
 50: $t2 := 1
     # live vars: $t0, $t2, $t10, $t24
 51: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t10, $t29
 52: $t1 := read_ref($t29)
     # live vars: $t0, $t1, $t10
 53: $t24 := borrow_local($t10)
     # live vars: $t0, $t1, $t10, $t24
 54: $t2 := 1
     # live vars: $t0, $t1, $t2, $t10, $t24
 55: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t0, $t1, $t10, $t29
 56: $t4 := read_ref($t29)
     # live vars: $t0, $t1, $t4, $t10
 57: $t20 := ==($t1, $t4)
     # live vars: $t0, $t10, $t20
 58: if ($t20) goto 59 else goto 73
     # live vars: $t0, $t10
 59: label L12
     # live vars: $t0, $t10
 60: $t24 := borrow_local($t0)
     # live vars: $t10, $t24
 61: $t2 := 1
     # live vars: $t2, $t10, $t24
 62: $t29 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t10, $t29
 63: $t24 := borrow_local($t10)
     # live vars: $t24, $t29
 64: $t2 := 1
     # live vars: $t2, $t24, $t29
 65: $t41 := vector::borrow<0xc0ffee::m::Test1>($t24, $t2)
     # live vars: $t29, $t41
 66: $t20 := ==($t29, $t41)
     # live vars: $t20
 67: if ($t20) goto 68 else goto 70
     # live vars:
 68: label L15
     # live vars:
 69: return ()
     # live vars:
 70: label L16
     # live vars:
 71: $t2 := 0
     # live vars: $t2
 72: abort($t2)
     # live vars: $t0, $t10
 73: label L13
     # live vars:
 74: $t2 := 0
     # live vars: $t2
 75: abort($t2)
     # live vars: $t0, $t10
 76: label L10
     # live vars:
 77: $t2 := 0
     # live vars: $t2
 78: abort($t2)
     # live vars: $t0, $t10
 79: label L7
     # live vars:
 80: $t2 := 0
     # live vars: $t2
 81: abort($t2)
     # live vars: $t0, $t10
 82: label L4
     # live vars:
 83: $t2 := 0
     # live vars: $t2
 84: abort($t2)
     # live vars: $t0, $t10
 85: label L1
     # live vars:
 86: $t2 := 0
     # live vars: $t2
 87: abort($t2)
}


[variant baseline]
public fun m::test5() {
     var $t0: vector<0xc0ffee::m::Test2>
     var $t1: 0xc0ffee::m::Test2
     var $t2: vector<u64>
     var $t3: 0xc0ffee::m::Test2
     var $t4: vector<u64> [unused]
     var $t5: vector<0xc0ffee::m::Test2>
     var $t6: 0xc0ffee::m::Test2 [unused]
     var $t7: vector<u64> [unused]
     var $t8: 0xc0ffee::m::Test2 [unused]
     var $t9: vector<u64> [unused]
     var $t10: 0xc0ffee::m::Test2
     var $t11: vector<u64> [unused]
     var $t12: bool
     var $t13: vector<0xc0ffee::m::Test2>
     var $t14: u64 [unused]
     var $t15: bool [unused]
     var $t16: &vector<0xc0ffee::m::Test2>
     var $t17: &vector<0xc0ffee::m::Test2>
     var $t18: u64 [unused]
     var $t19: bool [unused]
     var $t20: 0xc0ffee::m::Test2 [unused]
     var $t21: &0xc0ffee::m::Test2
     var $t22: &vector<0xc0ffee::m::Test2> [unused]
     var $t23: u64
     var $t24: 0xc0ffee::m::Test2 [unused]
     var $t25: &0xc0ffee::m::Test2 [unused]
     var $t26: &vector<0xc0ffee::m::Test2> [unused]
     var $t27: u64 [unused]
     var $t28: u64 [unused]
     var $t29: bool [unused]
     var $t30: &0xc0ffee::m::Test2 [unused]
     var $t31: &vector<0xc0ffee::m::Test2> [unused]
     var $t32: u64 [unused]
     var $t33: &0xc0ffee::m::Test2
     var $t34: &vector<0xc0ffee::m::Test2> [unused]
     var $t35: u64 [unused]
     var $t36: u64 [unused]
     var $t37: bool [unused]
     var $t38: 0xc0ffee::m::Test2 [unused]
     var $t39: &0xc0ffee::m::Test2 [unused]
     var $t40: &vector<0xc0ffee::m::Test2> [unused]
     var $t41: u64 [unused]
     var $t42: 0xc0ffee::m::Test2 [unused]
     var $t43: &0xc0ffee::m::Test2 [unused]
     var $t44: &vector<0xc0ffee::m::Test2> [unused]
     var $t45: u64 [unused]
     var $t46: u64 [unused]
     var $t47: bool [unused]
     var $t48: &0xc0ffee::m::Test2 [unused]
     var $t49: &vector<0xc0ffee::m::Test2> [unused]
     var $t50: u64 [unused]
     var $t51: &0xc0ffee::m::Test2 [unused]
     var $t52: &vector<0xc0ffee::m::Test2> [unused]
     var $t53: u64 [unused]
     var $t54: u64 [unused]
     # live vars:
  0: $t2 := ["1", "2", "3"]
     # live vars: $t2
  1: $t1 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t1
  2: $t2 := ["1", "2", "3"]
     # live vars: $t1, $t2
  3: $t3 := pack 0xc0ffee::m::Test2($t2)
     # flush: $t0
     # live vars: $t1, $t3
  4: $t0 := vector($t1, $t3)
     # live vars: $t0
  5: $t2 := ["1", "2", "3"]
     # live vars: $t0, $t2
  6: $t1 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t0, $t1
  7: $t2 := ["2", "2", "2"]
     # live vars: $t0, $t1, $t2
  8: $t3 := pack 0xc0ffee::m::Test2($t2)
     # live vars: $t0, $t1, $t3
  9: $t2 := ["1", "2", "3"]
     # live vars: $t0, $t1, $t2, $t3
 10: $t10 := pack 0xc0ffee::m::Test2($t2)
     # flush: $t5
     # live vars: $t0, $t1, $t3, $t10
 11: $t5 := vector($t1, $t3, $t10)
     # live vars: $t0, $t5
 12: $t13 := copy($t0)
     # live vars: $t0, $t5, $t13
 13: $t12 := !=($t13, $t5)
     # live vars: $t0, $t5, $t12
 14: if ($t12) goto 15 else goto 77
     # live vars: $t0, $t5
 15: label L0
     # live vars: $t0, $t5
 16: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 17: $t17 := borrow_local($t5)
     # live vars: $t0, $t5, $t16, $t17
 18: $t12 := !=($t16, $t17)
     # live vars: $t0, $t5, $t12
 19: if ($t12) goto 20 else goto 74
     # live vars: $t0, $t5
 20: label L3
     # live vars: $t0, $t5
 21: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 22: $t23 := 0
     # live vars: $t0, $t5, $t16, $t23
 23: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t5, $t21
 24: $t1 := read_ref($t21)
     # live vars: $t0, $t1, $t5
 25: $t16 := borrow_local($t5)
     # live vars: $t0, $t1, $t5, $t16
 26: $t23 := 0
     # live vars: $t0, $t1, $t5, $t16, $t23
 27: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t1, $t5, $t21
 28: $t3 := read_ref($t21)
     # live vars: $t0, $t1, $t3, $t5
 29: $t12 := ==($t1, $t3)
     # live vars: $t0, $t5, $t12
 30: if ($t12) goto 31 else goto 71
     # live vars: $t0, $t5
 31: label L6
     # live vars: $t0, $t5
 32: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 33: $t23 := 0
     # live vars: $t0, $t5, $t16, $t23
 34: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t5, $t21
 35: $t16 := borrow_local($t5)
     # live vars: $t0, $t5, $t16, $t21
 36: $t23 := 0
     # live vars: $t0, $t5, $t16, $t21, $t23
 37: $t33 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t5, $t21, $t33
 38: $t12 := ==($t21, $t33)
     # live vars: $t0, $t5, $t12
 39: if ($t12) goto 40 else goto 68
     # live vars: $t0, $t5
 40: label L9
     # live vars: $t0, $t5
 41: $t16 := borrow_local($t0)
     # live vars: $t0, $t5, $t16
 42: $t23 := 1
     # live vars: $t0, $t5, $t16, $t23
 43: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t5, $t21
 44: $t1 := read_ref($t21)
     # live vars: $t0, $t1, $t5
 45: $t16 := borrow_local($t5)
     # live vars: $t0, $t1, $t5, $t16
 46: $t23 := 1
     # live vars: $t0, $t1, $t5, $t16, $t23
 47: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t0, $t1, $t5, $t21
 48: $t3 := read_ref($t21)
     # live vars: $t0, $t1, $t3, $t5
 49: $t12 := !=($t1, $t3)
     # live vars: $t0, $t5, $t12
 50: if ($t12) goto 51 else goto 65
     # live vars: $t0, $t5
 51: label L12
     # live vars: $t0, $t5
 52: $t16 := borrow_local($t0)
     # live vars: $t5, $t16
 53: $t23 := 1
     # live vars: $t5, $t16, $t23
 54: $t21 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t5, $t21
 55: $t16 := borrow_local($t5)
     # live vars: $t16, $t21
 56: $t23 := 1
     # live vars: $t16, $t21, $t23
 57: $t33 := vector::borrow<0xc0ffee::m::Test2>($t16, $t23)
     # live vars: $t21, $t33
 58: $t12 := !=($t21, $t33)
     # live vars: $t12
 59: if ($t12) goto 60 else goto 62
     # live vars:
 60: label L15
     # live vars:
 61: return ()
     # live vars:
 62: label L16
     # live vars:
 63: $t23 := 0
     # live vars: $t23
 64: abort($t23)
     # live vars: $t0, $t5
 65: label L13
     # live vars:
 66: $t23 := 0
     # live vars: $t23
 67: abort($t23)
     # live vars: $t0, $t5
 68: label L10
     # live vars:
 69: $t23 := 0
     # live vars: $t23
 70: abort($t23)
     # live vars: $t0, $t5
 71: label L7
     # live vars:
 72: $t23 := 0
     # live vars: $t23
 73: abort($t23)
     # live vars: $t0, $t5
 74: label L4
     # live vars:
 75: $t23 := 0
     # live vars: $t23
 76: abort($t23)
     # live vars: $t0, $t5
 77: label L1
     # live vars:
 78: $t23 := 0
     # live vars: $t23
 79: abort($t23)
}


[variant baseline]
public fun m::test6() {
     var $t0: vector<0xc0ffee::m::Test3>
     var $t1: 0xc0ffee::m::Test3
     var $t2: vector<0xc0ffee::m::Test1>
     var $t3: 0xc0ffee::m::Test1
     var $t4: u64
     var $t5: u64
     var $t6: 0xc0ffee::m::Test1
     var $t7: u64 [unused]
     var $t8: u64 [unused]
     var $t9: vector<0xc0ffee::m::Test3>
     var $t10: 0xc0ffee::m::Test3 [unused]
     var $t11: vector<0xc0ffee::m::Test1> [unused]
     var $t12: 0xc0ffee::m::Test1 [unused]
     var $t13: u64 [unused]
     var $t14: u64 [unused]
     var $t15: 0xc0ffee::m::Test1 [unused]
     var $t16: u64 [unused]
     var $t17: u64 [unused]
     var $t18: 0xc0ffee::m::Test3
     var $t19: vector<0xc0ffee::m::Test1> [unused]
     var $t20: 0xc0ffee::m::Test1 [unused]
     var $t21: u64 [unused]
     var $t22: u64 [unused]
     var $t23: 0xc0ffee::m::Test1 [unused]
     var $t24: u64 [unused]
     var $t25: u64 [unused]
     var $t26: bool
     var $t27: vector<0xc0ffee::m::Test3>
     var $t28: u64 [unused]
     var $t29: bool [unused]
     var $t30: &vector<0xc0ffee::m::Test3>
     var $t31: &vector<0xc0ffee::m::Test3>
     var $t32: u64 [unused]
     var $t33: bool [unused]
     var $t34: 0xc0ffee::m::Test3 [unused]
     var $t35: &0xc0ffee::m::Test3
     var $t36: &vector<0xc0ffee::m::Test3> [unused]
     var $t37: u64 [unused]
     var $t38: 0xc0ffee::m::Test3 [unused]
     var $t39: &0xc0ffee::m::Test3 [unused]
     var $t40: &vector<0xc0ffee::m::Test3> [unused]
     var $t41: u64 [unused]
     var $t42: u64 [unused]
     var $t43: bool [unused]
     var $t44: &0xc0ffee::m::Test3 [unused]
     var $t45: &vector<0xc0ffee::m::Test3> [unused]
     var $t46: u64 [unused]
     var $t47: &0xc0ffee::m::Test3
     var $t48: &vector<0xc0ffee::m::Test3> [unused]
     var $t49: u64 [unused]
     var $t50: u64 [unused]
     var $t51: bool [unused]
     var $t52: vector<0xc0ffee::m::Test1> [unused]
     var $t53: &0xc0ffee::m::Test3 [unused]
     var $t54: &vector<0xc0ffee::m::Test3> [unused]
     var $t55: u64 [unused]
     var $t56: &vector<0xc0ffee::m::Test1>
     var $t57: vector<0xc0ffee::m::Test1>
     var $t58: &0xc0ffee::m::Test3 [unused]
     var $t59: &vector<0xc0ffee::m::Test3> [unused]
     var $t60: u64 [unused]
     var $t61: &vector<0xc0ffee::m::Test1> [unused]
     var $t62: u64 [unused]
     var $t63: bool [unused]
     var $t64: &vector<0xc0ffee::m::Test1> [unused]
     var $t65: &0xc0ffee::m::Test3 [unused]
     var $t66: &vector<0xc0ffee::m::Test3> [unused]
     var $t67: u64 [unused]
     var $t68: &vector<0xc0ffee::m::Test1>
     var $t69: &0xc0ffee::m::Test3 [unused]
     var $t70: &vector<0xc0ffee::m::Test3> [unused]
     var $t71: u64 [unused]
     var $t72: u64 [unused]
     # live vars:
  0: $t4 := 1
     # live vars: $t4
  1: $t5 := 2
     # live vars: $t4, $t5
  2: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t3
  3: $t4 := 1
     # live vars: $t3, $t4
  4: $t5 := 2
     # live vars: $t3, $t4, $t5
  5: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t3, $t6
  6: $t2 := vector($t3, $t6)
     # live vars: $t2
  7: $t1 := pack 0xc0ffee::m::Test3($t2)
     # flush: $t0
     # live vars: $t1
  8: $t0 := vector($t1)
     # live vars: $t0
  9: $t4 := 1
     # live vars: $t0, $t4
 10: $t5 := 2
     # live vars: $t0, $t4, $t5
 11: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t3
 12: $t4 := 1
     # live vars: $t0, $t3, $t4
 13: $t5 := 2
     # live vars: $t0, $t3, $t4, $t5
 14: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t3, $t6
 15: $t2 := vector($t3, $t6)
     # live vars: $t0, $t2
 16: $t1 := pack 0xc0ffee::m::Test3($t2)
     # live vars: $t0, $t1
 17: $t4 := 1
     # live vars: $t0, $t1, $t4
 18: $t5 := 2
     # live vars: $t0, $t1, $t4, $t5
 19: $t3 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t1, $t3
 20: $t4 := 1
     # live vars: $t0, $t1, $t3, $t4
 21: $t5 := 2
     # live vars: $t0, $t1, $t3, $t4, $t5
 22: $t6 := pack 0xc0ffee::m::Test1($t4, $t5)
     # live vars: $t0, $t1, $t3, $t6
 23: $t2 := vector($t3, $t6)
     # live vars: $t0, $t1, $t2
 24: $t18 := pack 0xc0ffee::m::Test3($t2)
     # flush: $t9
     # live vars: $t0, $t1, $t18
 25: $t9 := vector($t1, $t18)
     # live vars: $t0, $t9
 26: $t27 := copy($t0)
     # live vars: $t0, $t9, $t27
 27: $t26 := !=($t27, $t9)
     # live vars: $t0, $t9, $t26
 28: if ($t26) goto 29 else goto 95
     # live vars: $t0, $t9
 29: label L0
     # live vars: $t0, $t9
 30: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 31: $t31 := borrow_local($t9)
     # live vars: $t0, $t9, $t30, $t31
 32: $t26 := !=($t30, $t31)
     # live vars: $t0, $t9, $t26
 33: if ($t26) goto 34 else goto 92
     # live vars: $t0, $t9
 34: label L3
     # live vars: $t0, $t9
 35: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 36: $t4 := 0
     # live vars: $t0, $t4, $t9, $t30
 37: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t9, $t35
 38: $t1 := read_ref($t35)
     # live vars: $t0, $t1, $t9
 39: $t30 := borrow_local($t9)
     # live vars: $t0, $t1, $t9, $t30
 40: $t4 := 0
     # live vars: $t0, $t1, $t4, $t9, $t30
 41: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t1, $t9, $t35
 42: $t18 := read_ref($t35)
     # live vars: $t0, $t1, $t9, $t18
 43: $t26 := ==($t1, $t18)
     # live vars: $t0, $t9, $t26
 44: if ($t26) goto 45 else goto 89
     # live vars: $t0, $t9
 45: label L6
     # live vars: $t0, $t9
 46: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 47: $t4 := 0
     # live vars: $t0, $t4, $t9, $t30
 48: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t9, $t35
 49: $t30 := borrow_local($t9)
     # live vars: $t0, $t9, $t30, $t35
 50: $t4 := 0
     # live vars: $t0, $t4, $t9, $t30, $t35
 51: $t47 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t9, $t35, $t47
 52: $t26 := ==($t35, $t47)
     # live vars: $t0, $t9, $t26
 53: if ($t26) goto 54 else goto 86
     # live vars: $t0, $t9
 54: label L9
     # live vars: $t0, $t9
 55: $t30 := borrow_local($t0)
     # live vars: $t0, $t9, $t30
 56: $t4 := 0
     # live vars: $t0, $t4, $t9, $t30
 57: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t9, $t35
 58: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
     # live vars: $t0, $t9, $t56
 59: $t2 := read_ref($t56)
     # live vars: $t0, $t2, $t9
 60: $t30 := borrow_local($t9)
     # live vars: $t0, $t2, $t9, $t30
 61: $t4 := 0
     # live vars: $t0, $t2, $t4, $t9, $t30
 62: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t0, $t2, $t9, $t35
 63: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
     # live vars: $t0, $t2, $t9, $t56
 64: $t57 := read_ref($t56)
     # live vars: $t0, $t2, $t9, $t57
 65: $t26 := ==($t2, $t57)
     # live vars: $t0, $t9, $t26
 66: if ($t26) goto 67 else goto 83
     # live vars: $t0, $t9
 67: label L12
     # live vars: $t0, $t9
 68: $t30 := borrow_local($t0)
     # live vars: $t9, $t30
 69: $t4 := 0
     # live vars: $t4, $t9, $t30
 70: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t9, $t35
 71: $t56 := borrow_field<0xc0ffee::m::Test3>.a($t35)
     # live vars: $t9, $t56
 72: $t30 := borrow_local($t9)
     # live vars: $t30, $t56
 73: $t4 := 0
     # live vars: $t4, $t30, $t56
 74: $t35 := vector::borrow<0xc0ffee::m::Test3>($t30, $t4)
     # live vars: $t35, $t56
 75: $t68 := borrow_field<0xc0ffee::m::Test3>.a($t35)
     # live vars: $t56, $t68
 76: $t26 := ==($t56, $t68)
     # live vars: $t26
 77: if ($t26) goto 78 else goto 80
     # live vars:
 78: label L15
     # live vars:
 79: return ()
     # live vars:
 80: label L16
     # live vars:
 81: $t4 := 0
     # live vars: $t4
 82: abort($t4)
     # live vars: $t0, $t9
 83: label L13
     # live vars:
 84: $t4 := 0
     # live vars: $t4
 85: abort($t4)
     # live vars: $t0, $t9
 86: label L10
     # live vars:
 87: $t4 := 0
     # live vars: $t4
 88: abort($t4)
     # live vars: $t0, $t9
 89: label L7
     # live vars:
 90: $t4 := 0
     # live vars: $t4
 91: abort($t4)
     # live vars: $t0, $t9
 92: label L4
     # live vars:
 93: $t4 := 0
     # live vars: $t4
 94: abort($t4)
     # live vars: $t0, $t9
 95: label L1
     # live vars:
 96: $t4 := 0
     # live vars: $t4
 97: abort($t4)
}


============ disassembled file-format ==================
// Move bytecode v8
module c0ffee.m {
struct Test1 has copy, drop {
	a: u64,
	b: u64
}
struct Test2 has copy, drop {
	a: vector<u64>
}
struct Test3 has copy, drop {
	a: vector<Test1>
}

public test1() /* def_idx: 0 */ {
L0:	x: Test1
L1:	y: Test1
B0:
	0: LdU64(1)
	1: LdU64(2)
	2: Pack[0](Test1)
	3: StLoc[0](x: Test1)
	4: LdU64(1)
	5: LdU64(2)
	6: Pack[0](Test1)
	7: StLoc[1](y: Test1)
	8: CopyLoc[0](x: Test1)
	9: CopyLoc[1](y: Test1)
	10: Eq
	11: BrFalse(55)
B1:
	12: ImmBorrowLoc[0](x: Test1)
	13: ImmBorrowLoc[1](y: Test1)
	14: Eq
	15: BrFalse(53)
B2:
	16: ImmBorrowLoc[0](x: Test1)
	17: ImmBorrowField[0](Test1.a: u64)
	18: ReadRef
	19: ImmBorrowLoc[1](y: Test1)
	20: ImmBorrowField[0](Test1.a: u64)
	21: ReadRef
	22: Eq
	23: BrFalse(51)
B3:
	24: ImmBorrowLoc[0](x: Test1)
	25: ImmBorrowField[0](Test1.a: u64)
	26: ImmBorrowLoc[1](y: Test1)
	27: ImmBorrowField[0](Test1.a: u64)
	28: Eq
	29: BrFalse(49)
B4:
	30: ImmBorrowLoc[0](x: Test1)
	31: ImmBorrowField[1](Test1.b: u64)
	32: ReadRef
	33: ImmBorrowLoc[1](y: Test1)
	34: ImmBorrowField[1](Test1.b: u64)
	35: ReadRef
	36: Eq
	37: BrFalse(47)
B5:
	38: ImmBorrowLoc[0](x: Test1)
	39: ImmBorrowField[1](Test1.b: u64)
	40: ImmBorrowLoc[1](y: Test1)
	41: ImmBorrowField[1](Test1.b: u64)
	42: Eq
	43: BrFalse(45)
B6:
	44: Ret
B7:
	45: LdU64(0)
	46: Abort
B8:
	47: LdU64(0)
	48: Abort
B9:
	49: LdU64(0)
	50: Abort
B10:
	51: LdU64(0)
	52: Abort
B11:
	53: LdU64(0)
	54: Abort
B12:
	55: LdU64(0)
	56: Abort
}
public test2() /* def_idx: 1 */ {
L0:	x: Test2
L1:	y: Test2
B0:
	0: LdConst[0](Vector(U64): [3, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0])
	1: Pack[1](Test2)
	2: StLoc[0](x: Test2)
	3: LdConst[0](Vector(U64): [3, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0])
	4: Pack[1](Test2)
	5: StLoc[1](y: Test2)
	6: CopyLoc[0](x: Test2)
	7: CopyLoc[1](y: Test2)
	8: Eq
	9: BrFalse(61)
B1:
	10: ImmBorrowLoc[0](x: Test2)
	11: ImmBorrowLoc[1](y: Test2)
	12: Eq
	13: BrFalse(59)
B2:
	14: ImmBorrowLoc[0](x: Test2)
	15: ImmBorrowField[2](Test2.a: vector<u64>)
	16: ReadRef
	17: ImmBorrowLoc[1](y: Test2)
	18: ImmBorrowField[2](Test2.a: vector<u64>)
	19: ReadRef
	20: Eq
	21: BrFalse(57)
B3:
	22: ImmBorrowLoc[0](x: Test2)
	23: ImmBorrowField[2](Test2.a: vector<u64>)
	24: ImmBorrowLoc[1](y: Test2)
	25: ImmBorrowField[2](Test2.a: vector<u64>)
	26: Eq
	27: BrFalse(55)
B4:
	28: ImmBorrowLoc[0](x: Test2)
	29: ImmBorrowField[2](Test2.a: vector<u64>)
	30: LdU64(0)
	31: VecImmBorrow(2)
	32: ReadRef
	33: ImmBorrowLoc[1](y: Test2)
	34: ImmBorrowField[2](Test2.a: vector<u64>)
	35: LdU64(0)
	36: VecImmBorrow(2)
	37: ReadRef
	38: Eq
	39: BrFalse(53)
B5:
	40: ImmBorrowLoc[0](x: Test2)
	41: ImmBorrowField[2](Test2.a: vector<u64>)
	42: LdU64(0)
	43: VecImmBorrow(2)
	44: ImmBorrowLoc[1](y: Test2)
	45: ImmBorrowField[2](Test2.a: vector<u64>)
	46: LdU64(0)
	47: VecImmBorrow(2)
	48: Eq
	49: BrFalse(51)
B6:
	50: Ret
B7:
	51: LdU64(0)
	52: Abort
B8:
	53: LdU64(0)
	54: Abort
B9:
	55: LdU64(0)
	56: Abort
B10:
	57: LdU64(0)
	58: Abort
B11:
	59: LdU64(0)
	60: Abort
B12:
	61: LdU64(0)
	62: Abort
}
public test3() /* def_idx: 2 */ {
L0:	x: Test3
L1:	y: Test3
B0:
	0: LdU64(1)
	1: LdU64(2)
	2: Pack[0](Test1)
	3: VecPack(4, 1)
	4: Pack[2](Test3)
	5: StLoc[0](x: Test3)
	6: LdU64(1)
	7: LdU64(2)
	8: Pack[0](Test1)
	9: LdU64(1)
	10: LdU64(2)
	11: Pack[0](Test1)
	12: VecPack(4, 2)
	13: Pack[2](Test3)
	14: StLoc[1](y: Test3)
	15: CopyLoc[0](x: Test3)
	16: CopyLoc[1](y: Test3)
	17: Neq
	18: BrFalse(70)
B1:
	19: ImmBorrowLoc[0](x: Test3)
	20: ImmBorrowLoc[1](y: Test3)
	21: Neq
	22: BrFalse(68)
B2:
	23: ImmBorrowLoc[0](x: Test3)
	24: ImmBorrowField[3](Test3.a: vector<Test1>)
	25: ReadRef
	26: ImmBorrowLoc[1](y: Test3)
	27: ImmBorrowField[3](Test3.a: vector<Test1>)
	28: ReadRef
	29: Neq
	30: BrFalse(66)
B3:
	31: ImmBorrowLoc[0](x: Test3)
	32: ImmBorrowField[3](Test3.a: vector<Test1>)
	33: ImmBorrowLoc[1](y: Test3)
	34: ImmBorrowField[3](Test3.a: vector<Test1>)
	35: Neq
	36: BrFalse(64)
B4:
	37: ImmBorrowLoc[0](x: Test3)
	38: ImmBorrowField[3](Test3.a: vector<Test1>)
	39: LdU64(0)
	40: VecImmBorrow(4)
	41: ReadRef
	42: ImmBorrowLoc[1](y: Test3)
	43: ImmBorrowField[3](Test3.a: vector<Test1>)
	44: LdU64(0)
	45: VecImmBorrow(4)
	46: ReadRef
	47: Eq
	48: BrFalse(62)
B5:
	49: ImmBorrowLoc[0](x: Test3)
	50: ImmBorrowField[3](Test3.a: vector<Test1>)
	51: LdU64(0)
	52: VecImmBorrow(4)
	53: ImmBorrowLoc[1](y: Test3)
	54: ImmBorrowField[3](Test3.a: vector<Test1>)
	55: LdU64(0)
	56: VecImmBorrow(4)
	57: Eq
	58: BrFalse(60)
B6:
	59: Ret
B7:
	60: LdU64(0)
	61: Abort
B8:
	62: LdU64(0)
	63: Abort
B9:
	64: LdU64(0)
	65: Abort
B10:
	66: LdU64(0)
	67: Abort
B11:
	68: LdU64(0)
	69: Abort
B12:
	70: LdU64(0)
	71: Abort
}
public test4() /* def_idx: 3 */ {
L0:	x: vector<Test1>
L1:	y: vector<Test1>
B0:
	0: LdU64(1)
	1: LdU64(2)
	2: Pack[0](Test1)
	3: LdU64(1)
	4: LdU64(2)
	5: Pack[0](Test1)
	6: LdU64(1)
	7: LdU64(2)
	8: Pack[0](Test1)
	9: VecPack(4, 3)
	10: StLoc[0](x: vector<Test1>)
	11: LdU64(1)
	12: LdU64(2)
	13: Pack[0](Test1)
	14: LdU64(1)
	15: LdU64(2)
	16: Pack[0](Test1)
	17: LdU64(1)
	18: LdU64(2)
	19: Pack[0](Test1)
	20: VecPack(4, 3)
	21: StLoc[1](y: vector<Test1>)
	22: CopyLoc[0](x: vector<Test1>)
	23: CopyLoc[1](y: vector<Test1>)
	24: Eq
	25: BrFalse(77)
B1:
	26: ImmBorrowLoc[0](x: vector<Test1>)
	27: ImmBorrowLoc[1](y: vector<Test1>)
	28: Eq
	29: BrFalse(75)
B2:
	30: ImmBorrowLoc[0](x: vector<Test1>)
	31: LdU64(0)
	32: VecImmBorrow(4)
	33: ReadRef
	34: ImmBorrowLoc[1](y: vector<Test1>)
	35: LdU64(0)
	36: VecImmBorrow(4)
	37: ReadRef
	38: Eq
	39: BrFalse(73)
B3:
	40: ImmBorrowLoc[0](x: vector<Test1>)
	41: LdU64(0)
	42: VecImmBorrow(4)
	43: ImmBorrowLoc[1](y: vector<Test1>)
	44: LdU64(0)
	45: VecImmBorrow(4)
	46: Eq
	47: BrFalse(71)
B4:
	48: ImmBorrowLoc[0](x: vector<Test1>)
	49: LdU64(1)
	50: VecImmBorrow(4)
	51: ReadRef
	52: ImmBorrowLoc[1](y: vector<Test1>)
	53: LdU64(1)
	54: VecImmBorrow(4)
	55: ReadRef
	56: Eq
	57: BrFalse(69)
B5:
	58: ImmBorrowLoc[0](x: vector<Test1>)
	59: LdU64(1)
	60: VecImmBorrow(4)
	61: ImmBorrowLoc[1](y: vector<Test1>)
	62: LdU64(1)
	63: VecImmBorrow(4)
	64: Eq
	65: BrFalse(67)
B6:
	66: Ret
B7:
	67: LdU64(0)
	68: Abort
B8:
	69: LdU64(0)
	70: Abort
B9:
	71: LdU64(0)
	72: Abort
B10:
	73: LdU64(0)
	74: Abort
B11:
	75: LdU64(0)
	76: Abort
B12:
	77: LdU64(0)
	78: Abort
}
public test5() /* def_idx: 4 */ {
L0:	x: vector<Test2>
L1:	y: vector<Test2>
B0:
	0: LdConst[0](Vector(U64): [3, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0])
	1: Pack[1](Test2)
	2: LdConst[0](Vector(U64): [3, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0])
	3: Pack[1](Test2)
	4: VecPack(7, 2)
	5: StLoc[0](x: vector<Test2>)
	6: LdConst[0](Vector(U64): [3, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0])
	7: Pack[1](Test2)
	8: LdConst[1](Vector(U64): [3, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0])
	9: Pack[1](Test2)
	10: LdConst[0](Vector(U64): [3, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0])
	11: Pack[1](Test2)
	12: VecPack(7, 3)
	13: StLoc[1](y: vector<Test2>)
	14: CopyLoc[0](x: vector<Test2>)
	15: CopyLoc[1](y: vector<Test2>)
	16: Neq
	17: BrFalse(69)
B1:
	18: ImmBorrowLoc[0](x: vector<Test2>)
	19: ImmBorrowLoc[1](y: vector<Test2>)
	20: Neq
	21: BrFalse(67)
B2:
	22: ImmBorrowLoc[0](x: vector<Test2>)
	23: LdU64(0)
	24: VecImmBorrow(7)
	25: ReadRef
	26: ImmBorrowLoc[1](y: vector<Test2>)
	27: LdU64(0)
	28: VecImmBorrow(7)
	29: ReadRef
	30: Eq
	31: BrFalse(65)
B3:
	32: ImmBorrowLoc[0](x: vector<Test2>)
	33: LdU64(0)
	34: VecImmBorrow(7)
	35: ImmBorrowLoc[1](y: vector<Test2>)
	36: LdU64(0)
	37: VecImmBorrow(7)
	38: Eq
	39: BrFalse(63)
B4:
	40: ImmBorrowLoc[0](x: vector<Test2>)
	41: LdU64(1)
	42: VecImmBorrow(7)
	43: ReadRef
	44: ImmBorrowLoc[1](y: vector<Test2>)
	45: LdU64(1)
	46: VecImmBorrow(7)
	47: ReadRef
	48: Neq
	49: BrFalse(61)
B5:
	50: ImmBorrowLoc[0](x: vector<Test2>)
	51: LdU64(1)
	52: VecImmBorrow(7)
	53: ImmBorrowLoc[1](y: vector<Test2>)
	54: LdU64(1)
	55: VecImmBorrow(7)
	56: Neq
	57: BrFalse(59)
B6:
	58: Ret
B7:
	59: LdU64(0)
	60: Abort
B8:
	61: LdU64(0)
	62: Abort
B9:
	63: LdU64(0)
	64: Abort
B10:
	65: LdU64(0)
	66: Abort
B11:
	67: LdU64(0)
	68: Abort
B12:
	69: LdU64(0)
	70: Abort
}
public test6() /* def_idx: 5 */ {
L0:	x: vector<Test3>
L1:	y: vector<Test3>
B0:
	0: LdU64(1)
	1: LdU64(2)
	2: Pack[0](Test1)
	3: LdU64(1)
	4: LdU64(2)
	5: Pack[0](Test1)
	6: VecPack(4, 2)
	7: Pack[2](Test3)
	8: VecPack(9, 1)
	9: StLoc[0](x: vector<Test3>)
	10: LdU64(1)
	11: LdU64(2)
	12: Pack[0](Test1)
	13: LdU64(1)
	14: LdU64(2)
	15: Pack[0](Test1)
	16: VecPack(4, 2)
	17: Pack[2](Test3)
	18: LdU64(1)
	19: LdU64(2)
	20: Pack[0](Test1)
	21: LdU64(1)
	22: LdU64(2)
	23: Pack[0](Test1)
	24: VecPack(4, 2)
	25: Pack[2](Test3)
	26: VecPack(9, 2)
	27: StLoc[1](y: vector<Test3>)
	28: CopyLoc[0](x: vector<Test3>)
	29: CopyLoc[1](y: vector<Test3>)
	30: Neq
	31: BrFalse(87)
B1:
	32: ImmBorrowLoc[0](x: vector<Test3>)
	33: ImmBorrowLoc[1](y: vector<Test3>)
	34: Neq
	35: BrFalse(85)
B2:
	36: ImmBorrowLoc[0](x: vector<Test3>)
	37: LdU64(0)
	38: VecImmBorrow(9)
	39: ReadRef
	40: ImmBorrowLoc[1](y: vector<Test3>)
	41: LdU64(0)
	42: VecImmBorrow(9)
	43: ReadRef
	44: Eq
	45: BrFalse(83)
B3:
	46: ImmBorrowLoc[0](x: vector<Test3>)
	47: LdU64(0)
	48: VecImmBorrow(9)
	49: ImmBorrowLoc[1](y: vector<Test3>)
	50: LdU64(0)
	51: VecImmBorrow(9)
	52: Eq
	53: BrFalse(81)
B4:
	54: ImmBorrowLoc[0](x: vector<Test3>)
	55: LdU64(0)
	56: VecImmBorrow(9)
	57: ImmBorrowField[3](Test3.a: vector<Test1>)
	58: ReadRef
	59: ImmBorrowLoc[1](y: vector<Test3>)
	60: LdU64(0)
	61: VecImmBorrow(9)
	62: ImmBorrowField[3](Test3.a: vector<Test1>)
	63: ReadRef
	64: Eq
	65: BrFalse(79)
B5:
	66: ImmBorrowLoc[0](x: vector<Test3>)
	67: LdU64(0)
	68: VecImmBorrow(9)
	69: ImmBorrowField[3](Test3.a: vector<Test1>)
	70: ImmBorrowLoc[1](y: vector<Test3>)
	71: LdU64(0)
	72: VecImmBorrow(9)
	73: ImmBorrowField[3](Test3.a: vector<Test1>)
	74: Eq
	75: BrFalse(77)
B6:
	76: Ret
B7:
	77: LdU64(0)
	78: Abort
B8:
	79: LdU64(0)
	80: Abort
B9:
	81: LdU64(0)
	82: Abort
B10:
	83: LdU64(0)
	84: Abort
B11:
	85: LdU64(0)
	86: Abort
B12:
	87: LdU64(0)
	88: Abort
}
}
============ bytecode verification succeeded ========
