============ bytecode before first stackless bytecode pipeline ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: &vector<u8>
     var $t8: vector<u8>
     var $t9: u64
     var $t10: bool
     var $t11: u64
     var $t12: u64
     var $t13: u64
     var $t14: bool
     var $t15: &vector<u8>
     var $t16: vector<u8>
     var $t17: &vector<u8>
     var $t18: vector<u8>
     var $t19: u64
     var $t20: &mut u64
     var $t21: u64
     var $t22: u64
     var $t23: &mut vector<u8>
     var $t24: vector<u8>
     var $t25: vector<u8>
     var $t26: bool
     var $t27: u64
     var $t28: u64
     var $t29: u64
     var $t30: bool
     var $t31: &vector<u8>
     var $t32: vector<u8>
     var $t33: &vector<u8>
     var $t34: vector<u8>
     var $t35: u64
     var $t36: bool
     var $t37: u64
     var $t38: u64
     var $t39: u64
     var $t40: bool
     var $t41: &vector<u8>
     var $t42: vector<u8>
     var $t43: &vector<u8>
     var $t44: vector<u8>
     var $t45: u64
  0: $t1 := 0
  1: $t2 := 0
  2: $t0 := ==($t1, $t2)
  3: if ($t0) goto 4 else goto 6
  4: label L0
  5: goto 9
  6: label L1
  7: $t3 := 42
  8: abort($t3)
  9: label L2
 10: $t6 := [104, 101, 108, 108, 111]
 11: $t5 := borrow_local($t6)
 12: $t8 := [104, 101, 108, 108, 111]
 13: $t7 := borrow_local($t8)
 14: $t4 := ==($t5, $t7)
 15: if ($t4) goto 16 else goto 18
 16: label L3
 17: goto 21
 18: label L4
 19: $t9 := 42
 20: abort($t9)
 21: label L5
 22: $t11 := 0
 23: $t12 := 0
 24: $t10 := ==($t11, $t12)
 25: if ($t10) goto 26 else goto 28
 26: label L6
 27: goto 31
 28: label L7
 29: $t13 := 42
 30: abort($t13)
 31: label L8
 32: $t16 := [104, 101, 108, 108, 111]
 33: $t15 := borrow_local($t16)
 34: $t18 := [104, 101, 108, 108, 111]
 35: $t17 := borrow_local($t18)
 36: $t14 := ==($t15, $t17)
 37: if ($t14) goto 38 else goto 40
 38: label L9
 39: goto 43
 40: label L10
 41: $t19 := 42
 42: abort($t19)
 43: label L11
 44: $t21 := 0
 45: $t20 := borrow_local($t21)
 46: $t22 := 1
 47: write_ref($t20, $t22)
 48: $t24 := [104, 101, 108, 108, 111]
 49: $t23 := borrow_local($t24)
 50: $t25 := [98, 121, 101]
 51: write_ref($t23, $t25)
 52: $t27 := read_ref($t20)
 53: $t28 := 1
 54: $t26 := ==($t27, $t28)
 55: if ($t26) goto 56 else goto 58
 56: label L12
 57: goto 61
 58: label L13
 59: $t29 := 42
 60: abort($t29)
 61: label L14
 62: $t32 := read_ref($t23)
 63: $t31 := borrow_local($t32)
 64: $t34 := [98, 121, 101]
 65: $t33 := borrow_local($t34)
 66: $t30 := ==($t31, $t33)
 67: if ($t30) goto 68 else goto 70
 68: label L15
 69: goto 73
 70: label L16
 71: $t35 := 42
 72: abort($t35)
 73: label L17
 74: $t37 := 0
 75: $t38 := 0
 76: $t36 := ==($t37, $t38)
 77: if ($t36) goto 78 else goto 80
 78: label L18
 79: goto 83
 80: label L19
 81: $t39 := 42
 82: abort($t39)
 83: label L20
 84: $t42 := [104, 101, 108, 108, 111]
 85: $t41 := borrow_local($t42)
 86: $t44 := [104, 101, 108, 108, 111]
 87: $t43 := borrow_local($t44)
 88: $t40 := ==($t41, $t43)
 89: if ($t40) goto 90 else goto 92
 90: label L21
 91: goto 95
 92: label L22
 93: $t45 := 42
 94: abort($t45)
 95: label L23
 96: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: &vector<u8>
     var $t8: vector<u8>
     var $t9: u64
     var $t10: bool
     var $t11: u64
     var $t12: u64
     var $t13: u64
     var $t14: bool
     var $t15: &vector<u8>
     var $t16: vector<u8>
     var $t17: &vector<u8>
     var $t18: vector<u8>
     var $t19: u64
     var $t20: &mut u64
     var $t21: u64
     var $t22: u64
     var $t23: &mut vector<u8>
     var $t24: vector<u8>
     var $t25: vector<u8>
     var $t26: bool
     var $t27: u64
     var $t28: u64
     var $t29: u64
     var $t30: bool
     var $t31: &vector<u8>
     var $t32: vector<u8>
     var $t33: &vector<u8>
     var $t34: vector<u8>
     var $t35: u64
     var $t36: bool
     var $t37: u64
     var $t38: u64
     var $t39: u64
     var $t40: bool
     var $t41: &vector<u8>
     var $t42: vector<u8>
     var $t43: &vector<u8>
     var $t44: vector<u8>
     var $t45: u64
     # live vars:
  0: $t1 := 0
     # live vars: $t1
  1: $t2 := 0
     # live vars: $t1, $t2
  2: $t0 := ==($t1, $t2)
     # live vars: $t0
  3: if ($t0) goto 4 else goto 6
     # live vars:
  4: label L0
     # live vars:
  5: goto 9
     # live vars:
  6: label L1
     # live vars:
  7: $t3 := 42
     # live vars: $t3
  8: abort($t3)
     # live vars:
  9: label L2
     # live vars:
 10: $t6 := [104, 101, 108, 108, 111]
     # live vars: $t6
 11: $t5 := borrow_local($t6)
     # live vars: $t5
 12: $t8 := [104, 101, 108, 108, 111]
     # live vars: $t5, $t8
 13: $t7 := borrow_local($t8)
     # live vars: $t5, $t7
 14: $t4 := ==($t5, $t7)
     # live vars: $t4
 15: if ($t4) goto 16 else goto 18
     # live vars:
 16: label L3
     # live vars:
 17: goto 21
     # live vars:
 18: label L4
     # live vars:
 19: $t9 := 42
     # live vars: $t9
 20: abort($t9)
     # live vars:
 21: label L5
     # live vars:
 22: $t11 := 0
     # live vars: $t11
 23: $t12 := 0
     # live vars: $t11, $t12
 24: $t10 := ==($t11, $t12)
     # live vars: $t10
 25: if ($t10) goto 26 else goto 28
     # live vars:
 26: label L6
     # live vars:
 27: goto 31
     # live vars:
 28: label L7
     # live vars:
 29: $t13 := 42
     # live vars: $t13
 30: abort($t13)
     # live vars:
 31: label L8
     # live vars:
 32: $t16 := [104, 101, 108, 108, 111]
     # live vars: $t16
 33: $t15 := borrow_local($t16)
     # live vars: $t15
 34: $t18 := [104, 101, 108, 108, 111]
     # live vars: $t15, $t18
 35: $t17 := borrow_local($t18)
     # live vars: $t15, $t17
 36: $t14 := ==($t15, $t17)
     # live vars: $t14
 37: if ($t14) goto 38 else goto 40
     # live vars:
 38: label L9
     # live vars:
 39: goto 43
     # live vars:
 40: label L10
     # live vars:
 41: $t19 := 42
     # live vars: $t19
 42: abort($t19)
     # live vars:
 43: label L11
     # live vars:
 44: $t21 := 0
     # live vars: $t21
 45: $t20 := borrow_local($t21)
     # live vars: $t20
 46: $t22 := 1
     # live vars: $t20, $t22
 47: write_ref($t20, $t22)
     # live vars: $t20
 48: $t24 := [104, 101, 108, 108, 111]
     # live vars: $t20, $t24
 49: $t23 := borrow_local($t24)
     # live vars: $t20, $t23
 50: $t25 := [98, 121, 101]
     # live vars: $t20, $t23, $t25
 51: write_ref($t23, $t25)
     # live vars: $t20, $t23
 52: $t27 := read_ref($t20)
     # live vars: $t23, $t27
 53: $t28 := 1
     # live vars: $t23, $t27, $t28
 54: $t26 := ==($t27, $t28)
     # live vars: $t23, $t26
 55: if ($t26) goto 56 else goto 58
     # live vars: $t23
 56: label L12
     # live vars: $t23
 57: goto 61
     # live vars: $t23
 58: label L13
     # live vars:
 59: $t29 := 42
     # live vars: $t29
 60: abort($t29)
     # live vars: $t23
 61: label L14
     # live vars: $t23
 62: $t32 := read_ref($t23)
     # live vars: $t32
 63: $t31 := borrow_local($t32)
     # live vars: $t31
 64: $t34 := [98, 121, 101]
     # live vars: $t31, $t34
 65: $t33 := borrow_local($t34)
     # live vars: $t31, $t33
 66: $t30 := ==($t31, $t33)
     # live vars: $t30
 67: if ($t30) goto 68 else goto 70
     # live vars:
 68: label L15
     # live vars:
 69: goto 73
     # live vars:
 70: label L16
     # live vars:
 71: $t35 := 42
     # live vars: $t35
 72: abort($t35)
     # live vars:
 73: label L17
     # live vars:
 74: $t37 := 0
     # live vars: $t37
 75: $t38 := 0
     # live vars: $t37, $t38
 76: $t36 := ==($t37, $t38)
     # live vars: $t36
 77: if ($t36) goto 78 else goto 80
     # live vars:
 78: label L18
     # live vars:
 79: goto 83
     # live vars:
 80: label L19
     # live vars:
 81: $t39 := 42
     # live vars: $t39
 82: abort($t39)
     # live vars:
 83: label L20
     # live vars:
 84: $t42 := [104, 101, 108, 108, 111]
     # live vars: $t42
 85: $t41 := borrow_local($t42)
     # live vars: $t41
 86: $t44 := [104, 101, 108, 108, 111]
     # live vars: $t41, $t44
 87: $t43 := borrow_local($t44)
     # live vars: $t41, $t43
 88: $t40 := ==($t41, $t43)
     # live vars: $t40
 89: if ($t40) goto 90 else goto 92
     # live vars:
 90: label L21
     # live vars:
 91: goto 95
     # live vars:
 92: label L22
     # live vars:
 93: $t45 := 42
     # live vars: $t45
 94: abort($t45)
     # live vars:
 95: label L23
     # live vars:
 96: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: &vector<u8>
     var $t8: vector<u8>
     var $t9: u64
     var $t10: bool
     var $t11: u64
     var $t12: u64
     var $t13: u64
     var $t14: bool
     var $t15: &vector<u8>
     var $t16: vector<u8>
     var $t17: &vector<u8>
     var $t18: vector<u8>
     var $t19: u64
     var $t20: &mut u64
     var $t21: u64
     var $t22: u64
     var $t23: &mut vector<u8>
     var $t24: vector<u8>
     var $t25: vector<u8>
     var $t26: bool
     var $t27: u64
     var $t28: u64
     var $t29: u64
     var $t30: bool
     var $t31: &vector<u8>
     var $t32: vector<u8>
     var $t33: &vector<u8>
     var $t34: vector<u8>
     var $t35: u64
     var $t36: bool
     var $t37: u64
     var $t38: u64
     var $t39: u64
     var $t40: bool
     var $t41: &vector<u8>
     var $t42: vector<u8>
     var $t43: &vector<u8>
     var $t44: vector<u8>
     var $t45: u64
     # live vars:
  0: $t1 := 0
     # live vars: $t1
  1: $t2 := 0
     # live vars: $t1, $t2
  2: $t0 := ==($t1, $t2)
     # live vars: $t0
  3: if ($t0) goto 4 else goto 6
     # live vars:
  4: label L0
     # live vars:
  5: goto 9
     # live vars:
  6: label L1
     # live vars:
  7: $t3 := 42
     # live vars: $t3
  8: abort($t3)
     # live vars:
  9: label L2
     # live vars:
 10: $t6 := [104, 101, 108, 108, 111]
     # live vars: $t6
 11: $t5 := borrow_local($t6)
     # live vars: $t5
 12: $t8 := [104, 101, 108, 108, 111]
     # live vars: $t5, $t8
 13: $t7 := borrow_local($t8)
     # live vars: $t5, $t7
 14: $t4 := ==($t5, $t7)
     # live vars: $t4
 15: if ($t4) goto 16 else goto 18
     # live vars:
 16: label L3
     # live vars:
 17: goto 21
     # live vars:
 18: label L4
     # live vars:
 19: $t9 := 42
     # live vars: $t9
 20: abort($t9)
     # live vars:
 21: label L5
     # live vars:
 22: $t11 := 0
     # live vars: $t11
 23: $t12 := 0
     # live vars: $t11, $t12
 24: $t10 := ==($t11, $t12)
     # live vars: $t10
 25: if ($t10) goto 26 else goto 28
     # live vars:
 26: label L6
     # live vars:
 27: goto 31
     # live vars:
 28: label L7
     # live vars:
 29: $t13 := 42
     # live vars: $t13
 30: abort($t13)
     # live vars:
 31: label L8
     # live vars:
 32: $t16 := [104, 101, 108, 108, 111]
     # live vars: $t16
 33: $t15 := borrow_local($t16)
     # live vars: $t15
 34: $t18 := [104, 101, 108, 108, 111]
     # live vars: $t15, $t18
 35: $t17 := borrow_local($t18)
     # live vars: $t15, $t17
 36: $t14 := ==($t15, $t17)
     # live vars: $t14
 37: if ($t14) goto 38 else goto 40
     # live vars:
 38: label L9
     # live vars:
 39: goto 43
     # live vars:
 40: label L10
     # live vars:
 41: $t19 := 42
     # live vars: $t19
 42: abort($t19)
     # live vars:
 43: label L11
     # live vars:
 44: $t21 := 0
     # live vars: $t21
 45: $t20 := borrow_local($t21)
     # live vars: $t20
 46: $t22 := 1
     # live vars: $t20, $t22
 47: write_ref($t20, $t22)
     # live vars: $t20
 48: $t24 := [104, 101, 108, 108, 111]
     # live vars: $t20, $t24
 49: $t23 := borrow_local($t24)
     # live vars: $t20, $t23
 50: $t25 := [98, 121, 101]
     # live vars: $t20, $t23, $t25
 51: write_ref($t23, $t25)
     # live vars: $t20, $t23
 52: $t27 := read_ref($t20)
     # live vars: $t23, $t27
 53: $t28 := 1
     # live vars: $t23, $t27, $t28
 54: $t26 := ==($t27, $t28)
     # live vars: $t23, $t26
 55: if ($t26) goto 56 else goto 58
     # live vars: $t23
 56: label L12
     # live vars: $t23
 57: goto 61
     # live vars: $t23
 58: label L13
     # live vars:
 59: $t29 := 42
     # live vars: $t29
 60: abort($t29)
     # live vars: $t23
 61: label L14
     # live vars: $t23
 62: $t32 := read_ref($t23)
     # live vars: $t32
 63: $t31 := borrow_local($t32)
     # live vars: $t31
 64: $t34 := [98, 121, 101]
     # live vars: $t31, $t34
 65: $t33 := borrow_local($t34)
     # live vars: $t31, $t33
 66: $t30 := ==($t31, $t33)
     # live vars: $t30
 67: if ($t30) goto 68 else goto 70
     # live vars:
 68: label L15
     # live vars:
 69: goto 73
     # live vars:
 70: label L16
     # live vars:
 71: $t35 := 42
     # live vars: $t35
 72: abort($t35)
     # live vars:
 73: label L17
     # live vars:
 74: $t37 := 0
     # live vars: $t37
 75: $t38 := 0
     # live vars: $t37, $t38
 76: $t36 := ==($t37, $t38)
     # live vars: $t36
 77: if ($t36) goto 78 else goto 80
     # live vars:
 78: label L18
     # live vars:
 79: goto 83
     # live vars:
 80: label L19
     # live vars:
 81: $t39 := 42
     # live vars: $t39
 82: abort($t39)
     # live vars:
 83: label L20
     # live vars:
 84: $t42 := [104, 101, 108, 108, 111]
     # live vars: $t42
 85: $t41 := borrow_local($t42)
     # live vars: $t41
 86: $t44 := [104, 101, 108, 108, 111]
     # live vars: $t41, $t44
 87: $t43 := borrow_local($t44)
     # live vars: $t41, $t43
 88: $t40 := ==($t41, $t43)
     # live vars: $t40
 89: if ($t40) goto 90 else goto 92
     # live vars:
 90: label L21
     # live vars:
 91: goto 95
     # live vars:
 92: label L22
     # live vars:
 93: $t45 := 42
     # live vars: $t45
 94: abort($t45)
     # live vars:
 95: label L23
     # live vars:
 96: return ()
}

============ after ReferenceSafetyProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: &vector<u8>
     var $t8: vector<u8>
     var $t9: u64
     var $t10: bool
     var $t11: u64
     var $t12: u64
     var $t13: u64
     var $t14: bool
     var $t15: &vector<u8>
     var $t16: vector<u8>
     var $t17: &vector<u8>
     var $t18: vector<u8>
     var $t19: u64
     var $t20: &mut u64
     var $t21: u64
     var $t22: u64
     var $t23: &mut vector<u8>
     var $t24: vector<u8>
     var $t25: vector<u8>
     var $t26: bool
     var $t27: u64
     var $t28: u64
     var $t29: u64
     var $t30: bool
     var $t31: &vector<u8>
     var $t32: vector<u8>
     var $t33: &vector<u8>
     var $t34: vector<u8>
     var $t35: u64
     var $t36: bool
     var $t37: u64
     var $t38: u64
     var $t39: u64
     var $t40: bool
     var $t41: &vector<u8>
     var $t42: vector<u8>
     var $t43: &vector<u8>
     var $t44: vector<u8>
     var $t45: u64
     # live vars:
     # refs: []
     #
  0: $t1 := 0
     # live vars: $t1
     # refs: []
     #
  1: $t2 := 0
     # live vars: $t1, $t2
     # refs: []
     #
  2: $t0 := ==($t1, $t2)
     # live vars: $t0
     # refs: []
     #
  3: if ($t0) goto 4 else goto 6
     # live vars:
     # refs: []
     #
  4: label L0
     # live vars:
     # refs: []
     #
  5: goto 9
     # live vars:
     # refs: []
     #
  6: label L1
     # live vars:
     # refs: []
     #
  7: $t3 := 42
     # live vars: $t3
     # refs: []
     #
  8: abort($t3)
     # live vars:
     # refs: []
     #
  9: label L2
     # live vars:
     # refs: []
     #
 10: $t6 := [104, 101, 108, 108, 111]
     # live vars: $t6
     # refs: []
     #
 11: $t5 := borrow_local($t6)
     # live vars: $t5
     # refs: [$t5 => #5]
     # #5
     #   <no edges>
     # #root
     #   => #5 via [value] at line 7
     #
 12: $t8 := [104, 101, 108, 108, 111]
     # live vars: $t5, $t8
     # refs: [$t5 => #5]
     # #5
     #   <no edges>
     # #root
     #   => #5 via [value] at line 7
     #
 13: $t7 := borrow_local($t8)
     # live vars: $t5, $t7
     # refs: [$t5 => #5, $t7 => #7]
     # #5
     #   <no edges>
     # #7
     #   <no edges>
     # #root
     #   => #5 via [value] at line 7
     #   => #7 via [value] at line 7
     #
 14: $t4 := ==($t5, $t7)
     # live vars: $t4
     # refs: []
     #
 15: if ($t4) goto 16 else goto 18
     # live vars:
     # refs: []
     #
 16: label L3
     # live vars:
     # refs: []
     #
 17: goto 21
     # live vars:
     # refs: []
     #
 18: label L4
     # live vars:
     # refs: []
     #
 19: $t9 := 42
     # live vars: $t9
     # refs: []
     #
 20: abort($t9)
     # live vars:
     # refs: []
     #
 21: label L5
     # live vars:
     # refs: []
     #
 22: $t11 := 0
     # live vars: $t11
     # refs: []
     #
 23: $t12 := 0
     # live vars: $t11, $t12
     # refs: []
     #
 24: $t10 := ==($t11, $t12)
     # live vars: $t10
     # refs: []
     #
 25: if ($t10) goto 26 else goto 28
     # live vars:
     # refs: []
     #
 26: label L6
     # live vars:
     # refs: []
     #
 27: goto 31
     # live vars:
     # refs: []
     #
 28: label L7
     # live vars:
     # refs: []
     #
 29: $t13 := 42
     # live vars: $t13
     # refs: []
     #
 30: abort($t13)
     # live vars:
     # refs: []
     #
 31: label L8
     # live vars:
     # refs: []
     #
 32: $t16 := [104, 101, 108, 108, 111]
     # live vars: $t16
     # refs: []
     #
 33: $t15 := borrow_local($t16)
     # live vars: $t15
     # refs: [$t15 => #15]
     # #15
     #   <no edges>
     # #root
     #   => #15 via [value] at line 11
     #
 34: $t18 := [104, 101, 108, 108, 111]
     # live vars: $t15, $t18
     # refs: [$t15 => #15]
     # #15
     #   <no edges>
     # #root
     #   => #15 via [value] at line 11
     #
 35: $t17 := borrow_local($t18)
     # live vars: $t15, $t17
     # refs: [$t15 => #15, $t17 => #17]
     # #15
     #   <no edges>
     # #17
     #   <no edges>
     # #root
     #   => #15 via [value] at line 11
     #   => #17 via [value] at line 11
     #
 36: $t14 := ==($t15, $t17)
     # live vars: $t14
     # refs: []
     #
 37: if ($t14) goto 38 else goto 40
     # live vars:
     # refs: []
     #
 38: label L9
     # live vars:
     # refs: []
     #
 39: goto 43
     # live vars:
     # refs: []
     #
 40: label L10
     # live vars:
     # refs: []
     #
 41: $t19 := 42
     # live vars: $t19
     # refs: []
     #
 42: abort($t19)
     # live vars:
     # refs: []
     #
 43: label L11
     # live vars:
     # refs: []
     #
 44: $t21 := 0
     # live vars: $t21
     # refs: []
     #
 45: $t20 := borrow_local($t21)
     # live vars: $t20
     # refs: [$t20 => #20]
     # #20
     #   <no edges>
     # #root
     #   => (mut) #20 via [value] at line 13
     #
 46: $t22 := 1
     # live vars: $t20, $t22
     # refs: [$t20 => #20]
     # #20
     #   <no edges>
     # #root
     #   => (mut) #20 via [value] at line 13
     #
 47: write_ref($t20, $t22)
     # live vars: $t20
     # refs: [$t20 => #20]
     # #20
     #   <no edges>
     # #root
     #   => (mut) #20 via [value] at line 13
     #
 48: $t24 := [104, 101, 108, 108, 111]
     # live vars: $t20, $t24
     # refs: [$t20 => #20]
     # #20
     #   <no edges>
     # #root
     #   => (mut) #20 via [value] at line 13
     #
 49: $t23 := borrow_local($t24)
     # live vars: $t20, $t23
     # refs: [$t20 => #20, $t23 => #23]
     # #20
     #   <no edges>
     # #23
     #   <no edges>
     # #root
     #   => (mut) #20 via [value] at line 13
     #   => (mut) #23 via [value] at line 15
     #
 50: $t25 := [98, 121, 101]
     # live vars: $t20, $t23, $t25
     # refs: [$t20 => #20, $t23 => #23]
     # #20
     #   <no edges>
     # #23
     #   <no edges>
     # #root
     #   => (mut) #20 via [value] at line 13
     #   => (mut) #23 via [value] at line 15
     #
 51: write_ref($t23, $t25)
     # live vars: $t20, $t23
     # refs: [$t20 => #20, $t23 => #23]
     # #20
     #   <no edges>
     # #23
     #   <no edges>
     # #root
     #   => (mut) #20 via [value] at line 13
     #   => (mut) #23 via [value] at line 15
     #
 52: $t27 := read_ref($t20)
     # live vars: $t23, $t27
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 53: $t28 := 1
     # live vars: $t23, $t27, $t28
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 54: $t26 := ==($t27, $t28)
     # live vars: $t23, $t26
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 55: if ($t26) goto 56 else goto 58
     # live vars: $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 56: label L12
     # live vars: $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 57: goto 61
     # live vars: $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 58: label L13
     # live vars:
     # refs: []
     #
 59: $t29 := 42
     # live vars: $t29
     # refs: []
     #
 60: abort($t29)
     # live vars: $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 61: label L14
     # live vars: $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 62: $t32 := read_ref($t23)
     # live vars: $t32
     # refs: []
     #
 63: $t31 := borrow_local($t32)
     # live vars: $t31
     # refs: [$t31 => #31]
     # #31
     #   <no edges>
     # #root
     #   => #31 via [value] at line 18
     #
 64: $t34 := [98, 121, 101]
     # live vars: $t31, $t34
     # refs: [$t31 => #31]
     # #31
     #   <no edges>
     # #root
     #   => #31 via [value] at line 18
     #
 65: $t33 := borrow_local($t34)
     # live vars: $t31, $t33
     # refs: [$t31 => #31, $t33 => #33]
     # #31
     #   <no edges>
     # #33
     #   <no edges>
     # #root
     #   => #31 via [value] at line 18
     #   => #33 via [value] at line 18
     #
 66: $t30 := ==($t31, $t33)
     # live vars: $t30
     # refs: []
     #
 67: if ($t30) goto 68 else goto 70
     # live vars:
     # refs: []
     #
 68: label L15
     # live vars:
     # refs: []
     #
 69: goto 73
     # live vars:
     # refs: []
     #
 70: label L16
     # live vars:
     # refs: []
     #
 71: $t35 := 42
     # live vars: $t35
     # refs: []
     #
 72: abort($t35)
     # live vars:
     # refs: []
     #
 73: label L17
     # live vars:
     # refs: []
     #
 74: $t37 := 0
     # live vars: $t37
     # refs: []
     #
 75: $t38 := 0
     # live vars: $t37, $t38
     # refs: []
     #
 76: $t36 := ==($t37, $t38)
     # live vars: $t36
     # refs: []
     #
 77: if ($t36) goto 78 else goto 80
     # live vars:
     # refs: []
     #
 78: label L18
     # live vars:
     # refs: []
     #
 79: goto 83
     # live vars:
     # refs: []
     #
 80: label L19
     # live vars:
     # refs: []
     #
 81: $t39 := 42
     # live vars: $t39
     # refs: []
     #
 82: abort($t39)
     # live vars:
     # refs: []
     #
 83: label L20
     # live vars:
     # refs: []
     #
 84: $t42 := [104, 101, 108, 108, 111]
     # live vars: $t42
     # refs: []
     #
 85: $t41 := borrow_local($t42)
     # live vars: $t41
     # refs: [$t41 => #41]
     # #41
     #   <no edges>
     # #root
     #   => #41 via [value] at line 22
     #
 86: $t44 := [104, 101, 108, 108, 111]
     # live vars: $t41, $t44
     # refs: [$t41 => #41]
     # #41
     #   <no edges>
     # #root
     #   => #41 via [value] at line 22
     #
 87: $t43 := borrow_local($t44)
     # live vars: $t41, $t43
     # refs: [$t41 => #41, $t43 => #43]
     # #41
     #   <no edges>
     # #43
     #   <no edges>
     # #root
     #   => #41 via [value] at line 22
     #   => #43 via [value] at line 22
     #
 88: $t40 := ==($t41, $t43)
     # live vars: $t40
     # refs: []
     #
 89: if ($t40) goto 90 else goto 92
     # live vars:
     # refs: []
     #
 90: label L21
     # live vars:
     # refs: []
     #
 91: goto 95
     # live vars:
     # refs: []
     #
 92: label L22
     # live vars:
     # refs: []
     #
 93: $t45 := 42
     # live vars: $t45
     # refs: []
     #
 94: abort($t45)
     # live vars:
     # refs: []
     #
 95: label L23
     # live vars:
     # refs: []
     #
 96: return ()
}

============ after AbortAnalysisProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: &vector<u8>
     var $t8: vector<u8>
     var $t9: u64
     var $t10: bool
     var $t11: u64
     var $t12: u64
     var $t13: u64
     var $t14: bool
     var $t15: &vector<u8>
     var $t16: vector<u8>
     var $t17: &vector<u8>
     var $t18: vector<u8>
     var $t19: u64
     var $t20: &mut u64
     var $t21: u64
     var $t22: u64
     var $t23: &mut vector<u8>
     var $t24: vector<u8>
     var $t25: vector<u8>
     var $t26: bool
     var $t27: u64
     var $t28: u64
     var $t29: u64
     var $t30: bool
     var $t31: &vector<u8>
     var $t32: vector<u8>
     var $t33: &vector<u8>
     var $t34: vector<u8>
     var $t35: u64
     var $t36: bool
     var $t37: u64
     var $t38: u64
     var $t39: u64
     var $t40: bool
     var $t41: &vector<u8>
     var $t42: vector<u8>
     var $t43: &vector<u8>
     var $t44: vector<u8>
     var $t45: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t1 := 0
     # abort state: {returns,aborts}
     # live vars: $t1
     # refs: []
     #
  1: $t2 := 0
     # abort state: {returns,aborts}
     # live vars: $t1, $t2
     # refs: []
     #
  2: $t0 := ==($t1, $t2)
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
  3: if ($t0) goto 4 else goto 6
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  4: label L0
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  5: goto 9
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
  6: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
  7: $t3 := 42
     # abort state: {aborts}
     # live vars: $t3
     # refs: []
     #
  8: abort($t3)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  9: label L2
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 10: $t6 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t6
     # refs: []
     #
 11: $t5 := borrow_local($t6)
     # abort state: {returns,aborts}
     # live vars: $t5
     # refs: [$t5 => #5]
     # #5
     #   <no edges>
     # #root
     #   => #5 via [value] at line 7
     #
 12: $t8 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t5, $t8
     # refs: [$t5 => #5]
     # #5
     #   <no edges>
     # #root
     #   => #5 via [value] at line 7
     #
 13: $t7 := borrow_local($t8)
     # abort state: {returns,aborts}
     # live vars: $t5, $t7
     # refs: [$t5 => #5, $t7 => #7]
     # #5
     #   <no edges>
     # #7
     #   <no edges>
     # #root
     #   => #5 via [value] at line 7
     #   => #7 via [value] at line 7
     #
 14: $t4 := ==($t5, $t7)
     # abort state: {returns,aborts}
     # live vars: $t4
     # refs: []
     #
 15: if ($t4) goto 16 else goto 18
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 16: label L3
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 17: goto 21
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 18: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 19: $t9 := 42
     # abort state: {aborts}
     # live vars: $t9
     # refs: []
     #
 20: abort($t9)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 21: label L5
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 22: $t11 := 0
     # abort state: {returns,aborts}
     # live vars: $t11
     # refs: []
     #
 23: $t12 := 0
     # abort state: {returns,aborts}
     # live vars: $t11, $t12
     # refs: []
     #
 24: $t10 := ==($t11, $t12)
     # abort state: {returns,aborts}
     # live vars: $t10
     # refs: []
     #
 25: if ($t10) goto 26 else goto 28
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 26: label L6
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 27: goto 31
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 28: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 29: $t13 := 42
     # abort state: {aborts}
     # live vars: $t13
     # refs: []
     #
 30: abort($t13)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 31: label L8
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 32: $t16 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t16
     # refs: []
     #
 33: $t15 := borrow_local($t16)
     # abort state: {returns,aborts}
     # live vars: $t15
     # refs: [$t15 => #15]
     # #15
     #   <no edges>
     # #root
     #   => #15 via [value] at line 11
     #
 34: $t18 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t15, $t18
     # refs: [$t15 => #15]
     # #15
     #   <no edges>
     # #root
     #   => #15 via [value] at line 11
     #
 35: $t17 := borrow_local($t18)
     # abort state: {returns,aborts}
     # live vars: $t15, $t17
     # refs: [$t15 => #15, $t17 => #17]
     # #15
     #   <no edges>
     # #17
     #   <no edges>
     # #root
     #   => #15 via [value] at line 11
     #   => #17 via [value] at line 11
     #
 36: $t14 := ==($t15, $t17)
     # abort state: {returns,aborts}
     # live vars: $t14
     # refs: []
     #
 37: if ($t14) goto 38 else goto 40
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 38: label L9
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 39: goto 43
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 40: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 41: $t19 := 42
     # abort state: {aborts}
     # live vars: $t19
     # refs: []
     #
 42: abort($t19)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 43: label L11
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 44: $t21 := 0
     # abort state: {returns,aborts}
     # live vars: $t21
     # refs: []
     #
 45: $t20 := borrow_local($t21)
     # abort state: {returns,aborts}
     # live vars: $t20
     # refs: [$t20 => #20]
     # #20
     #   <no edges>
     # #root
     #   => (mut) #20 via [value] at line 13
     #
 46: $t22 := 1
     # abort state: {returns,aborts}
     # live vars: $t20, $t22
     # refs: [$t20 => #20]
     # #20
     #   <no edges>
     # #root
     #   => (mut) #20 via [value] at line 13
     #
 47: write_ref($t20, $t22)
     # abort state: {returns,aborts}
     # live vars: $t20
     # refs: [$t20 => #20]
     # #20
     #   <no edges>
     # #root
     #   => (mut) #20 via [value] at line 13
     #
 48: $t24 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t20, $t24
     # refs: [$t20 => #20]
     # #20
     #   <no edges>
     # #root
     #   => (mut) #20 via [value] at line 13
     #
 49: $t23 := borrow_local($t24)
     # abort state: {returns,aborts}
     # live vars: $t20, $t23
     # refs: [$t20 => #20, $t23 => #23]
     # #20
     #   <no edges>
     # #23
     #   <no edges>
     # #root
     #   => (mut) #20 via [value] at line 13
     #   => (mut) #23 via [value] at line 15
     #
 50: $t25 := [98, 121, 101]
     # abort state: {returns,aborts}
     # live vars: $t20, $t23, $t25
     # refs: [$t20 => #20, $t23 => #23]
     # #20
     #   <no edges>
     # #23
     #   <no edges>
     # #root
     #   => (mut) #20 via [value] at line 13
     #   => (mut) #23 via [value] at line 15
     #
 51: write_ref($t23, $t25)
     # abort state: {returns,aborts}
     # live vars: $t20, $t23
     # refs: [$t20 => #20, $t23 => #23]
     # #20
     #   <no edges>
     # #23
     #   <no edges>
     # #root
     #   => (mut) #20 via [value] at line 13
     #   => (mut) #23 via [value] at line 15
     #
 52: $t27 := read_ref($t20)
     # abort state: {returns,aborts}
     # live vars: $t23, $t27
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 53: $t28 := 1
     # abort state: {returns,aborts}
     # live vars: $t23, $t27, $t28
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 54: $t26 := ==($t27, $t28)
     # abort state: {returns,aborts}
     # live vars: $t23, $t26
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 55: if ($t26) goto 56 else goto 58
     # abort state: {returns,aborts}
     # live vars: $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 56: label L12
     # abort state: {returns,aborts}
     # live vars: $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 57: goto 61
     # abort state: {aborts}
     # live vars: $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 58: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 59: $t29 := 42
     # abort state: {aborts}
     # live vars: $t29
     # refs: []
     #
 60: abort($t29)
     # abort state: {returns,aborts}
     # live vars: $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 61: label L14
     # abort state: {returns,aborts}
     # live vars: $t23
     # refs: [$t23 => #23]
     # #23
     #   <no edges>
     # #root
     #   => (mut) #23 via [value] at line 15
     #
 62: $t32 := read_ref($t23)
     # abort state: {returns,aborts}
     # live vars: $t32
     # refs: []
     #
 63: $t31 := borrow_local($t32)
     # abort state: {returns,aborts}
     # live vars: $t31
     # refs: [$t31 => #31]
     # #31
     #   <no edges>
     # #root
     #   => #31 via [value] at line 18
     #
 64: $t34 := [98, 121, 101]
     # abort state: {returns,aborts}
     # live vars: $t31, $t34
     # refs: [$t31 => #31]
     # #31
     #   <no edges>
     # #root
     #   => #31 via [value] at line 18
     #
 65: $t33 := borrow_local($t34)
     # abort state: {returns,aborts}
     # live vars: $t31, $t33
     # refs: [$t31 => #31, $t33 => #33]
     # #31
     #   <no edges>
     # #33
     #   <no edges>
     # #root
     #   => #31 via [value] at line 18
     #   => #33 via [value] at line 18
     #
 66: $t30 := ==($t31, $t33)
     # abort state: {returns,aborts}
     # live vars: $t30
     # refs: []
     #
 67: if ($t30) goto 68 else goto 70
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 68: label L15
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 69: goto 73
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 70: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 71: $t35 := 42
     # abort state: {aborts}
     # live vars: $t35
     # refs: []
     #
 72: abort($t35)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 73: label L17
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 74: $t37 := 0
     # abort state: {returns,aborts}
     # live vars: $t37
     # refs: []
     #
 75: $t38 := 0
     # abort state: {returns,aborts}
     # live vars: $t37, $t38
     # refs: []
     #
 76: $t36 := ==($t37, $t38)
     # abort state: {returns,aborts}
     # live vars: $t36
     # refs: []
     #
 77: if ($t36) goto 78 else goto 80
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 78: label L18
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 79: goto 83
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 80: label L19
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 81: $t39 := 42
     # abort state: {aborts}
     # live vars: $t39
     # refs: []
     #
 82: abort($t39)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 83: label L20
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 84: $t42 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t42
     # refs: []
     #
 85: $t41 := borrow_local($t42)
     # abort state: {returns,aborts}
     # live vars: $t41
     # refs: [$t41 => #41]
     # #41
     #   <no edges>
     # #root
     #   => #41 via [value] at line 22
     #
 86: $t44 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t41, $t44
     # refs: [$t41 => #41]
     # #41
     #   <no edges>
     # #root
     #   => #41 via [value] at line 22
     #
 87: $t43 := borrow_local($t44)
     # abort state: {returns,aborts}
     # live vars: $t41, $t43
     # refs: [$t41 => #41, $t43 => #43]
     # #41
     #   <no edges>
     # #43
     #   <no edges>
     # #root
     #   => #41 via [value] at line 22
     #   => #43 via [value] at line 22
     #
 88: $t40 := ==($t41, $t43)
     # abort state: {returns,aborts}
     # live vars: $t40
     # refs: []
     #
 89: if ($t40) goto 90 else goto 92
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 90: label L21
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 91: goto 95
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 92: label L22
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 93: $t45 := 42
     # abort state: {aborts}
     # live vars: $t45
     # refs: []
     #
 94: abort($t45)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 95: label L23
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 96: return ()
}

============ after AbilityProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: &vector<u8>
     var $t8: vector<u8>
     var $t9: u64
     var $t10: bool
     var $t11: u64
     var $t12: u64
     var $t13: u64
     var $t14: bool
     var $t15: &vector<u8>
     var $t16: vector<u8>
     var $t17: &vector<u8>
     var $t18: vector<u8>
     var $t19: u64
     var $t20: &mut u64
     var $t21: u64
     var $t22: u64
     var $t23: &mut vector<u8>
     var $t24: vector<u8>
     var $t25: vector<u8>
     var $t26: bool
     var $t27: u64
     var $t28: u64
     var $t29: u64
     var $t30: bool
     var $t31: &vector<u8>
     var $t32: vector<u8>
     var $t33: &vector<u8>
     var $t34: vector<u8>
     var $t35: u64
     var $t36: bool
     var $t37: u64
     var $t38: u64
     var $t39: u64
     var $t40: bool
     var $t41: &vector<u8>
     var $t42: vector<u8>
     var $t43: &vector<u8>
     var $t44: vector<u8>
     var $t45: u64
  0: $t1 := 0
  1: $t2 := 0
  2: $t0 := ==($t1, $t2)
  3: if ($t0) goto 4 else goto 6
  4: label L0
  5: goto 9
  6: label L1
  7: $t3 := 42
  8: abort($t3)
  9: label L2
 10: $t6 := [104, 101, 108, 108, 111]
 11: $t5 := borrow_local($t6)
 12: $t8 := [104, 101, 108, 108, 111]
 13: $t7 := borrow_local($t8)
 14: $t4 := ==($t5, $t7)
 15: if ($t4) goto 16 else goto 18
 16: label L3
 17: goto 21
 18: label L4
 19: $t9 := 42
 20: abort($t9)
 21: label L5
 22: $t11 := 0
 23: $t12 := 0
 24: $t10 := ==($t11, $t12)
 25: if ($t10) goto 26 else goto 28
 26: label L6
 27: goto 31
 28: label L7
 29: $t13 := 42
 30: abort($t13)
 31: label L8
 32: $t16 := [104, 101, 108, 108, 111]
 33: $t15 := borrow_local($t16)
 34: $t18 := [104, 101, 108, 108, 111]
 35: $t17 := borrow_local($t18)
 36: $t14 := ==($t15, $t17)
 37: if ($t14) goto 38 else goto 40
 38: label L9
 39: goto 43
 40: label L10
 41: $t19 := 42
 42: abort($t19)
 43: label L11
 44: $t21 := 0
 45: $t20 := borrow_local($t21)
 46: $t22 := 1
 47: write_ref($t20, $t22)
 48: $t24 := [104, 101, 108, 108, 111]
 49: $t23 := borrow_local($t24)
 50: $t25 := [98, 121, 101]
 51: write_ref($t23, $t25)
 52: $t27 := read_ref($t20)
 53: $t28 := 1
 54: $t26 := ==($t27, $t28)
 55: if ($t26) goto 56 else goto 58
 56: label L12
 57: goto 62
 58: label L13
 59: drop($t23)
 60: $t29 := 42
 61: abort($t29)
 62: label L14
 63: $t32 := read_ref($t23)
 64: $t31 := borrow_local($t32)
 65: $t34 := [98, 121, 101]
 66: $t33 := borrow_local($t34)
 67: $t30 := ==($t31, $t33)
 68: if ($t30) goto 69 else goto 71
 69: label L15
 70: goto 74
 71: label L16
 72: $t35 := 42
 73: abort($t35)
 74: label L17
 75: $t37 := 0
 76: $t38 := 0
 77: $t36 := ==($t37, $t38)
 78: if ($t36) goto 79 else goto 81
 79: label L18
 80: goto 84
 81: label L19
 82: $t39 := 42
 83: abort($t39)
 84: label L20
 85: $t42 := [104, 101, 108, 108, 111]
 86: $t41 := borrow_local($t42)
 87: $t44 := [104, 101, 108, 108, 111]
 88: $t43 := borrow_local($t44)
 89: $t40 := ==($t41, $t43)
 90: if ($t40) goto 91 else goto 93
 91: label L21
 92: goto 96
 93: label L22
 94: $t45 := 42
 95: abort($t45)
 96: label L23
 97: return ()
}

============ bytecode before second stackless bytecode pipeline ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: bool
     var $t3: &vector<u8>
     var $t4: vector<u8>
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: u64
     var $t8: bool
     var $t9: u64
     var $t10: u64
     var $t11: u64
     var $t12: bool
     var $t13: &vector<u8>
     var $t14: vector<u8>
     var $t15: &vector<u8>
     var $t16: vector<u8>
     var $t17: u64
     var $t18: &mut u64
     var $t19: u64
     var $t20: u64
     var $t21: &mut vector<u8>
     var $t22: vector<u8>
     var $t23: vector<u8>
     var $t24: bool
     var $t25: u64
     var $t26: u64
     var $t27: u64
     var $t28: bool
     var $t29: &vector<u8>
     var $t30: vector<u8>
     var $t31: &vector<u8>
     var $t32: vector<u8>
     var $t33: u64
     var $t34: bool
     var $t35: u64
     var $t36: bool
     var $t37: &vector<u8>
     var $t38: vector<u8>
     var $t39: &vector<u8>
     var $t40: vector<u8>
     var $t41: u64
  0: $t0 := true
  1: if ($t0) goto 2 else goto 4
  2: label L0
  3: goto 7
  4: label L1
  5: $t1 := 42
  6: abort($t1)
  7: label L2
  8: $t4 := [104, 101, 108, 108, 111]
  9: $t3 := borrow_local($t4)
 10: $t6 := [104, 101, 108, 108, 111]
 11: $t5 := borrow_local($t6)
 12: $t2 := ==($t3, $t5)
 13: if ($t2) goto 14 else goto 16
 14: label L3
 15: goto 19
 16: label L4
 17: $t7 := 42
 18: abort($t7)
 19: label L5
 20: $t9 := 0
 21: $t10 := 0
 22: $t8 := ==($t9, $t10)
 23: if ($t8) goto 24 else goto 26
 24: label L6
 25: goto 29
 26: label L7
 27: $t11 := 42
 28: abort($t11)
 29: label L8
 30: $t14 := [104, 101, 108, 108, 111]
 31: $t13 := borrow_local($t14)
 32: $t16 := [104, 101, 108, 108, 111]
 33: $t15 := borrow_local($t16)
 34: $t12 := ==($t13, $t15)
 35: if ($t12) goto 36 else goto 38
 36: label L9
 37: goto 41
 38: label L10
 39: $t17 := 42
 40: abort($t17)
 41: label L11
 42: $t19 := 0
 43: $t18 := borrow_local($t19)
 44: $t20 := 1
 45: write_ref($t18, $t20)
 46: $t22 := [104, 101, 108, 108, 111]
 47: $t21 := borrow_local($t22)
 48: $t23 := [98, 121, 101]
 49: write_ref($t21, $t23)
 50: $t25 := read_ref($t18)
 51: $t26 := 1
 52: $t24 := ==($t25, $t26)
 53: if ($t24) goto 54 else goto 56
 54: label L12
 55: goto 59
 56: label L13
 57: $t27 := 42
 58: abort($t27)
 59: label L14
 60: $t30 := read_ref($t21)
 61: $t29 := borrow_local($t30)
 62: $t32 := [98, 121, 101]
 63: $t31 := borrow_local($t32)
 64: $t28 := ==($t29, $t31)
 65: if ($t28) goto 66 else goto 68
 66: label L15
 67: goto 71
 68: label L16
 69: $t33 := 42
 70: abort($t33)
 71: label L17
 72: $t34 := true
 73: if ($t34) goto 74 else goto 76
 74: label L18
 75: goto 79
 76: label L19
 77: $t35 := 42
 78: abort($t35)
 79: label L20
 80: $t38 := [104, 101, 108, 108, 111]
 81: $t37 := borrow_local($t38)
 82: $t40 := [104, 101, 108, 108, 111]
 83: $t39 := borrow_local($t40)
 84: $t36 := ==($t37, $t39)
 85: if ($t36) goto 86 else goto 88
 86: label L21
 87: goto 91
 88: label L22
 89: $t41 := 42
 90: abort($t41)
 91: label L23
 92: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: bool
     var $t3: &vector<u8>
     var $t4: vector<u8>
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: u64
     var $t8: bool
     var $t9: u64
     var $t10: u64
     var $t11: u64
     var $t12: bool
     var $t13: &vector<u8>
     var $t14: vector<u8>
     var $t15: &vector<u8>
     var $t16: vector<u8>
     var $t17: u64
     var $t18: &mut u64
     var $t19: u64
     var $t20: u64
     var $t21: &mut vector<u8>
     var $t22: vector<u8>
     var $t23: vector<u8>
     var $t24: bool
     var $t25: u64
     var $t26: u64
     var $t27: u64
     var $t28: bool
     var $t29: &vector<u8>
     var $t30: vector<u8>
     var $t31: &vector<u8>
     var $t32: vector<u8>
     var $t33: u64
     var $t34: bool
     var $t35: u64
     var $t36: bool
     var $t37: &vector<u8>
     var $t38: vector<u8>
     var $t39: &vector<u8>
     var $t40: vector<u8>
     var $t41: u64
     # live vars:
  0: $t0 := true
     # live vars: $t0
  1: if ($t0) goto 2 else goto 4
     # live vars:
  2: label L0
     # live vars:
  3: goto 7
     # live vars:
  4: label L1
     # live vars:
  5: $t1 := 42
     # live vars: $t1
  6: abort($t1)
     # live vars:
  7: label L2
     # live vars:
  8: $t4 := [104, 101, 108, 108, 111]
     # live vars: $t4
  9: $t3 := borrow_local($t4)
     # live vars: $t3
 10: $t6 := [104, 101, 108, 108, 111]
     # live vars: $t3, $t6
 11: $t5 := borrow_local($t6)
     # live vars: $t3, $t5
 12: $t2 := ==($t3, $t5)
     # live vars: $t2
 13: if ($t2) goto 14 else goto 16
     # live vars:
 14: label L3
     # live vars:
 15: goto 19
     # live vars:
 16: label L4
     # live vars:
 17: $t7 := 42
     # live vars: $t7
 18: abort($t7)
     # live vars:
 19: label L5
     # live vars:
 20: $t9 := 0
     # live vars: $t9
 21: $t10 := 0
     # live vars: $t9, $t10
 22: $t8 := ==($t9, $t10)
     # live vars: $t8
 23: if ($t8) goto 24 else goto 26
     # live vars:
 24: label L6
     # live vars:
 25: goto 29
     # live vars:
 26: label L7
     # live vars:
 27: $t11 := 42
     # live vars: $t11
 28: abort($t11)
     # live vars:
 29: label L8
     # live vars:
 30: $t14 := [104, 101, 108, 108, 111]
     # live vars: $t14
 31: $t13 := borrow_local($t14)
     # live vars: $t13
 32: $t16 := [104, 101, 108, 108, 111]
     # live vars: $t13, $t16
 33: $t15 := borrow_local($t16)
     # live vars: $t13, $t15
 34: $t12 := ==($t13, $t15)
     # live vars: $t12
 35: if ($t12) goto 36 else goto 38
     # live vars:
 36: label L9
     # live vars:
 37: goto 41
     # live vars:
 38: label L10
     # live vars:
 39: $t17 := 42
     # live vars: $t17
 40: abort($t17)
     # live vars:
 41: label L11
     # live vars:
 42: $t19 := 0
     # live vars: $t19
 43: $t18 := borrow_local($t19)
     # live vars: $t18
 44: $t20 := 1
     # live vars: $t18, $t20
 45: write_ref($t18, $t20)
     # live vars: $t18
 46: $t22 := [104, 101, 108, 108, 111]
     # live vars: $t18, $t22
 47: $t21 := borrow_local($t22)
     # live vars: $t18, $t21
 48: $t23 := [98, 121, 101]
     # live vars: $t18, $t21, $t23
 49: write_ref($t21, $t23)
     # live vars: $t18, $t21
 50: $t25 := read_ref($t18)
     # live vars: $t21, $t25
 51: $t26 := 1
     # live vars: $t21, $t25, $t26
 52: $t24 := ==($t25, $t26)
     # live vars: $t21, $t24
 53: if ($t24) goto 54 else goto 56
     # live vars: $t21
 54: label L12
     # live vars: $t21
 55: goto 59
     # live vars: $t21
 56: label L13
     # live vars:
 57: $t27 := 42
     # live vars: $t27
 58: abort($t27)
     # live vars: $t21
 59: label L14
     # live vars: $t21
 60: $t30 := read_ref($t21)
     # live vars: $t30
 61: $t29 := borrow_local($t30)
     # live vars: $t29
 62: $t32 := [98, 121, 101]
     # live vars: $t29, $t32
 63: $t31 := borrow_local($t32)
     # live vars: $t29, $t31
 64: $t28 := ==($t29, $t31)
     # live vars: $t28
 65: if ($t28) goto 66 else goto 68
     # live vars:
 66: label L15
     # live vars:
 67: goto 71
     # live vars:
 68: label L16
     # live vars:
 69: $t33 := 42
     # live vars: $t33
 70: abort($t33)
     # live vars:
 71: label L17
     # live vars:
 72: $t34 := true
     # live vars: $t34
 73: if ($t34) goto 74 else goto 76
     # live vars:
 74: label L18
     # live vars:
 75: goto 79
     # live vars:
 76: label L19
     # live vars:
 77: $t35 := 42
     # live vars: $t35
 78: abort($t35)
     # live vars:
 79: label L20
     # live vars:
 80: $t38 := [104, 101, 108, 108, 111]
     # live vars: $t38
 81: $t37 := borrow_local($t38)
     # live vars: $t37
 82: $t40 := [104, 101, 108, 108, 111]
     # live vars: $t37, $t40
 83: $t39 := borrow_local($t40)
     # live vars: $t37, $t39
 84: $t36 := ==($t37, $t39)
     # live vars: $t36
 85: if ($t36) goto 86 else goto 88
     # live vars:
 86: label L21
     # live vars:
 87: goto 91
     # live vars:
 88: label L22
     # live vars:
 89: $t41 := 42
     # live vars: $t41
 90: abort($t41)
     # live vars:
 91: label L23
     # live vars:
 92: return ()
}

============ after ReferenceSafetyProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: bool
     var $t3: &vector<u8>
     var $t4: vector<u8>
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: u64
     var $t8: bool
     var $t9: u64
     var $t10: u64
     var $t11: u64
     var $t12: bool
     var $t13: &vector<u8>
     var $t14: vector<u8>
     var $t15: &vector<u8>
     var $t16: vector<u8>
     var $t17: u64
     var $t18: &mut u64
     var $t19: u64
     var $t20: u64
     var $t21: &mut vector<u8>
     var $t22: vector<u8>
     var $t23: vector<u8>
     var $t24: bool
     var $t25: u64
     var $t26: u64
     var $t27: u64
     var $t28: bool
     var $t29: &vector<u8>
     var $t30: vector<u8>
     var $t31: &vector<u8>
     var $t32: vector<u8>
     var $t33: u64
     var $t34: bool
     var $t35: u64
     var $t36: bool
     var $t37: &vector<u8>
     var $t38: vector<u8>
     var $t39: &vector<u8>
     var $t40: vector<u8>
     var $t41: u64
     # live vars:
     # refs: []
     #
  0: $t0 := true
     # live vars: $t0
     # refs: []
     #
  1: if ($t0) goto 2 else goto 4
     # live vars:
     # refs: []
     #
  2: label L0
     # live vars:
     # refs: []
     #
  3: goto 7
     # live vars:
     # refs: []
     #
  4: label L1
     # live vars:
     # refs: []
     #
  5: $t1 := 42
     # live vars: $t1
     # refs: []
     #
  6: abort($t1)
     # live vars:
     # refs: []
     #
  7: label L2
     # live vars:
     # refs: []
     #
  8: $t4 := [104, 101, 108, 108, 111]
     # live vars: $t4
     # refs: []
     #
  9: $t3 := borrow_local($t4)
     # live vars: $t3
     # refs: [$t3 => #3]
     # #3
     #   <no edges>
     # #root
     #   => #3 via [value] at line 7
     #
 10: $t6 := [104, 101, 108, 108, 111]
     # live vars: $t3, $t6
     # refs: [$t3 => #3]
     # #3
     #   <no edges>
     # #root
     #   => #3 via [value] at line 7
     #
 11: $t5 := borrow_local($t6)
     # live vars: $t3, $t5
     # refs: [$t3 => #3, $t5 => #5]
     # #3
     #   <no edges>
     # #5
     #   <no edges>
     # #root
     #   => #3 via [value] at line 7
     #   => #5 via [value] at line 7
     #
 12: $t2 := ==($t3, $t5)
     # live vars: $t2
     # refs: []
     #
 13: if ($t2) goto 14 else goto 16
     # live vars:
     # refs: []
     #
 14: label L3
     # live vars:
     # refs: []
     #
 15: goto 19
     # live vars:
     # refs: []
     #
 16: label L4
     # live vars:
     # refs: []
     #
 17: $t7 := 42
     # live vars: $t7
     # refs: []
     #
 18: abort($t7)
     # live vars:
     # refs: []
     #
 19: label L5
     # live vars:
     # refs: []
     #
 20: $t9 := 0
     # live vars: $t9
     # refs: []
     #
 21: $t10 := 0
     # live vars: $t9, $t10
     # refs: []
     #
 22: $t8 := ==($t9, $t10)
     # live vars: $t8
     # refs: []
     #
 23: if ($t8) goto 24 else goto 26
     # live vars:
     # refs: []
     #
 24: label L6
     # live vars:
     # refs: []
     #
 25: goto 29
     # live vars:
     # refs: []
     #
 26: label L7
     # live vars:
     # refs: []
     #
 27: $t11 := 42
     # live vars: $t11
     # refs: []
     #
 28: abort($t11)
     # live vars:
     # refs: []
     #
 29: label L8
     # live vars:
     # refs: []
     #
 30: $t14 := [104, 101, 108, 108, 111]
     # live vars: $t14
     # refs: []
     #
 31: $t13 := borrow_local($t14)
     # live vars: $t13
     # refs: [$t13 => #13]
     # #13
     #   <no edges>
     # #root
     #   => #13 via [value] at line 11
     #
 32: $t16 := [104, 101, 108, 108, 111]
     # live vars: $t13, $t16
     # refs: [$t13 => #13]
     # #13
     #   <no edges>
     # #root
     #   => #13 via [value] at line 11
     #
 33: $t15 := borrow_local($t16)
     # live vars: $t13, $t15
     # refs: [$t13 => #13, $t15 => #15]
     # #13
     #   <no edges>
     # #15
     #   <no edges>
     # #root
     #   => #13 via [value] at line 11
     #   => #15 via [value] at line 11
     #
 34: $t12 := ==($t13, $t15)
     # live vars: $t12
     # refs: []
     #
 35: if ($t12) goto 36 else goto 38
     # live vars:
     # refs: []
     #
 36: label L9
     # live vars:
     # refs: []
     #
 37: goto 41
     # live vars:
     # refs: []
     #
 38: label L10
     # live vars:
     # refs: []
     #
 39: $t17 := 42
     # live vars: $t17
     # refs: []
     #
 40: abort($t17)
     # live vars:
     # refs: []
     #
 41: label L11
     # live vars:
     # refs: []
     #
 42: $t19 := 0
     # live vars: $t19
     # refs: []
     #
 43: $t18 := borrow_local($t19)
     # live vars: $t18
     # refs: [$t18 => #18]
     # #18
     #   <no edges>
     # #root
     #   => (mut) #18 via [value] at line 13
     #
 44: $t20 := 1
     # live vars: $t18, $t20
     # refs: [$t18 => #18]
     # #18
     #   <no edges>
     # #root
     #   => (mut) #18 via [value] at line 13
     #
 45: write_ref($t18, $t20)
     # live vars: $t18
     # refs: [$t18 => #18]
     # #18
     #   <no edges>
     # #root
     #   => (mut) #18 via [value] at line 13
     #
 46: $t22 := [104, 101, 108, 108, 111]
     # live vars: $t18, $t22
     # refs: [$t18 => #18]
     # #18
     #   <no edges>
     # #root
     #   => (mut) #18 via [value] at line 13
     #
 47: $t21 := borrow_local($t22)
     # live vars: $t18, $t21
     # refs: [$t18 => #18, $t21 => #21]
     # #18
     #   <no edges>
     # #21
     #   <no edges>
     # #root
     #   => (mut) #18 via [value] at line 13
     #   => (mut) #21 via [value] at line 15
     #
 48: $t23 := [98, 121, 101]
     # live vars: $t18, $t21, $t23
     # refs: [$t18 => #18, $t21 => #21]
     # #18
     #   <no edges>
     # #21
     #   <no edges>
     # #root
     #   => (mut) #18 via [value] at line 13
     #   => (mut) #21 via [value] at line 15
     #
 49: write_ref($t21, $t23)
     # live vars: $t18, $t21
     # refs: [$t18 => #18, $t21 => #21]
     # #18
     #   <no edges>
     # #21
     #   <no edges>
     # #root
     #   => (mut) #18 via [value] at line 13
     #   => (mut) #21 via [value] at line 15
     #
 50: $t25 := read_ref($t18)
     # live vars: $t21, $t25
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 51: $t26 := 1
     # live vars: $t21, $t25, $t26
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 52: $t24 := ==($t25, $t26)
     # live vars: $t21, $t24
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 53: if ($t24) goto 54 else goto 56
     # live vars: $t21
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 54: label L12
     # live vars: $t21
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 55: goto 59
     # live vars: $t21
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 56: label L13
     # live vars:
     # refs: []
     #
 57: $t27 := 42
     # live vars: $t27
     # refs: []
     #
 58: abort($t27)
     # live vars: $t21
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 59: label L14
     # live vars: $t21
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 60: $t30 := read_ref($t21)
     # live vars: $t30
     # refs: []
     #
 61: $t29 := borrow_local($t30)
     # live vars: $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   => #29 via [value] at line 18
     #
 62: $t32 := [98, 121, 101]
     # live vars: $t29, $t32
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   => #29 via [value] at line 18
     #
 63: $t31 := borrow_local($t32)
     # live vars: $t29, $t31
     # refs: [$t29 => #29, $t31 => #31]
     # #29
     #   <no edges>
     # #31
     #   <no edges>
     # #root
     #   => #29 via [value] at line 18
     #   => #31 via [value] at line 18
     #
 64: $t28 := ==($t29, $t31)
     # live vars: $t28
     # refs: []
     #
 65: if ($t28) goto 66 else goto 68
     # live vars:
     # refs: []
     #
 66: label L15
     # live vars:
     # refs: []
     #
 67: goto 71
     # live vars:
     # refs: []
     #
 68: label L16
     # live vars:
     # refs: []
     #
 69: $t33 := 42
     # live vars: $t33
     # refs: []
     #
 70: abort($t33)
     # live vars:
     # refs: []
     #
 71: label L17
     # live vars:
     # refs: []
     #
 72: $t34 := true
     # live vars: $t34
     # refs: []
     #
 73: if ($t34) goto 74 else goto 76
     # live vars:
     # refs: []
     #
 74: label L18
     # live vars:
     # refs: []
     #
 75: goto 79
     # live vars:
     # refs: []
     #
 76: label L19
     # live vars:
     # refs: []
     #
 77: $t35 := 42
     # live vars: $t35
     # refs: []
     #
 78: abort($t35)
     # live vars:
     # refs: []
     #
 79: label L20
     # live vars:
     # refs: []
     #
 80: $t38 := [104, 101, 108, 108, 111]
     # live vars: $t38
     # refs: []
     #
 81: $t37 := borrow_local($t38)
     # live vars: $t37
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [value] at line 22
     #
 82: $t40 := [104, 101, 108, 108, 111]
     # live vars: $t37, $t40
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [value] at line 22
     #
 83: $t39 := borrow_local($t40)
     # live vars: $t37, $t39
     # refs: [$t37 => #37, $t39 => #39]
     # #37
     #   <no edges>
     # #39
     #   <no edges>
     # #root
     #   => #37 via [value] at line 22
     #   => #39 via [value] at line 22
     #
 84: $t36 := ==($t37, $t39)
     # live vars: $t36
     # refs: []
     #
 85: if ($t36) goto 86 else goto 88
     # live vars:
     # refs: []
     #
 86: label L21
     # live vars:
     # refs: []
     #
 87: goto 91
     # live vars:
     # refs: []
     #
 88: label L22
     # live vars:
     # refs: []
     #
 89: $t41 := 42
     # live vars: $t41
     # refs: []
     #
 90: abort($t41)
     # live vars:
     # refs: []
     #
 91: label L23
     # live vars:
     # refs: []
     #
 92: return ()
}

============ after AbortAnalysisProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: bool
     var $t3: &vector<u8>
     var $t4: vector<u8>
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: u64
     var $t8: bool
     var $t9: u64
     var $t10: u64
     var $t11: u64
     var $t12: bool
     var $t13: &vector<u8>
     var $t14: vector<u8>
     var $t15: &vector<u8>
     var $t16: vector<u8>
     var $t17: u64
     var $t18: &mut u64
     var $t19: u64
     var $t20: u64
     var $t21: &mut vector<u8>
     var $t22: vector<u8>
     var $t23: vector<u8>
     var $t24: bool
     var $t25: u64
     var $t26: u64
     var $t27: u64
     var $t28: bool
     var $t29: &vector<u8>
     var $t30: vector<u8>
     var $t31: &vector<u8>
     var $t32: vector<u8>
     var $t33: u64
     var $t34: bool
     var $t35: u64
     var $t36: bool
     var $t37: &vector<u8>
     var $t38: vector<u8>
     var $t39: &vector<u8>
     var $t40: vector<u8>
     var $t41: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t0 := true
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
  1: if ($t0) goto 2 else goto 4
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  2: label L0
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  3: goto 7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
  4: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
  5: $t1 := 42
     # abort state: {aborts}
     # live vars: $t1
     # refs: []
     #
  6: abort($t1)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  7: label L2
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  8: $t4 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t4
     # refs: []
     #
  9: $t3 := borrow_local($t4)
     # abort state: {returns,aborts}
     # live vars: $t3
     # refs: [$t3 => #3]
     # #3
     #   <no edges>
     # #root
     #   => #3 via [value] at line 7
     #
 10: $t6 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t3, $t6
     # refs: [$t3 => #3]
     # #3
     #   <no edges>
     # #root
     #   => #3 via [value] at line 7
     #
 11: $t5 := borrow_local($t6)
     # abort state: {returns,aborts}
     # live vars: $t3, $t5
     # refs: [$t3 => #3, $t5 => #5]
     # #3
     #   <no edges>
     # #5
     #   <no edges>
     # #root
     #   => #3 via [value] at line 7
     #   => #5 via [value] at line 7
     #
 12: $t2 := ==($t3, $t5)
     # abort state: {returns,aborts}
     # live vars: $t2
     # refs: []
     #
 13: if ($t2) goto 14 else goto 16
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 14: label L3
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 15: goto 19
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 16: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 17: $t7 := 42
     # abort state: {aborts}
     # live vars: $t7
     # refs: []
     #
 18: abort($t7)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 19: label L5
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 20: $t9 := 0
     # abort state: {returns,aborts}
     # live vars: $t9
     # refs: []
     #
 21: $t10 := 0
     # abort state: {returns,aborts}
     # live vars: $t9, $t10
     # refs: []
     #
 22: $t8 := ==($t9, $t10)
     # abort state: {returns,aborts}
     # live vars: $t8
     # refs: []
     #
 23: if ($t8) goto 24 else goto 26
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 24: label L6
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 25: goto 29
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 26: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 27: $t11 := 42
     # abort state: {aborts}
     # live vars: $t11
     # refs: []
     #
 28: abort($t11)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 29: label L8
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 30: $t14 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t14
     # refs: []
     #
 31: $t13 := borrow_local($t14)
     # abort state: {returns,aborts}
     # live vars: $t13
     # refs: [$t13 => #13]
     # #13
     #   <no edges>
     # #root
     #   => #13 via [value] at line 11
     #
 32: $t16 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t13, $t16
     # refs: [$t13 => #13]
     # #13
     #   <no edges>
     # #root
     #   => #13 via [value] at line 11
     #
 33: $t15 := borrow_local($t16)
     # abort state: {returns,aborts}
     # live vars: $t13, $t15
     # refs: [$t13 => #13, $t15 => #15]
     # #13
     #   <no edges>
     # #15
     #   <no edges>
     # #root
     #   => #13 via [value] at line 11
     #   => #15 via [value] at line 11
     #
 34: $t12 := ==($t13, $t15)
     # abort state: {returns,aborts}
     # live vars: $t12
     # refs: []
     #
 35: if ($t12) goto 36 else goto 38
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 36: label L9
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 37: goto 41
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 38: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 39: $t17 := 42
     # abort state: {aborts}
     # live vars: $t17
     # refs: []
     #
 40: abort($t17)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 41: label L11
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 42: $t19 := 0
     # abort state: {returns,aborts}
     # live vars: $t19
     # refs: []
     #
 43: $t18 := borrow_local($t19)
     # abort state: {returns,aborts}
     # live vars: $t18
     # refs: [$t18 => #18]
     # #18
     #   <no edges>
     # #root
     #   => (mut) #18 via [value] at line 13
     #
 44: $t20 := 1
     # abort state: {returns,aborts}
     # live vars: $t18, $t20
     # refs: [$t18 => #18]
     # #18
     #   <no edges>
     # #root
     #   => (mut) #18 via [value] at line 13
     #
 45: write_ref($t18, $t20)
     # abort state: {returns,aborts}
     # live vars: $t18
     # refs: [$t18 => #18]
     # #18
     #   <no edges>
     # #root
     #   => (mut) #18 via [value] at line 13
     #
 46: $t22 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t18, $t22
     # refs: [$t18 => #18]
     # #18
     #   <no edges>
     # #root
     #   => (mut) #18 via [value] at line 13
     #
 47: $t21 := borrow_local($t22)
     # abort state: {returns,aborts}
     # live vars: $t18, $t21
     # refs: [$t18 => #18, $t21 => #21]
     # #18
     #   <no edges>
     # #21
     #   <no edges>
     # #root
     #   => (mut) #18 via [value] at line 13
     #   => (mut) #21 via [value] at line 15
     #
 48: $t23 := [98, 121, 101]
     # abort state: {returns,aborts}
     # live vars: $t18, $t21, $t23
     # refs: [$t18 => #18, $t21 => #21]
     # #18
     #   <no edges>
     # #21
     #   <no edges>
     # #root
     #   => (mut) #18 via [value] at line 13
     #   => (mut) #21 via [value] at line 15
     #
 49: write_ref($t21, $t23)
     # abort state: {returns,aborts}
     # live vars: $t18, $t21
     # refs: [$t18 => #18, $t21 => #21]
     # #18
     #   <no edges>
     # #21
     #   <no edges>
     # #root
     #   => (mut) #18 via [value] at line 13
     #   => (mut) #21 via [value] at line 15
     #
 50: $t25 := read_ref($t18)
     # abort state: {returns,aborts}
     # live vars: $t21, $t25
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 51: $t26 := 1
     # abort state: {returns,aborts}
     # live vars: $t21, $t25, $t26
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 52: $t24 := ==($t25, $t26)
     # abort state: {returns,aborts}
     # live vars: $t21, $t24
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 53: if ($t24) goto 54 else goto 56
     # abort state: {returns,aborts}
     # live vars: $t21
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 54: label L12
     # abort state: {returns,aborts}
     # live vars: $t21
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 55: goto 59
     # abort state: {aborts}
     # live vars: $t21
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 56: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 57: $t27 := 42
     # abort state: {aborts}
     # live vars: $t27
     # refs: []
     #
 58: abort($t27)
     # abort state: {returns,aborts}
     # live vars: $t21
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 59: label L14
     # abort state: {returns,aborts}
     # live vars: $t21
     # refs: [$t21 => #21]
     # #21
     #   <no edges>
     # #root
     #   => (mut) #21 via [value] at line 15
     #
 60: $t30 := read_ref($t21)
     # abort state: {returns,aborts}
     # live vars: $t30
     # refs: []
     #
 61: $t29 := borrow_local($t30)
     # abort state: {returns,aborts}
     # live vars: $t29
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   => #29 via [value] at line 18
     #
 62: $t32 := [98, 121, 101]
     # abort state: {returns,aborts}
     # live vars: $t29, $t32
     # refs: [$t29 => #29]
     # #29
     #   <no edges>
     # #root
     #   => #29 via [value] at line 18
     #
 63: $t31 := borrow_local($t32)
     # abort state: {returns,aborts}
     # live vars: $t29, $t31
     # refs: [$t29 => #29, $t31 => #31]
     # #29
     #   <no edges>
     # #31
     #   <no edges>
     # #root
     #   => #29 via [value] at line 18
     #   => #31 via [value] at line 18
     #
 64: $t28 := ==($t29, $t31)
     # abort state: {returns,aborts}
     # live vars: $t28
     # refs: []
     #
 65: if ($t28) goto 66 else goto 68
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 66: label L15
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 67: goto 71
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 68: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 69: $t33 := 42
     # abort state: {aborts}
     # live vars: $t33
     # refs: []
     #
 70: abort($t33)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 71: label L17
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 72: $t34 := true
     # abort state: {returns,aborts}
     # live vars: $t34
     # refs: []
     #
 73: if ($t34) goto 74 else goto 76
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 74: label L18
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 75: goto 79
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 76: label L19
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 77: $t35 := 42
     # abort state: {aborts}
     # live vars: $t35
     # refs: []
     #
 78: abort($t35)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 79: label L20
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 80: $t38 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t38
     # refs: []
     #
 81: $t37 := borrow_local($t38)
     # abort state: {returns,aborts}
     # live vars: $t37
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [value] at line 22
     #
 82: $t40 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t37, $t40
     # refs: [$t37 => #37]
     # #37
     #   <no edges>
     # #root
     #   => #37 via [value] at line 22
     #
 83: $t39 := borrow_local($t40)
     # abort state: {returns,aborts}
     # live vars: $t37, $t39
     # refs: [$t37 => #37, $t39 => #39]
     # #37
     #   <no edges>
     # #39
     #   <no edges>
     # #root
     #   => #37 via [value] at line 22
     #   => #39 via [value] at line 22
     #
 84: $t36 := ==($t37, $t39)
     # abort state: {returns,aborts}
     # live vars: $t36
     # refs: []
     #
 85: if ($t36) goto 86 else goto 88
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 86: label L21
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 87: goto 91
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 88: label L22
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 89: $t41 := 42
     # abort state: {aborts}
     # live vars: $t41
     # refs: []
     #
 90: abort($t41)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 91: label L23
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 92: return ()
}

============ after AbilityProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: bool
     var $t3: &vector<u8>
     var $t4: vector<u8>
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: u64
     var $t8: bool
     var $t9: u64
     var $t10: u64
     var $t11: u64
     var $t12: bool
     var $t13: &vector<u8>
     var $t14: vector<u8>
     var $t15: &vector<u8>
     var $t16: vector<u8>
     var $t17: u64
     var $t18: &mut u64
     var $t19: u64
     var $t20: u64
     var $t21: &mut vector<u8>
     var $t22: vector<u8>
     var $t23: vector<u8>
     var $t24: bool
     var $t25: u64
     var $t26: u64
     var $t27: u64
     var $t28: bool
     var $t29: &vector<u8>
     var $t30: vector<u8>
     var $t31: &vector<u8>
     var $t32: vector<u8>
     var $t33: u64
     var $t34: bool
     var $t35: u64
     var $t36: bool
     var $t37: &vector<u8>
     var $t38: vector<u8>
     var $t39: &vector<u8>
     var $t40: vector<u8>
     var $t41: u64
  0: $t0 := true
  1: if ($t0) goto 2 else goto 4
  2: label L0
  3: goto 7
  4: label L1
  5: $t1 := 42
  6: abort($t1)
  7: label L2
  8: $t4 := [104, 101, 108, 108, 111]
  9: $t3 := borrow_local($t4)
 10: $t6 := [104, 101, 108, 108, 111]
 11: $t5 := borrow_local($t6)
 12: $t2 := ==($t3, $t5)
 13: if ($t2) goto 14 else goto 16
 14: label L3
 15: goto 19
 16: label L4
 17: $t7 := 42
 18: abort($t7)
 19: label L5
 20: $t9 := 0
 21: $t10 := 0
 22: $t8 := ==($t9, $t10)
 23: if ($t8) goto 24 else goto 26
 24: label L6
 25: goto 29
 26: label L7
 27: $t11 := 42
 28: abort($t11)
 29: label L8
 30: $t14 := [104, 101, 108, 108, 111]
 31: $t13 := borrow_local($t14)
 32: $t16 := [104, 101, 108, 108, 111]
 33: $t15 := borrow_local($t16)
 34: $t12 := ==($t13, $t15)
 35: if ($t12) goto 36 else goto 38
 36: label L9
 37: goto 41
 38: label L10
 39: $t17 := 42
 40: abort($t17)
 41: label L11
 42: $t19 := 0
 43: $t18 := borrow_local($t19)
 44: $t20 := 1
 45: write_ref($t18, $t20)
 46: $t22 := [104, 101, 108, 108, 111]
 47: $t21 := borrow_local($t22)
 48: $t23 := [98, 121, 101]
 49: write_ref($t21, $t23)
 50: $t25 := read_ref($t18)
 51: $t26 := 1
 52: $t24 := ==($t25, $t26)
 53: if ($t24) goto 54 else goto 56
 54: label L12
 55: goto 60
 56: label L13
 57: drop($t21)
 58: $t27 := 42
 59: abort($t27)
 60: label L14
 61: $t30 := read_ref($t21)
 62: $t29 := borrow_local($t30)
 63: $t32 := [98, 121, 101]
 64: $t31 := borrow_local($t32)
 65: $t28 := ==($t29, $t31)
 66: if ($t28) goto 67 else goto 69
 67: label L15
 68: goto 72
 69: label L16
 70: $t33 := 42
 71: abort($t33)
 72: label L17
 73: $t34 := true
 74: if ($t34) goto 75 else goto 77
 75: label L18
 76: goto 80
 77: label L19
 78: $t35 := 42
 79: abort($t35)
 80: label L20
 81: $t38 := [104, 101, 108, 108, 111]
 82: $t37 := borrow_local($t38)
 83: $t40 := [104, 101, 108, 108, 111]
 84: $t39 := borrow_local($t40)
 85: $t36 := ==($t37, $t39)
 86: if ($t36) goto 87 else goto 89
 87: label L21
 88: goto 92
 89: label L22
 90: $t41 := 42
 91: abort($t41)
 92: label L23
 93: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: bool
     var $t3: &vector<u8>
     var $t4: vector<u8>
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: u64
     var $t8: bool
     var $t9: u64
     var $t10: u64
     var $t11: u64
     var $t12: bool
     var $t13: &vector<u8>
     var $t14: vector<u8>
     var $t15: &vector<u8>
     var $t16: vector<u8>
     var $t17: u64
     var $t18: &mut u64
     var $t19: u64
     var $t20: u64
     var $t21: &mut vector<u8>
     var $t22: vector<u8>
     var $t23: vector<u8>
     var $t24: bool
     var $t25: u64
     var $t26: u64
     var $t27: u64
     var $t28: bool
     var $t29: &vector<u8>
     var $t30: vector<u8>
     var $t31: &vector<u8>
     var $t32: vector<u8>
     var $t33: u64
     var $t34: bool
     var $t35: u64
     var $t36: bool
     var $t37: &vector<u8>
     var $t38: vector<u8>
     var $t39: &vector<u8>
     var $t40: vector<u8>
     var $t41: u64
     # live vars:
  0: $t0 := true
     # live vars: $t0
  1: if ($t0) goto 2 else goto 75
     # live vars:
  2: label L0
     # live vars:
  3: $t4 := [104, 101, 108, 108, 111]
     # live vars: $t4
  4: $t3 := borrow_local($t4)
     # live vars: $t3
  5: $t6 := [104, 101, 108, 108, 111]
     # live vars: $t3, $t6
  6: $t5 := borrow_local($t6)
     # live vars: $t3, $t5
  7: $t2 := ==($t3, $t5)
     # live vars: $t2
  8: if ($t2) goto 9 else goto 72
     # live vars:
  9: label L3
     # live vars:
 10: $t9 := 0
     # live vars: $t9
 11: $t10 := 0
     # live vars: $t9, $t10
 12: $t8 := ==($t9, $t10)
     # live vars: $t8
 13: if ($t8) goto 14 else goto 69
     # live vars:
 14: label L6
     # live vars:
 15: $t14 := [104, 101, 108, 108, 111]
     # live vars: $t14
 16: $t13 := borrow_local($t14)
     # live vars: $t13
 17: $t16 := [104, 101, 108, 108, 111]
     # live vars: $t13, $t16
 18: $t15 := borrow_local($t16)
     # live vars: $t13, $t15
 19: $t12 := ==($t13, $t15)
     # live vars: $t12
 20: if ($t12) goto 21 else goto 66
     # live vars:
 21: label L9
     # live vars:
 22: $t19 := 0
     # live vars: $t19
 23: $t18 := borrow_local($t19)
     # live vars: $t18
 24: $t20 := 1
     # live vars: $t18, $t20
 25: write_ref($t18, $t20)
     # live vars: $t18
 26: $t22 := [104, 101, 108, 108, 111]
     # live vars: $t18, $t22
 27: $t21 := borrow_local($t22)
     # live vars: $t18, $t21
 28: $t23 := [98, 121, 101]
     # live vars: $t18, $t21, $t23
 29: write_ref($t21, $t23)
     # live vars: $t18, $t21
 30: $t25 := read_ref($t18)
     # live vars: $t21, $t25
 31: $t26 := 1
     # live vars: $t21, $t25, $t26
 32: $t24 := ==($t25, $t26)
     # live vars: $t21, $t24
 33: if ($t24) goto 34 else goto 62
     # live vars: $t21
 34: label L12
     # live vars: $t21
 35: $t30 := read_ref($t21)
     # live vars: $t30
 36: $t29 := borrow_local($t30)
     # live vars: $t29
 37: $t32 := [98, 121, 101]
     # live vars: $t29, $t32
 38: $t31 := borrow_local($t32)
     # live vars: $t29, $t31
 39: $t28 := ==($t29, $t31)
     # live vars: $t28
 40: if ($t28) goto 41 else goto 59
     # live vars:
 41: label L15
     # live vars:
 42: $t34 := true
     # live vars: $t34
 43: if ($t34) goto 44 else goto 56
     # live vars:
 44: label L18
     # live vars:
 45: $t38 := [104, 101, 108, 108, 111]
     # live vars: $t38
 46: $t37 := borrow_local($t38)
     # live vars: $t37
 47: $t40 := [104, 101, 108, 108, 111]
     # live vars: $t37, $t40
 48: $t39 := borrow_local($t40)
     # live vars: $t37, $t39
 49: $t36 := ==($t37, $t39)
     # live vars: $t36
 50: if ($t36) goto 51 else goto 53
     # live vars:
 51: label L21
     # live vars:
 52: return ()
     # live vars:
 53: label L22
     # live vars:
 54: $t41 := 42
     # live vars: $t41
 55: abort($t41)
     # live vars:
 56: label L19
     # live vars:
 57: $t35 := 42
     # live vars: $t35
 58: abort($t35)
     # live vars:
 59: label L16
     # live vars:
 60: $t33 := 42
     # live vars: $t33
 61: abort($t33)
     # live vars: $t21
 62: label L13
     # live vars: $t21
 63: drop($t21)
     # live vars:
 64: $t27 := 42
     # live vars: $t27
 65: abort($t27)
     # live vars:
 66: label L10
     # live vars:
 67: $t17 := 42
     # live vars: $t17
 68: abort($t17)
     # live vars:
 69: label L7
     # live vars:
 70: $t11 := 42
     # live vars: $t11
 71: abort($t11)
     # live vars:
 72: label L4
     # live vars:
 73: $t7 := 42
     # live vars: $t7
 74: abort($t7)
     # live vars:
 75: label L1
     # live vars:
 76: $t1 := 42
     # live vars: $t1
 77: abort($t1)
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: bool
     var $t3: &vector<u8>
     var $t4: vector<u8>
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: u64
     var $t8: bool
     var $t9: u64
     var $t10: u64
     var $t11: u64
     var $t12: bool
     var $t13: &vector<u8>
     var $t14: vector<u8>
     var $t15: &vector<u8>
     var $t16: vector<u8>
     var $t17: u64
     var $t18: &mut u64
     var $t19: u64
     var $t20: u64
     var $t21: &mut vector<u8>
     var $t22: vector<u8>
     var $t23: vector<u8>
     var $t24: bool
     var $t25: u64
     var $t26: u64
     var $t27: u64
     var $t28: bool
     var $t29: &vector<u8>
     var $t30: vector<u8>
     var $t31: &vector<u8>
     var $t32: vector<u8>
     var $t33: u64
     var $t34: bool
     var $t35: u64
     var $t36: bool
     var $t37: &vector<u8>
     var $t38: vector<u8>
     var $t39: &vector<u8>
     var $t40: vector<u8>
     var $t41: u64
     # live vars:
  0: $t0 := true
     # live vars: $t0
  1: if ($t0) goto 2 else goto 75
     # live vars:
  2: label L0
     # live vars:
  3: $t4 := [104, 101, 108, 108, 111]
     # live vars: $t4
  4: $t3 := borrow_local($t4)
     # live vars: $t3
  5: $t6 := [104, 101, 108, 108, 111]
     # live vars: $t3, $t6
  6: $t5 := borrow_local($t6)
     # live vars: $t3, $t5
  7: $t2 := ==($t3, $t5)
     # live vars: $t2
  8: if ($t2) goto 9 else goto 72
     # live vars:
  9: label L3
     # live vars:
 10: $t9 := 0
     # live vars: $t9
 11: $t10 := 0
     # live vars: $t9, $t10
 12: $t8 := ==($t9, $t10)
     # live vars: $t8
 13: if ($t8) goto 14 else goto 69
     # live vars:
 14: label L6
     # live vars:
 15: $t14 := [104, 101, 108, 108, 111]
     # live vars: $t14
 16: $t13 := borrow_local($t14)
     # live vars: $t13
 17: $t16 := [104, 101, 108, 108, 111]
     # live vars: $t13, $t16
 18: $t15 := borrow_local($t16)
     # live vars: $t13, $t15
 19: $t12 := ==($t13, $t15)
     # live vars: $t12
 20: if ($t12) goto 21 else goto 66
     # live vars:
 21: label L9
     # live vars:
 22: $t19 := 0
     # live vars: $t19
 23: $t18 := borrow_local($t19)
     # live vars: $t18
 24: $t20 := 1
     # live vars: $t18, $t20
 25: write_ref($t18, $t20)
     # live vars: $t18
 26: $t22 := [104, 101, 108, 108, 111]
     # live vars: $t18, $t22
 27: $t21 := borrow_local($t22)
     # live vars: $t18, $t21
 28: $t23 := [98, 121, 101]
     # live vars: $t18, $t21, $t23
 29: write_ref($t21, $t23)
     # live vars: $t18, $t21
 30: $t25 := read_ref($t18)
     # live vars: $t21, $t25
 31: $t26 := 1
     # live vars: $t21, $t25, $t26
 32: $t24 := ==($t25, $t26)
     # live vars: $t21, $t24
 33: if ($t24) goto 34 else goto 62
     # live vars: $t21
 34: label L12
     # live vars: $t21
 35: $t30 := read_ref($t21)
     # live vars: $t30
 36: $t29 := borrow_local($t30)
     # live vars: $t29
 37: $t32 := [98, 121, 101]
     # live vars: $t29, $t32
 38: $t31 := borrow_local($t32)
     # live vars: $t29, $t31
 39: $t28 := ==($t29, $t31)
     # live vars: $t28
 40: if ($t28) goto 41 else goto 59
     # live vars:
 41: label L15
     # live vars:
 42: $t34 := true
     # live vars: $t34
 43: if ($t34) goto 44 else goto 56
     # live vars:
 44: label L18
     # live vars:
 45: $t38 := [104, 101, 108, 108, 111]
     # live vars: $t38
 46: $t37 := borrow_local($t38)
     # live vars: $t37
 47: $t40 := [104, 101, 108, 108, 111]
     # live vars: $t37, $t40
 48: $t39 := borrow_local($t40)
     # live vars: $t37, $t39
 49: $t36 := ==($t37, $t39)
     # live vars: $t36
 50: if ($t36) goto 51 else goto 53
     # live vars:
 51: label L21
     # live vars:
 52: return ()
     # live vars:
 53: label L22
     # live vars:
 54: $t41 := 42
     # live vars: $t41
 55: abort($t41)
     # live vars:
 56: label L19
     # live vars:
 57: $t35 := 42
     # live vars: $t35
 58: abort($t35)
     # live vars:
 59: label L16
     # live vars:
 60: $t33 := 42
     # live vars: $t33
 61: abort($t33)
     # live vars: $t21
 62: label L13
     # live vars: $t21
 63: drop($t21)
     # live vars:
 64: $t27 := 42
     # live vars: $t27
 65: abort($t27)
     # live vars:
 66: label L10
     # live vars:
 67: $t17 := 42
     # live vars: $t17
 68: abort($t17)
     # live vars:
 69: label L7
     # live vars:
 70: $t11 := 42
     # live vars: $t11
 71: abort($t11)
     # live vars:
 72: label L4
     # live vars:
 73: $t7 := 42
     # live vars: $t7
 74: abort($t7)
     # live vars:
 75: label L1
     # live vars:
 76: $t1 := 42
     # live vars: $t1
 77: abort($t1)
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64 [unused]
     var $t2: bool [unused]
     var $t3: &vector<u8>
     var $t4: vector<u8>
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: u64 [unused]
     var $t8: bool [unused]
     var $t9: u64
     var $t10: u64
     var $t11: u64 [unused]
     var $t12: bool [unused]
     var $t13: &vector<u8> [unused]
     var $t14: vector<u8>
     var $t15: &vector<u8> [unused]
     var $t16: vector<u8>
     var $t17: u64 [unused]
     var $t18: &mut u64
     var $t19: u64
     var $t20: u64 [unused]
     var $t21: &mut vector<u8>
     var $t22: vector<u8>
     var $t23: vector<u8>
     var $t24: bool [unused]
     var $t25: u64 [unused]
     var $t26: u64 [unused]
     var $t27: u64 [unused]
     var $t28: bool [unused]
     var $t29: &vector<u8> [unused]
     var $t30: vector<u8>
     var $t31: &vector<u8> [unused]
     var $t32: vector<u8>
     var $t33: u64 [unused]
     var $t34: bool [unused]
     var $t35: u64 [unused]
     var $t36: bool [unused]
     var $t37: &vector<u8> [unused]
     var $t38: vector<u8>
     var $t39: &vector<u8> [unused]
     var $t40: vector<u8>
     var $t41: u64 [unused]
     # live vars:
  0: $t0 := true
     # live vars: $t0
  1: if ($t0) goto 2 else goto 75
     # live vars:
  2: label L0
     # live vars:
  3: $t4 := [104, 101, 108, 108, 111]
     # live vars: $t4
  4: $t3 := borrow_local($t4)
     # live vars: $t3
  5: $t6 := [104, 101, 108, 108, 111]
     # live vars: $t3, $t6
  6: $t5 := borrow_local($t6)
     # live vars: $t3, $t5
  7: $t0 := ==($t3, $t5)
     # live vars: $t0
  8: if ($t0) goto 9 else goto 72
     # live vars:
  9: label L3
     # live vars:
 10: $t9 := 0
     # live vars: $t9
 11: $t10 := 0
     # live vars: $t9, $t10
 12: $t0 := ==($t9, $t10)
     # live vars: $t0
 13: if ($t0) goto 14 else goto 69
     # live vars:
 14: label L6
     # live vars:
 15: $t14 := [104, 101, 108, 108, 111]
     # live vars: $t14
 16: $t3 := borrow_local($t14)
     # live vars: $t3
 17: $t16 := [104, 101, 108, 108, 111]
     # live vars: $t3, $t16
 18: $t5 := borrow_local($t16)
     # live vars: $t3, $t5
 19: $t0 := ==($t3, $t5)
     # live vars: $t0
 20: if ($t0) goto 21 else goto 66
     # live vars:
 21: label L9
     # live vars:
 22: $t19 := 0
     # live vars: $t19
 23: $t18 := borrow_local($t19)
     # live vars: $t18
 24: $t9 := 1
     # live vars: $t9, $t18
 25: write_ref($t18, $t9)
     # live vars: $t18
 26: $t22 := [104, 101, 108, 108, 111]
     # live vars: $t18, $t22
 27: $t21 := borrow_local($t22)
     # live vars: $t18, $t21
 28: $t23 := [98, 121, 101]
     # live vars: $t18, $t21, $t23
 29: write_ref($t21, $t23)
     # live vars: $t18, $t21
 30: $t9 := read_ref($t18)
     # live vars: $t9, $t21
 31: $t10 := 1
     # live vars: $t9, $t10, $t21
 32: $t0 := ==($t9, $t10)
     # live vars: $t0, $t21
 33: if ($t0) goto 34 else goto 62
     # live vars: $t21
 34: label L12
     # live vars: $t21
 35: $t30 := read_ref($t21)
     # live vars: $t30
 36: $t3 := borrow_local($t30)
     # live vars: $t3
 37: $t32 := [98, 121, 101]
     # live vars: $t3, $t32
 38: $t5 := borrow_local($t32)
     # live vars: $t3, $t5
 39: $t0 := ==($t3, $t5)
     # live vars: $t0
 40: if ($t0) goto 41 else goto 59
     # live vars:
 41: label L15
     # live vars:
 42: $t0 := true
     # live vars: $t0
 43: if ($t0) goto 44 else goto 56
     # live vars:
 44: label L18
     # live vars:
 45: $t38 := [104, 101, 108, 108, 111]
     # live vars: $t38
 46: $t3 := borrow_local($t38)
     # live vars: $t3
 47: $t40 := [104, 101, 108, 108, 111]
     # live vars: $t3, $t40
 48: $t5 := borrow_local($t40)
     # live vars: $t3, $t5
 49: $t0 := ==($t3, $t5)
     # live vars: $t0
 50: if ($t0) goto 51 else goto 53
     # live vars:
 51: label L21
     # live vars:
 52: return ()
     # live vars:
 53: label L22
     # live vars:
 54: $t9 := 42
     # live vars: $t9
 55: abort($t9)
     # live vars:
 56: label L19
     # live vars:
 57: $t9 := 42
     # live vars: $t9
 58: abort($t9)
     # live vars:
 59: label L16
     # live vars:
 60: $t9 := 42
     # live vars: $t9
 61: abort($t9)
     # live vars: $t21
 62: label L13
     # live vars: $t21
 63: drop($t21)
     # live vars:
 64: $t9 := 42
     # live vars: $t9
 65: abort($t9)
     # live vars:
 66: label L10
     # live vars:
 67: $t9 := 42
     # live vars: $t9
 68: abort($t9)
     # live vars:
 69: label L7
     # live vars:
 70: $t9 := 42
     # live vars: $t9
 71: abort($t9)
     # live vars:
 72: label L4
     # live vars:
 73: $t9 := 42
     # live vars: $t9
 74: abort($t9)
     # live vars:
 75: label L1
     # live vars:
 76: $t9 := 42
     # live vars: $t9
 77: abort($t9)
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64 [unused]
     var $t2: bool [unused]
     var $t3: &vector<u8>
     var $t4: vector<u8>
     var $t5: &vector<u8>
     var $t6: vector<u8>
     var $t7: u64 [unused]
     var $t8: bool [unused]
     var $t9: u64
     var $t10: u64
     var $t11: u64 [unused]
     var $t12: bool [unused]
     var $t13: &vector<u8> [unused]
     var $t14: vector<u8>
     var $t15: &vector<u8> [unused]
     var $t16: vector<u8>
     var $t17: u64 [unused]
     var $t18: &mut u64
     var $t19: u64
     var $t20: u64 [unused]
     var $t21: &mut vector<u8>
     var $t22: vector<u8>
     var $t23: vector<u8>
     var $t24: bool [unused]
     var $t25: u64 [unused]
     var $t26: u64 [unused]
     var $t27: u64 [unused]
     var $t28: bool [unused]
     var $t29: &vector<u8> [unused]
     var $t30: vector<u8>
     var $t31: &vector<u8> [unused]
     var $t32: vector<u8>
     var $t33: u64 [unused]
     var $t34: bool [unused]
     var $t35: u64 [unused]
     var $t36: bool [unused]
     var $t37: &vector<u8> [unused]
     var $t38: vector<u8>
     var $t39: &vector<u8> [unused]
     var $t40: vector<u8>
     var $t41: u64 [unused]
     # live vars:
  0: $t0 := true
     # live vars: $t0
  1: if ($t0) goto 2 else goto 75
     # live vars:
  2: label L0
     # live vars:
  3: $t4 := [104, 101, 108, 108, 111]
     # live vars: $t4
  4: $t3 := borrow_local($t4)
     # live vars: $t3
  5: $t6 := [104, 101, 108, 108, 111]
     # live vars: $t3, $t6
  6: $t5 := borrow_local($t6)
     # live vars: $t3, $t5
  7: $t0 := ==($t3, $t5)
     # live vars: $t0
  8: if ($t0) goto 9 else goto 72
     # live vars:
  9: label L3
     # live vars:
 10: $t9 := 0
     # live vars: $t9
 11: $t10 := 0
     # live vars: $t9, $t10
 12: $t0 := ==($t9, $t10)
     # live vars: $t0
 13: if ($t0) goto 14 else goto 69
     # live vars:
 14: label L6
     # live vars:
 15: $t14 := [104, 101, 108, 108, 111]
     # live vars: $t14
 16: $t3 := borrow_local($t14)
     # live vars: $t3
 17: $t16 := [104, 101, 108, 108, 111]
     # live vars: $t3, $t16
 18: $t5 := borrow_local($t16)
     # live vars: $t3, $t5
 19: $t0 := ==($t3, $t5)
     # live vars: $t0
 20: if ($t0) goto 21 else goto 66
     # live vars:
 21: label L9
     # live vars:
 22: $t19 := 0
     # live vars: $t19
 23: $t18 := borrow_local($t19)
     # live vars: $t18
 24: $t9 := 1
     # live vars: $t9, $t18
 25: write_ref($t18, $t9)
     # live vars: $t18
 26: $t22 := [104, 101, 108, 108, 111]
     # live vars: $t18, $t22
 27: $t21 := borrow_local($t22)
     # live vars: $t18, $t21
 28: $t23 := [98, 121, 101]
     # live vars: $t18, $t21, $t23
 29: write_ref($t21, $t23)
     # live vars: $t18, $t21
 30: $t9 := read_ref($t18)
     # live vars: $t9, $t21
 31: $t10 := 1
     # live vars: $t9, $t10, $t21
 32: $t0 := ==($t9, $t10)
     # live vars: $t0, $t21
 33: if ($t0) goto 34 else goto 62
     # live vars: $t21
 34: label L12
     # live vars: $t21
 35: $t30 := read_ref($t21)
     # live vars: $t30
 36: $t3 := borrow_local($t30)
     # live vars: $t3
 37: $t32 := [98, 121, 101]
     # live vars: $t3, $t32
 38: $t5 := borrow_local($t32)
     # live vars: $t3, $t5
 39: $t0 := ==($t3, $t5)
     # live vars: $t0
 40: if ($t0) goto 41 else goto 59
     # live vars:
 41: label L15
     # live vars:
 42: $t0 := true
     # live vars: $t0
 43: if ($t0) goto 44 else goto 56
     # live vars:
 44: label L18
     # live vars:
 45: $t38 := [104, 101, 108, 108, 111]
     # live vars: $t38
 46: $t3 := borrow_local($t38)
     # live vars: $t3
 47: $t40 := [104, 101, 108, 108, 111]
     # live vars: $t3, $t40
 48: $t5 := borrow_local($t40)
     # live vars: $t3, $t5
 49: $t0 := ==($t3, $t5)
     # live vars: $t0
 50: if ($t0) goto 51 else goto 53
     # live vars:
 51: label L21
     # live vars:
 52: return ()
     # live vars:
 53: label L22
     # live vars:
 54: $t9 := 42
     # live vars: $t9
 55: abort($t9)
     # live vars:
 56: label L19
     # live vars:
 57: $t9 := 42
     # live vars: $t9
 58: abort($t9)
     # live vars:
 59: label L16
     # live vars:
 60: $t9 := 42
     # live vars: $t9
 61: abort($t9)
     # live vars: $t21
 62: label L13
     # live vars: $t21
 63: drop($t21)
     # live vars:
 64: $t9 := 42
     # live vars: $t9
 65: abort($t9)
     # live vars:
 66: label L10
     # live vars:
 67: $t9 := 42
     # live vars: $t9
 68: abort($t9)
     # live vars:
 69: label L7
     # live vars:
 70: $t9 := 42
     # live vars: $t9
 71: abort($t9)
     # live vars:
 72: label L4
     # live vars:
 73: $t9 := 42
     # live vars: $t9
 74: abort($t9)
     # live vars:
 75: label L1
     # live vars:
 76: $t9 := 42
     # live vars: $t9
 77: abort($t9)
}


============ disassembled file-format ==================
// Move bytecode v8
script {


main() /* def_idx: 0 */ {
L0:	$t4: vector<u8>
L1:	$t6: vector<u8>
L2:	$t14: vector<u8>
L3:	$t16: vector<u8>
L4:	$t19: u64
L5:	c: &mut u64
L6:	$t22: vector<u8>
L7:	b: &mut vector<u8>
L8:	$t30: vector<u8>
L9:	$t32: vector<u8>
L10:	$t38: vector<u8>
L11:	$t40: vector<u8>
B0:
	0: LdConst[0](Vector(U8): [5, 104, 101, 108, 108, 111])
	1: StLoc[0]($t4: vector<u8>)
	2: ImmBorrowLoc[0]($t4: vector<u8>)
	3: LdConst[0](Vector(U8): [5, 104, 101, 108, 108, 111])
	4: StLoc[1]($t6: vector<u8>)
	5: ImmBorrowLoc[1]($t6: vector<u8>)
	6: Eq
	7: BrFalse(71)
B1:
	8: LdU64(0)
	9: LdU64(0)
	10: Eq
	11: BrFalse(69)
B2:
	12: LdConst[0](Vector(U8): [5, 104, 101, 108, 108, 111])
	13: StLoc[2]($t14: vector<u8>)
	14: ImmBorrowLoc[2]($t14: vector<u8>)
	15: LdConst[0](Vector(U8): [5, 104, 101, 108, 108, 111])
	16: StLoc[3]($t16: vector<u8>)
	17: ImmBorrowLoc[3]($t16: vector<u8>)
	18: Eq
	19: BrFalse(67)
B3:
	20: LdU64(0)
	21: StLoc[4]($t19: u64)
	22: MutBorrowLoc[4]($t19: u64)
	23: StLoc[5](c: &mut u64)
	24: LdU64(1)
	25: CopyLoc[5](c: &mut u64)
	26: WriteRef
	27: LdConst[0](Vector(U8): [5, 104, 101, 108, 108, 111])
	28: StLoc[6]($t22: vector<u8>)
	29: MutBorrowLoc[6]($t22: vector<u8>)
	30: StLoc[7](b: &mut vector<u8>)
	31: LdConst[1](Vector(U8): [3, 98, 121, 101])
	32: CopyLoc[7](b: &mut vector<u8>)
	33: WriteRef
	34: MoveLoc[5](c: &mut u64)
	35: ReadRef
	36: LdU64(1)
	37: Eq
	38: BrFalse(63)
B4:
	39: MoveLoc[7](b: &mut vector<u8>)
	40: ReadRef
	41: StLoc[8]($t30: vector<u8>)
	42: ImmBorrowLoc[8]($t30: vector<u8>)
	43: LdConst[1](Vector(U8): [3, 98, 121, 101])
	44: StLoc[9]($t32: vector<u8>)
	45: ImmBorrowLoc[9]($t32: vector<u8>)
	46: Eq
	47: BrFalse(61)
B5:
	48: LdConst[0](Vector(U8): [5, 104, 101, 108, 108, 111])
	49: StLoc[10]($t38: vector<u8>)
	50: ImmBorrowLoc[10]($t38: vector<u8>)
	51: LdConst[0](Vector(U8): [5, 104, 101, 108, 108, 111])
	52: StLoc[11]($t40: vector<u8>)
	53: ImmBorrowLoc[11]($t40: vector<u8>)
	54: Eq
	55: BrFalse(57)
B6:
	56: Ret
B7:
	57: LdU64(42)
	58: Abort
B8:
	59: LdU64(42)
	60: Abort
B9:
	61: LdU64(42)
	62: Abort
B10:
	63: MoveLoc[7](b: &mut vector<u8>)
	64: Pop
	65: LdU64(42)
	66: Abort
B11:
	67: LdU64(42)
	68: Abort
B12:
	69: LdU64(42)
	70: Abort
B13:
	71: LdU64(42)
	72: Abort
B14:
	73: LdU64(42)
	74: Abort
}
}
============ bytecode verification succeeded ========
